<!--========================================================================================================

    NO-BN-PositionToolSettings.xml
	
	Include in DNA file using XPPq XML preprocessor directive <xpp:expand href="fileName.xml"/>.

	(c) Railcomplete AS, Norway, 2015-2023. All rights reserved.

=========================================================================================================-->
<xpp:bloc>



<!--========================================================================================================
	Settings and Lua functions for linear referencing methods (LRM).
=========================================================================================================-->

<!-- Position tool interface function names - suggested naming conventions:
	
	Name part							Example									Comment
	=================================	=====================================	==============================================
	<4-letter administration code>		NOBN									XXGL, NOBN, FRSR, DEDB etc
	Separator							_										
	Discipline							com										Since alignments are common to many disciplines, not only track)
	Separator							_										
	Corresponding ResX element's key	PositionTransient_Set_Alignment_Own		RC looks up the ResX alias for the key and inserts this textobject
-->

 
<!--
	Each PositionTool Lua function should accept exactly one argument of type PositionToolInfo. A PositionToolInfo element has the following fields:
    PositionToolInfo
    {
		public Point 				CursorPosition;
        public AlignmentReference	OwnAlignment;
        public AlignmentReference	RefAlignment;
        public double				OwnPos;
        public double				RefPos;
        public double?				Value;
        public bool?				OwnMileageIncreasesTowardsLeft;
        public bool?				RefMileageIncreasesTowardsLeft;
    },
	where either Value is not nil or DefaultAlignment and DefaultMileageMarkerFront is not nil.
	Note: 'double? Xxxx' means that indentifier Xxxxx is allowed to return the 'nil' value ('null' in C#).
-->

<PositionToolSettings Name="NOBN_PositionToolSettings">
  	<PositionToolTextLines>
 		<OwnAlignmentNameOrCodeOrId				OrderPriority="6" PositionToolFormatLuaFunctionName="NOBN_trk_PositionTransient_Set_Alignment_Own"/>
		<OwnAlignmentElevation					OrderPriority="4" PositionToolFormatLuaFunctionName="NOBN_trk_PositionTransient_Set_Elevation_Own"/>
		<OwnAlignmentDistanceToAlignment		OrderPriority="3" PositionToolFormatLuaFunctionName="NOBN_trk_PositionTransient_Set_Distance_Own"/>
  		<OwnAlignmentMileage					OrderPriority="2" PositionToolFormatLuaFunctionName="NOBN_trk_PositionTransient_Set_Mileage_Own"/>
  		<OwnAlignmentPos						OrderPriority="1" PositionToolFormatLuaFunctionName="NOBN_trk_PositionTransient_Set_Pos_Own"/>
		
		<ReferenceAlignmentNameOrCodeOrId		OrderPriority="5" PositionToolFormatLuaFunctionName="NOBN_trk_PositionTransient_Set_Alignment_Ref"/>
  		<ReferenceAlignmentElevation			OrderPriority="4" PositionToolFormatLuaFunctionName="NOBN_trk_PositionTransient_Set_Elevation_Ref"/>
  		<ReferenceAlignmentDistanceToAlignment	OrderPriority="3" PositionToolFormatLuaFunctionName="NOBN_trk_PositionTransient_Set_Distance_Ref"/>
  		<ReferenceAlignmentMileage				OrderPriority="2" PositionToolFormatLuaFunctionName="NOBN_trk_PositionTransient_Set_Mileage_Ref"/>
  		<ReferenceAlignmentPos					OrderPriority="1" PositionToolFormatLuaFunctionName="NOBN_trk_PositionTransient_Set_Pos_Ref"/>
  	</PositionToolTextLines>
</PositionToolSettings>



<LuaFunction Name="NOBN_trk_PositionTransient_Set_Alignment_Own()" ReturnType="String" HideFromUser="false" 
	Description="Returns a formatted string containing the current own alignment and the mileage increase direction, to be displayed by the position tool. When RC uses the function, then RC provides the required input 'positionToolInfo' which contains 'OwnAlignment' [AlignmentReferece] which is the current Own Alignment picked up by the CAD cursor, plus 'MileageIncreasesTowardsLeft' [Boolean] which tells whether the own alignment's Mileage Increases Towards Left as viewed on the user's computer screen. Note: If this function is not provided to the position tool, then RC will format a suitable default text using the current translation found in the  built-in language pack system (ResX) for key 'PositionTransient_Set_Alignment_Own'.">
	<Constructor>String NOBN_trk_PositionTransient_Set_Alignment_Own(PositionToolInfo positionToolInfo)</Constructor>
 	<Formula>
		function NOBN_trk_PositionTransient_Set_Alignment_Own(positionToolInfo)
			local oa = RC__identify(positionToolInfo.OwnAlignment)
			if positionToolInfo.OwnMileageIncreasesTowardsLeft then 
				return "Own: &lt;&lt;&lt; "..oa --prefix own alignment with left angle bracket
			else
				return "Own: "..oa.." &gt;&gt;&gt;" --postfix own alignment with right angle brackets
			end
		end
	</Formula>
</LuaFunction>

<LuaFunction Name="NOBN_trk_PositionTransient_Set_Alignment_Ref()" ReturnType="String" HideFromUser="false" 
	Description="Returns a formatted string containing the current reference alignment and the mileage increase direction, to be displayed by the position tool. When RC uses the function, then RC provides the required input 'positionToolInfo' which contains 'RefAlignment' [AlignmentReferece] which is the current Reference Alignment picked up by the CAD cursor, plus 'MileageIncreasesTowardsLeft' [Boolean] which tells whether the reference alignment's Mileage Increases Towards Left as viewed on the user's computer screen. Note: If this function is not provided to the position tool, then RC will format a suitable default text using the current translation found in the  built-in language pack system (ResX) for key 'PositionTransient_Set_Alignment_Ref'.">
	<Constructor>String NOBN_trk_PositionTransient_Set_Alignment_Ref(PositionToolInfo positionToolInfo)</Constructor>
 	<Formula>
		function NOBN_trk_PositionTransient_Set_Alignment_Ref(positionToolInfo)
			local ra = RC__identify(positionToolInfo.RefAlignment)
			if positionToolInfo.RefMileageIncreasesTowardsLeft then 
				return "Ref: &lt;&lt;&lt; "..ra --prefix reference alignment with left angle bracket
			else
				return "Ref: "..ra.." &gt;&gt;&gt;" --postfix reference alignment with right angle brackets
			end
		end
	</Formula>
</LuaFunction>



<LuaFunction Name="NOBN_trk_PositionTransient_Set_Distance_Own()" ReturnType="String" HideFromUser="false" 
	Description="Returns a formatted string containing the current CAD cursor's distance to own alignment, to be displayed by the position tool. When RC uses the function, then RC provides the required input 'positionToolInfo' which contains 'Value' [Double] [m] which is the horizontal Distance (lateral offset) from the CAD cursor to the current Own alignment. Note: If this function is not provided to the position tool, then RC will format a suitable default text using the current translation found in the  built-in language pack system (ResX) for key 'PositionTransient_Set_Distance_Own'.">
 	<Constructor>String NOBN_trk_PositionTransient_Set_Distance_Own(PositionToolInfo positionToolInfo)</Constructor>
 	<Formula>
		function NOBN_trk_PositionTransient_Set_Distance_Own(positionToolInfo)
			local od = positionToolInfo.Value
			return string.format("Own/Distance %.03f",od)
		end 
	</Formula>
</LuaFunction>

<LuaFunction Name="NOBN_trk_PositionTransient_Set_Distance_Ref()" ReturnType="String" HideFromUser="false" 
	Description="Returns a formatted string containing the current CAD cursor's distance to the current reference alignment, to be displayed by the position tool. When RC uses the function, then RC provides the required input 'positionToolInfo' which contains 'Value' [Double] [m] which is the horizontal Distance (lateral offset) from the CAD cursor to the current Reference alignment. Note: If this function is not provided to the position tool, then RC will format a suitable default text using the current translation found in the  built-in language pack system (ResX) for key 'PositionTransient_Set_Distance_Own'.">
 	<Constructor>String NOBN_trk_PositionTransient_Set_Distance_Ref(PositionToolInfo positionToolInfo)</Constructor>
 	<Formula>
		function NOBN_trk_PositionTransient_Set_Distance_Ref(positionToolInfo)
			local rd = positionToolInfo.Value
			return string.format("Ref/Distance %.03f",rd)
		end 
	</Formula>
</LuaFunction>




<!-- TODO: CLFEY skal lage beskrivelser for resten her, rakk det ikke før jeg må i møte med NO nå... -->
<LuaFunction Name="NOBN_trk_PositionTransient_Set_Elevation_Own()" ReturnType="String" HideFromUser="false" 
	Description="Returns a formatted string containing the current CAD cursor's elevation as measured in own alignment, to be displayed by the position tool. When RC uses the function, then RC provides the required input 'positionToolInfo' which contains 'Value' [Double] [m] which is the Elevation (vertical profile Z value) measured in Own alignment where the CAD cursor's projection is. Note: If this function is not provided to the position tool, then RC will format a suitable default text using the current translation found in the  built-in language pack system (ResX) for key 'PositionTransient_Set_Elevation_Own'.">
	<Constructor>String NOBN_trk_PositionTransient_Set_Elevation_Own(PositionToolInfo positionToolInfo)</Constructor>
 	<Formula>
		function NOBN_trk_PositionTransient_Set_Elevation_Own(positionToolInfo)
			local oe = positionToolInfo.Value
			return oe and string.format("Own/Elevation %.03f",oe) or "Own/Elevation (no data)"
		end
	</Formula>
</LuaFunction>

<LuaFunction Name="NOBN_trk_PositionTransient_Set_Elevation_Ref()" ReturnType="String" HideFromUser="false" 
	Description="Returns a formatted string containing the current CAD cursor's elevation as measured in the current reference alignment, to be displayed by the position tool. When RC uses the function, then RC provides the required input 'positionToolInfo' which contains 'Value' [Double] which is the Elevation (vertical profile Z value) measured in Reference alignment where the CAD cursor's projection is. Note: If this function is not provided to the position tool, then RC will format a suitable default text using the current translation found in the  built-in language pack system (ResX) for key 'PositionTransient_Set_Elevation_Ref'.">
	<Constructor>String NOBN_trk_PositionTransient_Set_Elevation_Ref(PositionToolInfo positionToolInfo)</Constructor>
 	<Formula>
		function NOBN_trk_PositionTransient_Set_Elevation_Ref(positionToolInfo)
			local re = positionToolInfo.Value
			return re and string.format("Ref/Elevation %.03f",re) or  "Ref/Elevation (no data)"
		end
	</Formula>
</LuaFunction>
  
<LuaFunction Name="NOBN_trk_PositionTransient_Set_Mileage_Own()" ReturnType="String" HideFromUser="false" 
	Description="Returns a formatted string containing the current CAD cursor's chainage (mileage, kilometrage) as measured along own alignment, to be displayed by the position tool. The own mileage is the result of an initial start mileage plus the distance along measured from start of alignmment up to the cursor's projection onto it, adjusted by possible chain breaks along the own alignment. Mileage information can be inspected and adjusted from the Alignment Manager tool. When RC uses the function, then RC provides the required input 'positionToolInfo' which contains 'Value' [Double] [m] which is the mileage measured along the Own alignment where the CAD cursor's projection is. Note: If this function is not provided to the position tool, then RC will format a suitable default text using the current translation found in the  built-in language pack system (ResX) for key 'PositionTransient_Set_Mileage_Own'.">
	<Constructor>String NOBN_trk_PositionTransient_Set_Mileage_Own(PositionToolInfo positionToolInfo)</Constructor>
 	<Formula>
		function NOBN_trk_PositionTransient_Set_Mileage_Own(positionToolInfo)
			local om = positionToolInfo.Value
			return string.format("Own profile %.06f km",om/1000)
		end
	</Formula>
</LuaFunction>

	<!-- TODO: Replace absolute linear measurement with relative, when EIHOV has merged this feature into github develop. -->
<LuaFunction Name="NOBN_trk_PositionTransient_Set_Mileage_Ref()" ReturnType="String" HideFromUser="false" 
	Description="Returns a formatted string containing the current CAD cursor's chainage (mileage, kilometrage) as measured along the current reference alignment, to be displayed by the position tool. The reference mileage is the result of an initial start mileage plus the distance along measured from start of the reference alignmment up to the cursor's projection onto it, adjusted by possible chain breaks along the reference alignment. Mileage information can be inspected and adjusted from the Alignment Manager tool. When RC uses the function, then RC provides the required input 'positionToolInfo' which contains 'Value' [Double] [m] which is the mileage measured along the Reference alignment where the CAD cursor's projection is. Note: If this function is not provided to the position tool, then RC will format a suitable default text using the current translation found in the  built-in language pack system (ResX) for key 'PositionTransient_Set_Mileage_Ref'.">
 	<Formula>
		function NOBN_trk_PositionTransient_Set_Mileage_Ref(positionToolInfo)
			local rm = positionToolInfo.Value
			return string.format("Ref profile %.06f km",rm/1000)
			--TODO: Adapt a *relative* address presentation when mileage referents have been added to RC:
			--return string.format("Km.%s+%06.01f",closestPrecedingReferentName,distanceInRefAlignmentToClosestPrecedingReferentPlusItsStationValue)
		end
	</Formula>
</LuaFunction>

<LuaFunction Name="NOBN_trk_PositionTransient_Set_Pos_Own()" ReturnType="String" HideFromUser="false" 
	Description="Returns a formatted string containing the current CAD cursor's own alignment's DistancAalong as measured along the own alignment, to be displayed by the position tool. The own Pos is the distance along the centreline of the own alignment's horizontal geometry, measured from startPos=0 of the own alignmment up to the cursor's projection onto it, unaffected by possible chain breaks. Position information can be inspected and adjusted from the Alignment Manager tool. When RC uses the function, then RC provides the required input 'positionToolInfo' which contains 'Value' [Double] [m] which is the Pos measured along the Own alignment where the CAD cursor's projection is. Note: Vertical profile does not necessarily start or end where the horizontal geometry starts or ends. Note: If this function is not provided to the position tool, then RC will format a suitable default text using the current translation found in the  built-in language pack system (ResX) for key 'PositionTransient_Set_Pos_Own'.">
	<Constructor>String NOBN_trk_PositionTransient_Set_Pos_Own(PositionToolInfo positionToolInfo)</Constructor>
 	<Formula>
		function NOBN_trk_PositionTransient_Set_Pos_Own(positionToolInfo)
			local op = positionToolInfo.Value
			return string.format("Own pos %.03f m",op)
		end
	</Formula>
</LuaFunction>

<LuaFunction Name="NOBN_trk_PositionTransient_Set_Pos_Ref()" ReturnType="String" HideFromUser="false" 
	Description="Returns a formatted string containing the current CAD cursor's reference alignment's DistanceAlong as measured along the current reference alignment, to be displayed by the position tool. The Reference Pos is the distance along the centreline of the reference alignment's horizontal geometry, measured from startPos=0 of the reference alignmment up to the cursor's projection onto it, unaffected by possible chain breaks. Position information can be inspected and adjusted from the Alignment Manager tool. When RC uses the function, then RC provides the required input 'positionToolInfo' which contains 'Value' [Double] [m] which is the Pos measured along the Reference alignment where the CAD cursor's projection is. Note: If this function is not provided to the position tool, then RC will format a suitable default text using the current translation found in the  built-in language pack system (ResX) for key 'PositionTransient_Set_Pos_Ref'.">
	<Constructor>String NOBN_trk_PositionTransient_Set_Pos_Ref(PositionToolInfo positionToolInfo)</Constructor>
 	<Formula>
		function NOBN_trk_PositionTransient_Set_Pos_Ref(positionToolInfo)
			local rp = positionToolInfo.Value
			return string.format("Ref pos %.03f m",rp)
		end
	</Formula>
</LuaFunction>
		


<!--========================================================================================================
    End of file 
=========================================================================================================-->
</xpp:bloc>
