<!--========================================================================================================

    NO-BN-Tables.xml
	
	Include in DNA file using XPPq XML preprocessor directive <xpp:expand href="fileName.xml" />.

	(c) Railcomplete AS, Norway, 2015-2021. All rights reserved.
	
=========================================================================================================-->
<xpp:bloc>



<!--========================================================================================================
	COMMON
	USERDEFINED TABLE
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableUserdefined" Name="JBTFE_DIV Brukerdefinert tabell"
				Layer="JBTFE_TABELLER" Color="ByLayer"
				Group="Felles/Brukerdefinert tabell"
				>

		<RelationSpace>tabell</RelationSpace>
			  
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Brukerdefinert" >
			<Variant Name="Brukerdefinert" />
		</Variants>

		<!-- Brukerdefinert -->
		<InsertTable VariantName="Brukerdefinert" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Brukerdefinert</Title>
				<IncludeTitle>true</IncludeTitle>
				<ShowInvisibleObjects>false</ShowInvisibleObjects>
				<!-- Default start is an empty ObjectManager filter selection, to avoid axcessive table size at insertion time. -->
				<!-- <ObjectManagerFilter></ObjectManagerFilter> -->
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>false</LuaFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<Font>RC-STANDARD</Font>
				<TitleTextHeight>5</TitleTextHeight>
				<HeaderTextHeight>3.5</HeaderTextHeight>
				<DataTextHeight>2.5</DataTextHeight>
				<VerticalCellMargin>1.0</VerticalCellMargin>
				<HorizontalCellMargin>1.0</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>0</WrapDepth>
				<WrapSpacing>0</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>false</RepeatHeaders>
				<TableFormat>Standard</TableFormat>
				<Columns>
					<ColumnSpecification>
					<Headers />
					<Width>50</Width>
					<Data>Name</Data>
					<Title>Navn</Title>
					<Sort />
					<Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
					<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
					<Headers />
					<Width>50</Width>
					<Data>string.format("Km.%.3f",ReferenceMileage/1000)</Data>
					<Title>Km eget spor</Title>
					<Sort>Ascending</Sort>
					<Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
					<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>10272f0b-a413-49f6-bd6a-b520ea345d97</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>

	</ObjectType>



<!--========================================================================================================
	COMMON
	BOARDS AND POLES
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableWaysideBoards" Name="JBTFE_DIV Skiltplantabell"
				Layer="JBTFE_TABELLER" Color="ByLayer"
				Group="Felles/Skiltplantabeller"
				>

		<RelationSpace>tabell</RelationSpace>
			  		
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Skiltplan tabell (tverrfaglig trafikkskiltplan)" >
			<Variant Name="Skiltplan tabell (tverrfaglig trafikkskiltplan)" />
			<Variant Name="Arbeidsområder" />
			<Variant Name="Stasjonsskilt (publikumsskilting)" />
			<Variant Name="Rømningsskilt i tunnel" />
			<Variant Name="Høyspenningsfare på KL-master" />
		</Variants>
		
		<!-- Skiltplan tabell (tverrfaglig trafikkskiltplan) -->
		<InsertTable VariantName="Skiltplan tabell" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Skiltplan tabell</Title>
				<IncludeTitle>true</IncludeTitle>
				<ShowInvisibleObjects>false</ShowInvisibleObjects>
				<ObjectManagerFilter></ObjectManagerFilter>
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>false</LuaFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<TitleTextHeight>12</TitleTextHeight>
				<HeaderTextHeight>10</HeaderTextHeight>
				<DataTextHeight>8</DataTextHeight>
				<VerticalCellMargin>1.5</VerticalCellMargin>
				<HorizontalCellMargin>1.5</HorizontalCellMargin>
				<BlockScale>5</BlockScale>
				<MinRowHeight>3</MinRowHeight>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>0</WrapDepth>
				<WrapSpacing>0</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>false</RepeatHeaders>
				<TableFormat>Standard</TableFormat>
				<Columns>
					<ColumnSpecification>
						<Headers />
						<Width>30</Width>
						<Data>if (alignment.type ~= "mainTrack" or alignment.mainDir == "down") and (dir == "up" or dir == "both") then 
	pri = 2000
elseif (alignment.type ~= "mainTrack" or alignment.mainDir == "down") and (dir == "down" or dir == "both") then  
	pri = 3000
elseif (alignment.type == "mainTrack" and alignment.mainDir == "up") and (dir == "up" or dir == "both") then  
	pri = 0
elseif (alignment.type == "mainTrack" and alignment.mainDir == "up") and (dir == "down") then  
	pri = 1000
else 
	pri = -1,_warning
end 

local function is(pattern)
	if Variant == nil then 
		return false
	else 
		return string.match(Variant,pattern)
	end
end

--Signal prioritering
if is("60") then delta = 0
elseif is("62") then delta = 1
elseif is("101") then delta = 2
elseif is("refleks") then delta = 3
elseif is("102") then delta = 4
elseif is("68C") then delta = 5
elseif is("72") then delta = 6

--Hastighetsskilt
elseif is("68A") or is("68B") then delta = 7
elseif is("68F") then delta = 8
elseif is("68G") then delta = 9
elseif is("68D") then delta = 10
elseif is("69") then delta = 11

--Toglengdeskilt
elseif is("74") then delta = this.trainLength
else delta = 40
end

return pri + delta</Data>
						<Title>Pri</Title>
						<Sort>Ascending</Sort>
						<Guid>be5a9dbd-24ed-4eca-8694-c8bc64016af4</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Banestrekning</Title>
							</Header>
							<Header>
								<Title>XXXX</Title>
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title>Stedsreferanse</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>string.format("%3d %03d",ReferenceMileage/1000,(ReferenceMileage+0.5)%1000) --No period, avoid AutoCAD interpretation</Data>
						<Title>Posisjon skilt (km)</Title>
						<Sort>Ascending</Sort>
						<Guid>b92803e9-ec1a-485e-848b-2c512ce4a309</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Banestrekning</Title>
							</Header>
							<Header>
								<Title>XXXX</Title>
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title>Stedsreferanse</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>local s = rel_Object_Has_NssBaliseGroup
						local a, n = getRelatedObjects(s)
if n == 0 then
	return " "
else
	if a[0].Variant == "Repeterbalisegruppe" then
		target=a[0].Relations[rel_NssBaliseGroup_ObtainsControlInformationFrom_Object][0]
				
	elseif a[0].Variant == "Hastighetsbalisegruppe" then
		target=a[0].Relations[rel_NssBaliseGroup_HasBrakingCurveTargetIn_NssBaliseGroup][0].Relations[rel_NssBaliseGroup_HasPositionDeterminedBy_NssBalise][0]
	else
		target = a[0].Relations[rel_NssBaliseGroup_HasPositionDeterminedBy_NssBalise][0]
	end
	dif=target.ReferenceMileage-a[0].Relations[rel_NssBaliseGroup_HasPositionDeterminedBy_NssBalise][0].ReferenceMileage
	d = math.floor(dif + 0.5)
	if d == 0 then
		return " "
	else
		return math.abs(d)
	end
end</Data>
						<Title>Avstand merke [m]</Title>
						<Sort />
						<Guid>343c68ed-38b2-49de-aef9-5359fe321add</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title>Fall</Title>
							</Header>
						</Headers>
						<Width>50</Width>
						<Data>local a,d
local s = rel_Object_Has_NssBaliseGroup
local r, n = getRelatedObjects(s)
if n == 0 then 
	return " "
else
	a = r[0].Relations[rel_NssBaliseGroup_HasBrakingCurveTargetIn_NssBaliseGroup]			--Assume that start item has only one target item
	--First, find distance
	d = math.abs(a:distance())
	if (d == 0) then return " "	end
	--Second, find difference in elevation above sea level:
	t1 = getAlignmentInfo(this)
	t2 = getAlignmentInfo(a[0])
	local e1 = t1.elevation
	local e2 = t2.elevation
	local g1 = t1.gradient
	local g2 = t2.gradient

	if (tostring(dir) == "down") then
		g1 = -g1
		g2 = -g2
	elseif (tostring(dir) ~= "up") then
		return "*ERROR - bad direction*"
	end
		
	local g3 = (e2 - e1) / d * 1000
	
	-- Reduce info if gradients at each end are nearly identical to the average gradient: 
	if (math.abs(g2-g1) &lt; .01) and (math.abs(g3-g1) &lt; .01) then
		if(g3 &lt; 0) then return string.format("%.01f",-g3) end
	else 
		if (g1 &lt; 0) then return string.format("%.1f",-g1) end
	end
end
</Data>
						<Title>I kjøre- retn. [o/oo]</Title>
						<Sort />
						<Guid>7eeee3be-c021-461d-a91e-56ee876b1257</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title>Skilt</Title>
							</Header>
							<Header>
								<Title>Øvrige spor</Title>
							</Header>
						</Headers>
						<Width>70</Width>
						<Data>if (alignment.type ~= "mainTrack" or alignment.mainDir == "down") and (dir == "up" or dir == "both") then 
	return getInvertedBlockImage(false,false,true,3)
end </Data>
						<Title>I km-retn.</Title>
						<Sort />
						<Guid>9df3e927-ae52-4c1e-be75-fdeee7876f95</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title>Skilt</Title>
							</Header>
							<Header>
								<Title>Øvrige spor</Title>
							</Header>
						</Headers>
						<Width>70</Width>
						<Data>if (alignment.type ~= "mainTrack" or alignment.mainDir == "down") and (dir == "down") then  
	return getInvertedBlockImage(false,false,true,3)
end </Data>
						<Title>Mot km-retn.</Title>
						<Sort />
						<Guid>b178d976-32be-4886-b30c-5a1c6b27a788</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title>Skilt</Title>
							</Header>
							<Header>
								<Title>Hovedspor</Title>
							</Header>
						</Headers>
						<Width>70</Width>
						<Data>if (alignment.type == "mainTrack" and alignment.mainDir == "up") and (dir == "up" or dir == "both") then  
	return getInvertedBlockImage(false,false,true,3)
end</Data>
						<Title>I km-retn.</Title>
						<Sort />
						<Guid>694da97b-ad25-46e1-ae9c-3f4927febb72</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title />
							</Header>
							<Header>
								<Title>Skilt</Title>
							</Header>
							<Header>
								<Title>Hovedspor</Title>
							</Header>
						</Headers>
						<Width>70</Width>
						<Data>if (alignment.type == "mainTrack" and alignment.mainDir == "up") and (dir == "down") then  
	return getInvertedBlockImage(false,false,true,3)
end </Data>
						<Title>Mot km-retn.</Title>
						<Sort />
						<Guid>96431658-43eb-4e9a-ad75-adbb1efe6f72</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Dokumentnummer:</Title>
							</Header>
							<Header>
								<Title>Revisjon:</Title>
							</Header>
							<Header>
								<Title>Dato</Title>
							</Header>
							<Header>
								<Title />
							</Header>
						</Headers>
						<Width>350</Width>
						<Data>local s0 = ""
local s1 = ""
local s5 = ""
if Variant then s0 = Variant else s0 = "" end
if (attachment == nil) then
	s1 = ""
	s5 = ""
else
	if getCollectionLength(Relations[rel_Object_Has_NssBaliseGroup]) == 0 then
	
		--TODO: Bruk heller getCollectionLength(Relations[rel_MarkerPole_Locates_AxleCounter] &gt; 0 etc
		if Variant:match("64E") and Relations[rel_MarkerPole_Locates_AxleCounter] and Relations[rel_MarkerPole_Locates_AxleCounter][0] then
			s1 = "\nTilhører \t\t"..Relations[rel_MarkerPole_Locates_AxleCounter][0].RcType
			
		elseif Variant:match("68") or Variant:match("64E") or Variant:match("Signal 60") then
			obj = getNearbyPointObjects2D(15)
			s1 = " "
			for i = 0,obj.count-1 do
				if obj[i].Variant:match("balisegruppe") or obj[i].RcType:match("sporingsindikator")  then
					if obj[i].Relations[rel_NssBaliseGroup_HasBrakingCurveTargetIn_NssBaliseGroup] then
						if obj[i].Relations[rel_NssBaliseGroup_HasBrakingCurveTargetIn_NssBaliseGroup].Count ~= 0 then 
							s1 = "\nTilhører \t\t"..obj[i].name.." med målpunkt i NSS_balisegruppe "..obj[i].Relations[rel_NssBaliseGroup_HasBrakingCurveTargetIn_NssBaliseGroup][0].name
							break
						else 
							s1 = "\nTilhører \t\t"..obj[i].name
							break
						end
					end
				elseif obj[i].RcType:match("Telle") and Variant:match("64E") then
					s1 = "\nTilhører \t\t"..obj[i].RcType
					break
				end	
			end
		else
			s1 = " "
		end
		
		if Variant:match("kryss") then
			obj = getNearbyPointObjects2D(10)
			s1 = " "
			for i = 0,obj.count-1 do
				if obj[i].RcType:match("veksel") then
					s1="\nTilhører \t\t".."V."..tostring(obj[i].code)
					break
				elseif obj[i].RcType:match("Drivmaskin") then
					Cd = tostring(obj[i].name)
					place = string.find(Cd,"%.")
					s1 = "\nTilhører \t\t".."V."..string.sub(Cd,1,place-1)	
					break
				end				
			end
		end	
		
	else 
		if Relations[rel_Object_Has_NssBaliseGroup][0].Relations[rel_NssBaliseGroup_HasBrakingCurveTargetIn_NssBaliseGroup] then
			if Relations[rel_Object_Has_NssBaliseGroup][0].Relations[rel_NssBaliseGroup_HasBrakingCurveTargetIn_NssBaliseGroup].Count ~= 0 then 
				s1 = "\nTilhører \t\t"..Relations[rel_Object_Has_NssBaliseGroup][0].name.." med målpunkt i NSS_balisegruppe "..Relations[rel_Object_Has_NssBaliseGroup][0].Relations[rel_NssBaliseGroup_HasBrakingCurveTargetIn_NssBaliseGroup][0].name
			end
		else
			s1 = "\nTilhører \t\t"..Relations[rel_Object_Has_NssBaliseGroup][0].name
		end
	end
	
	if (Attachment.Variant == nil) then 
		s5 = ""
	elseif Attachment.RcType:match("SPB") then
		s5 = "\nMontert på \t\t"..this.Attachment.Variant
	elseif Attachment.RcType:match("SA%-SIG") then
		s5="\nMontert på \t\t"..tostring(Attachment.name)
	else
		obj= getNearbyPointObjects2D(10)
		for i=0,obj.count-1 do
			if obj[i].RcType:match("SA%-SIG") and not this.RcType:match("Signal 68") then
				s5="\nMontert på \t\t"..tostring(obj[i].name)
				break
			elseif obj[i].RcType:match("SPB") then
				s5="\nMontert på \t\t"..tostring(obj[i].Variant)
				break
			else
				s5 = "\nMontert på \t\t"..this.Attachment.Variant				
			end				
		end		
			
	end
end
return s0..s1..s5
</Data>
						<Title>Anmerkning</Title>
						<Sort />
						<Guid>089c3e0b-5fd8-44ce-8e86-9dc08934f5ec</Guid>
						<Alignment>MiddleLeft</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Dokumentnummer:</Title>
							</Header>
							<Header>
								<Title>Revisjon:</Title>
							</Header>
							<Header>
								<Title>Dato</Title>
							</Header>
							<Header>
								<Title />
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>return Alignment.name</Data>
						<Title>Spor</Title>
						<Sort>Ascending</Sort>
						<Guid>88a08f68-05ba-4e5c-a7b6-4ed8d281a731</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Dokumentnummer:</Title>
							</Header>
							<Header>
								<Title>Revisjon:</Title>
							</Header>
							<Header>
								<Title>Dato:</Title>
							</Header>
							<Header>
								<Title />
							</Header>
						</Headers>
						<Width>50</Width>
						<Data>d = math.abs(DistanceToAlignment)
if d &lt; 1.8 then return "Bad dist: "..d  --less than this and the poor sign/board will be hit by a train  
elseif RightSided then return "Høyre"
else return "Venstre" 
end</Data>
						<Title>Side av spor</Title>
						<Sort />
						<Guid>0352ae4c-7592-4694-9a4f-5a154ef4fbea</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Dokumentnummer:</Title>
							</Header>
							<Header>
								<Title>Revisjon:</Title>
							</Header>
							<Header>
								<Title>Dato</Title>
							</Header>
							<Header>
								<Title />
							</Header>
						</Headers>
						<Width>25</Width>
						<Data>local function is(pattern)
	if Variant == nil then return false
	else return string.match(Variant,pattern)
	end
end

if is("68") or is("69") or is("74")		then return "SO"
elseif is("64A") 						then return "SE"
elseif is("64B") or is("65") 			then return "E"
elseif is("63") or is("75") 			then return "O"
elseif is("kjedebrudd") 				then return "SO"
elseif is("bevegelig kryss") 			then return "SO"
else
	return "S"
end</Data>
						<Title>Fag</Title>
						<Sort />
						<Guid>549bdf1f-00d5-43dd-99a4-c079f24ac2c4</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Dokumentnummer:</Title>
							</Header>
							<Header>
								<Title>Revisjon:</Title>
							</Header>
							<Header>
								<Title>Dato</Title>
							</Header>
							<Header>
								<Title />
							</Header>
						</Headers>
						<Width>90</Width>
						<Data>FDVBaneDataObjektID</Data>
						<Title>BaneData ID</Title>
						<Sort />
						<Guid>204f9496-eefb-4c67-9a4d-1fdf83e6b0d4</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>b92803e9-ec1a-485e-848b-2c512ce4a309</string>
					<string>88a08f68-05ba-4e5c-a7b6-4ed8d281a731</string>
					<string>be5a9dbd-24ed-4eca-8694-c8bc64016af4</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>
		
	</ObjectType>



<!--========================================================================================================
	COMMON / TRACK AND EMBANKMENT
	DATA EXCHANGE TABLE
	Track design checking
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableTrackDesign" Name="JBTFE_DIV Sporprosjekteringstabell"
				Layer="JBTFE_TABELLER" Color="ByLayer"
				Group="Overbygning/Sporprosjekteringstabeller"
				>

		<RelationSpace>tabell</RelationSpace>
			  
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Track data overview" >
			<Variant Name="Track data overview" />
			<Variant Name="Track connectivity" />
		</Variants>

		<!-- Track data overview -->
		<InsertTable VariantName="Track data overview" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Track data overview</Title>
				<IncludeTitle>true</IncludeTitle>
				<ShowInvisibleObjects>false</ShowInvisibleObjects>
				<ObjectManagerFilter></ObjectManagerFilter>
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>RcType == rctype_Track</LuaFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<TitleTextHeight>5</TitleTextHeight>
				<HeaderTextHeight>3.5</HeaderTextHeight>
				<DataTextHeight>2.5</DataTextHeight>
				<VerticalCellMargin>1</VerticalCellMargin>
				<HorizontalCellMargin>1</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<MinRowHeight>3</MinRowHeight>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>0</WrapDepth>
				<WrapSpacing>0</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>false</RepeatHeaders>
				<VerticalNumbering>
					<Enabled>true</Enabled>
					<IsVertical>true</IsVertical>
					<Location>Left</Location>
					<NumberFormat>Numbers</NumberFormat>
					<TextHeight>2</TextHeight>
					<HideBorders>true</HideBorders>
					<Alignment>MiddleCenter</Alignment>
					</VerticalNumbering>
				<HorizontalNumbering>
					<Enabled>false</Enabled>
					<IsVertical>false</IsVertical>
					<Location>Bottom</Location>
					<NumberFormat>Numbers</NumberFormat>
					<TextHeight>2</TextHeight>
					<HideBorders>true</HideBorders>
					<Alignment>MiddleCenter</Alignment>
				</HorizontalNumbering>
				<TableFormat>Standard</TableFormat>
				<Font>RC-STANDARD</Font>
				<Columns>
					<ColumnSpecification>
					<Guid>c493578d-b4dc-48fe-8af8-c55a96dc0556</Guid>
					<Headers>
						<Header Name="General" />
						<Header Name="Object Type" />
					</Headers>
					<Width>40</Width>
					<Sort>Ascending</Sort>
					<Alignment>MiddleCenter</Alignment>
					<Data>RcType</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
					<Headers>
						<Header Name="General" />
						<Header Name="Track name" />
					</Headers>
					<Width>100</Width>
					<Sort>Ascending</Sort>
					<Alignment>MiddleCenter</Alignment>
					<Data>name</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>36dd2219-d127-489f-a924-69c8d4d0c885</Guid>
					<Headers>
						<Header Name="General" />
						<Header Name="Horizontal length [m]" />
					</Headers>
					<Width>40</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>string.format("%.03f",RcAlignment.EndMileage-RcAlignment.StartMileage)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>2dffb58b-f6a6-457b-98df-e2ffb37a285f</Guid>
					<Headers>
						<Header Name="General" />
						<Header Name="Direction of increasing mileage (assuming fairly horizontal tracks in current UCS)" />
					</Headers>
					<Width>40</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>
-- Compare the X-coordinates (0 decimal degrees = East) for start and end of alignment in current User Coordinate System:
o = DocumentData.Document.Database.Ucsorg
u = DocumentData.Document.Database.Ucsxdir
ang = math.atan(u.y,u.x)
p = RcAlignment.StartPoint
u1x =  (p.x-o.x)*math.cos(ang) + (p.y-o.y)*math.sin(ang)
--u1y = -(p.x-o.x)*math.sin(ang) + (p.y-o.y)*math.cos(ang)
p = RcAlignment.EndPoint
u2x =  (p.x-o.x)*math.cos(ang) + (p.y-o.y)*math.sin(ang)
--u2y = -(p.x-o.x)*math.sin(ang) + (p.y-o.y)*math.cos(ang)
return string.format("%s",u2x-u1x > 0 and "Right" or "Left")					
					</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>0bf10925-d101-482f-be0b-dfbe2239b92d</Guid>
					<Headers>
						<Header Name="Start" />
						<Header Name="Mileage [km]" />
					</Headers>
					<Width>40</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>NOBN_trk_toKm(RcAlignment.StartMileage,6)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>aaa10872-cf3a-4246-8889-0acb9f79275e</Guid>
					<Headers>
						<Header Name="Start" />
						<Header Name="Tangent direction [WCS decimal degrees (East=0, positive=CCW)]" />
					</Headers>
					<Width>40</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>
						ang = (360 + math.atan(RcAlignment.StartTangent.Y,RcAlignment.StartTangent.X)*180/math.pi) % 360 
						if ang > 180 then ang = ang - 360 end
						return string.format("%.03f",ang)
					</Data>
				</ColumnSpecification>
					<ColumnSpecification>
					<Guid>f90bb4a3-6c04-4d52-ada9-e1bd55a76c1b</Guid>
					<Headers>
						<Header Name="Start" />
						<Header Name="Gradient [o/oo]" />
					</Headers>
					<Width>40</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>x = RcAlignment.StartTangent.x
y = RcAlignment.StartTangent.y
z = RcAlignment.StartTangent.z
g = 1000 * math.sqrt(z^2 / (x^2 + y^2))
return string.format("%.03f",g)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>446b7aaf-02ea-45f4-8276-a4fab794ef67</Guid>
					<Headers>
						<Header Name="End" />
						<Header Name="Mileage [km]" />
					</Headers>
					<Width>40</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>NOBN_trk_toKm(RcAlignment.EndMileage,6)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>cb9d1988-966c-437c-bc84-7e0564e0a83f</Guid>
					<Headers>
						<Header Name="End" />
						<Header Name="Tangent direction [WCS decimal degrees (East=0)]" />
					</Headers>
					<Width>40</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>
						ang = (360 + math.atan(RcAlignment.EndTangent.Y,RcAlignment.EndTangent.X)*180/math.pi) % 360 
						if ang > 180 then ang = ang - 360 end
						return string.format("%.03f",ang)
					</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>9a7d4f86-aa8a-4381-8070-27fc3f12c35e</Guid>
					<Headers>
						<Header Name="End" />
						<Header Name="Gradient [o/oo]" />
					</Headers>
					<Width>40</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>x = RcAlignment.EndTangent.x
y = RcAlignment.EndTangent.y
z = RcAlignment.EndTangent.z
g = 1000 * math.sqrt(z^2 / (x^2 + y^2))
return string.format("%.03f",g)</Data>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>c493578d-b4dc-48fe-8af8-c55a96dc0556</string>
					<string>71b321ec-4bc3-493d-974b-2b01236d720c</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>

		<!-- Track connectivity -->
		<InsertTable VariantName="Track connectivity" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<ColumnSelectionSelf>true</ColumnSelectionSelf>
				<ColumnSelectionFromMasterTable>false</ColumnSelectionFromMasterTable>
				<Title>Track connectivity - Drawing2</Title>
				<IncludeTitle>true</IncludeTitle>
				<ShowInvisibleObjects>false</ShowInvisibleObjects>
				<ObjectManagerFilter />
				<ObjectManagerFilterList />
				<ObjectTypeBrowser>false</ObjectTypeBrowser>
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>RcType == rctype_TrackContinuation or RcType == rctype_SwitchCrossing or RcType == rctype_Switch</LuaFilter>
				<UseDataSetFilter>false</UseDataSetFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<TitleTextHeight>5</TitleTextHeight>
				<HeaderTextHeight>3.5</HeaderTextHeight>
				<DataTextHeight>2.5</DataTextHeight>
				<VerticalCellMargin>1</VerticalCellMargin>
				<HorizontalCellMargin>1</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<MinRowHeight>3</MinRowHeight>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>0</WrapDepth>
				<WrapSpacing>0</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>false</RepeatHeaders>
				<VerticalNumbering>
					<Enabled>true</Enabled>
					<IsVertical>true</IsVertical>
					<Location>Left</Location>
					<NumberFormat>Numbers</NumberFormat>
					<TextHeight>2</TextHeight>
					<HideBorders>true</HideBorders>
					<Alignment>MiddleCenter</Alignment>
				</VerticalNumbering>
				<HorizontalNumbering>
					<Enabled>false</Enabled>
					<IsVertical>false</IsVertical>
					<Location>Bottom</Location>
					<NumberFormat>Numbers</NumberFormat>
					<TextHeight>2</TextHeight>
					<HideBorders>true</HideBorders>
					<Alignment>MiddleCenter</Alignment>
				</HorizontalNumbering>
				<TableFormat>Standard</TableFormat>
				<Font>RC-STANDARD</Font>
				<Columns>
					<ColumnSpecification>
					<Guid>c493578d-b4dc-48fe-8af8-c55a96dc0556</Guid>
					<Headers>
						<Header Name="Object Type" />
					</Headers>
					<Width>40</Width>
					<HideColumn>false</HideColumn>
					<SortOption>Ascending</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>RcType</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>d96a44c9-cc91-493e-9571-4a66279993fd</Guid>
					<Headers>
						<Header Name="Nr" />
					</Headers>
					<Width>40</Width>
					<HideColumn>false</HideColumn>
					<SortOption>Ascending</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>RC__identify()</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
					<Headers>
						<Header Name="Own / Target Alignment Name" />
					</Headers>
					<Width>100</Width>
					<HideColumn>false</HideColumn>
					<SortOption>None</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>alignment.name .. " -&gt; " ..TargetAlignment.name</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
					<Headers>
						<Header Name="Own alignment mileage" />
					</Headers>
					<Width>50</Width>
					<HideColumn>false</HideColumn>
					<SortOption>Ascending</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>string.format("Km.%.06f",Mileage/1000)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>2bbb04e3-a9c8-4b4e-91ec-cf73511c0af4</Guid>
					<Headers>
						<Header Name="Reference alignment" />
					</Headers>
					<Width>100</Width>
					<HideColumn>false</HideColumn>
					<SortOption>None</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>getAlignmentInfo(getAlignmentInfo().ReferenceAlignmentId).AlignmentName</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>a9d3e94b-917a-4eb3-b82f-fdbc11784728</Guid>
					<Headers>
						<Header Name="Reference mileage" />
					</Headers>
					<Width>50</Width>
					<HideColumn>false</HideColumn>
					<SortOption>None</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>string.format("Km.%.06f",ReferenceMileage/1000)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>0bf10925-d101-482f-be0b-dfbe2239b92d</Guid>
					<Headers>
						<Header Name="Continuity check" />
					</Headers>
					<Width>150</Width>
					<HideColumn>false</HideColumn>
					<SortOption>None</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>msg = mc_Continuity
									return msg:lower():match("ok") and "OK" or msg</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>446b7aaf-02ea-45f4-8276-a4fab794ef67</Guid>
					<Headers>
						<Header Name="Elevation check" />
					</Headers>
					<Width>150</Width>
					<HideColumn>false</HideColumn>
					<SortOption>None</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>msg = mc_Elevation
									return msg:lower():match("ok") and "OK" or msg</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>cb9d1988-966c-437c-bc84-7e0564e0a83f</Guid>
					<Headers>
						<Header Name="Tangent check" />
					</Headers>
					<Width>150</Width>
					<HideColumn>false</HideColumn>
					<SortOption>None</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>msg = mc_Tangent
									return msg:lower():match("ok") and "OK" or msg</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>9a7d4f86-aa8a-4381-8070-27fc3f12c35e</Guid>
					<Headers>
						<Header Name="Gradient check" />
					</Headers>
					<Width>150</Width>
					<HideColumn>false</HideColumn>
					<SortOption>None</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>if RcType:lower():match("sporveksel$") or RcType:lower():match("sporfortsettelse$") then 
										msg = mc_Gradient
									elseif RcType:lower():match("sporkryss$") then
										msg = mc_GradientAndCant
									else
										msg = "(Model check not found)"
									end
									return msg:lower():match("ok") and "OK" or msg
															</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>e7136c50-9d71-474c-a7d5-0806c2c4d13c</Guid>
					<Headers>
						<Header Name="Cant check" />
					</Headers>
					<Width>150</Width>
					<HideColumn>false</HideColumn>
					<SortOption>None</SortOption>
					<Alignment>MiddleCenter</Alignment>
					<Data>
											if RcType:lower():match("sporveksel$") or RcType:lower():match("sporfortsettelse$") then 
												msg = mc_Cant
											elseif RcType:lower():match("sporkryss$") then
												msg = mc_GradientAndCant
											else
												msg = "(Model check not found)"
											end
											return msg:lower():match("ok") and "OK" or msg
										</Data>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>c493578d-b4dc-48fe-8af8-c55a96dc0556</string>
					<string>d96a44c9-cc91-493e-9571-4a66279993fd</string>
					<string>10272f0b-a413-49f6-bd6a-b520ea345d97</string>
				</SortOrder>
				<NewColumnWidth xsi:nil="true" />
			</TableSpecification>
		</InsertTable>

	</ObjectType>


<!--========================================================================================================
	COMMON / TRACK AND EMBANKMENT
	DATA EXCHANGE TABLE
	Turnouts (switches, points)
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableSwitches" Name="JBTFE_DIV Sporvekseltabell"
				Layer="JBTFE_TABELLER" Color="ByLayer"
				Group="Overbygning/Sporvekseltabeller"
				>

		<RelationSpace>tabell</RelationSpace>
			  
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Sporvekseltabell (enkel)" >
			<Variant Name="Sporvekseltabell (enkel)" />
			<Variant Name="Sporvekseltabell (detaljert)" />
			<Variant Name="Sporvekseltabell (detaljert, med drivmaskiner)" />
		</Variants>

		<!-- Turnout table (details) -->
		<InsertTable VariantName="Sporvekseltabell (enkel)" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Sporvekseltabell</Title>
				<IncludeTitle>true</IncludeTitle>
				<ShowInvisibleObjects>false</ShowInvisibleObjects>
				<ObjectManagerFilter></ObjectManagerFilter>
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>RcType == rctype_Switch</LuaFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<Font>RC-STANDARD</Font>
				<TitleTextHeight>5</TitleTextHeight>
				<HeaderTextHeight>3.5</HeaderTextHeight>
				<DataTextHeight>2.5</DataTextHeight>
				<VerticalCellMargin>1.5</VerticalCellMargin>
				<HorizontalCellMargin>1.5</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>0</WrapDepth>
				<WrapSpacing>0</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>false</RepeatHeaders>
				<TableFormat>Standard</TableFormat>
				<Columns>
					<ColumnSpecification>
						<Headers />
						<Width>60</Width>
						<Data>Name</Data>
						<Title>Navn</Title>
						<Sort />
						<Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers />
						<Width>60</Width>
						<Data>NOBN_trk_toKm(ReferenceMileage,3)</Data>
						<Title>Km</Title>
						<Sort>Ascending</Sort>
						<Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
				    <ColumnSpecification>
						<Headers />
						<Width>60</Width>
						<Data>getInvertedBlockImage()</Data>
						<Title>2D symbol</Title>
						<Sort />
						<Guid>d762837b-7200-46a2-8e90-ca7b8d257ccb</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>10272f0b-a413-49f6-bd6a-b520ea345d97</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>

		<!-- Sporvekseltabell (detaljert) -->
		<InsertTable VariantName="Sporvekseltabell (detaljert)" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Sporvekseltabell (detaljert)</Title>
				<IncludeTitle>true</IncludeTitle>
				<ShowInvisibleObjects>false</ShowInvisibleObjects>
				<ObjectManagerFilter></ObjectManagerFilter>
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>RcType == rctype_Switch</LuaFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<Font>RC-STANDARD</Font>
				<TitleTextHeight>5</TitleTextHeight>
				<HeaderTextHeight>3.5</HeaderTextHeight>
				<DataTextHeight>2.5</DataTextHeight>
				<VerticalCellMargin>1.5</VerticalCellMargin>
				<HorizontalCellMargin>1.5</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>0</WrapDepth>
				<WrapSpacing>0</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>false</RepeatHeaders>
				<TableFormat>Standard</TableFormat>
				<Columns>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Sporveksel</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>Name</Data>
						<Title>Navn</Title>
						<Sort />
						<Guid>11312c48-34c1-4926-a944-5e3db2acc053</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Sporveksel</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>Tag</Data>
						<Title>Objekt-ID</Title>
						<Sort />
						<Guid>9f4e777c-d7ae-41f0-b833-5a41333c6700</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Sporveksel</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>code</Data>
						<Title>Spv. nr.</Title>
						<Sort>Ascending</Sort>
						<Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Sporveksel</Title>
							</Header>
						</Headers>
						<Width>80</Width>
						<Data>Variant</Data>
						<Title>Variant</Title>
						<Sort />
						<Guid>4471f8ed-9d27-49f8-8268-a6ec892ffc35</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Sporveksel</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>if (Dir == "up") then
    return "Stigende Km"
else
    return "Synkende Km"
end</Data>
						<Title>Retning</Title>
						<Sort />
						<Guid>f666b8a7-c054-4d7c-b430-7af861b9e669</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>					
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Sporveksel</Title>
							</Header>
						</Headers>
						<Width>30</Width>
						<Data>if (SwitchGeometry == "left") then 
	return "V"
elseif (SwitchGeometry == "right") then
	return "H"
else
	return "???",_warning
end	</Data>
						<Title>Avvik</Title>
						<Sort />
						<Guid>51712f0c-3731-4403-aff2-74ba7c027bca</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Sporveksel</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>getInvertedBlockImage()</Data>
						<Title>Symbol</Title>
						<Sort />
						<Guid>d762837b-7200-46a2-8e90-ca7b8d257ccb</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Signalanlegg</Title>
							</Header>
						</Headers>
						<Width>80</Width>
						<Data>SwitchControlAndLocking</Data>
						<Title>Styring og kontroll</Title>
						<Sort />
						<Guid>ba4ca159-9a7b-49a0-a5c0-8724928c04ec</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
					<Headers>
						<Header>
						<Title>Signalanlegg</Title>
						</Header>
					</Headers>
					<Width>30</Width>
					<Data>
						local s = rel_Switch_IsCoupledWith_Switch
						local r, n = getRelatedObjects(s)
						if n == 0 then
							return "-"
						else
							return r[0].code
						end
					</Data>
					<Title>Koblet med</Title>
					<Sort />
					<Guid>fa730a31-6e44-4088-bba8-5800add006c9</Guid>
					<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Kilometrering (ift best. spor)</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>ReferenceAlignment.code</Data>
						<Title>Best. spor</Title>
						<Sort />
						<Guid>854751e2-f04e-4498-8ec9-1e4c169fe30c</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Kilometrering (ift best. spor)</Title>
							</Header>
						</Headers>
						<Width>35</Width>
						<Data>NOBN_trk_toKm(ReferenceMileage,3)</Data>
						<Title>Km SS (i ref. spor)</Title>
						<Sort>Ascending</Sort>
						<Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Kilometrering (ift best. spor)</Title>
							</Header>
						</Headers>
						<Width>35</Width>
						<Data>NOBN_trk_toKm(NOBN_trk_getFoulingPointReferenceMileage(getObjectFromId(id)),3)</Data>
						<Title>Km Mid</Title>
						<Sort />
						<Guid>e737d99a-ab83-4ccf-905b-b8aa9c0f3503</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Profilering (ift eget spor)</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>Alignment.code</Data>
						<Title>Eget spor</Title>
						<Sort />
						<Guid>5e391291-6606-4394-b065-465f26837190</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Profilering (ift eget spor)</Title>
							</Header>
						</Headers>
						<Width>35</Width>
						<Data>NOBN_trk_toKm(Mileage,6)</Data>
						<Title>Profil SS</Title>
						<Sort />
						<Guid>2c751b6d-9494-4316-8a01-1f0fecc9b396</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Profilering (ift eget spor)</Title>
							</Header>
						</Headers>
						<Width>35</Width>
						<Data>NOBN_trk_toKm(NOBN_trk_getFoulingPointMileage(),6)</Data>
						<Title>Profil Mid</Title>
						<Sort />
						<Guid>d27510a5-48e8-4a25-8eeb-6434fcc8f31b</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>10272f0b-a413-49f6-bd6a-b520ea345d97</string>
					<string>71b321ec-4bc3-493d-974b-2b01236d720c</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>

		<!-- Turnout table (details, with point machines) -->
		<InsertTable VariantName="Sporvekseltabell (detaljert, med drivmaskiner)" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Sporvekseltabell (detaljert)</Title>
				<IncludeTitle>true</IncludeTitle>
				<ShowInvisibleObjects>false</ShowInvisibleObjects>
				<OMFilter />
				<OMFilterList />
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>RcType == rctype_Switch</LuaFilter>
				<UseDataSetFilter>false</UseDataSetFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<TitleTextHeight>10</TitleTextHeight>
				<HeaderTextHeight>5</HeaderTextHeight>
				<DataTextHeight>3</DataTextHeight>
				<VerticalCellMargin>1.5</VerticalCellMargin>
				<HorizontalCellMargin>1.5</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<MinRowHeight>3</MinRowHeight>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>0</WrapDepth>
				<WrapSpacing>0</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>false</RepeatHeaders>
				<VerticalNumbering>
					<Enabled>false</Enabled>
					<IsVertical>true</IsVertical>
					<Location>Left</Location>
					<NumberFormat>Numbers</NumberFormat>
					<TextHeight>2</TextHeight>
					<HideBorders>true</HideBorders>
					<Alignment>MiddleCenter</Alignment>
				</VerticalNumbering>
				<HorizontalNumbering>
					<Enabled>false</Enabled>
					<IsVertical>false</IsVertical>
					<Location>Bottom</Location>
					<NumberFormat>Numbers</NumberFormat>
					<TextHeight>2</TextHeight>
					<HideBorders>true</HideBorders>
					<Alignment>MiddleCenter</Alignment>
				</HorizontalNumbering>
				<TableFormat>Standard</TableFormat>
				<Font>RC-STANDARD</Font>
				<Columns>
					<ColumnSpecification>
					<Guid>11312c48-34c1-4926-a944-5e3db2acc053</Guid>
					<Headers>
						<Header Name="Sporveksel" />
						<Header Name="Navn" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>Name</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>9f4e777c-d7ae-41f0-b833-5a41333c6700</Guid>
					<Headers>
						<Header Name="Sporveksel" />
						<Header Name="Objekt-ID" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>Tag</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
					<Headers>
						<Header Name="Sporveksel" />
						<Header Name="Spv. nr." />
					</Headers>
					<Width>20</Width>
					<Sort>Ascending</Sort>
					<Alignment>MiddleCenter</Alignment>
					<Data>code</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>4471f8ed-9d27-49f8-8268-a6ec892ffc35</Guid>
					<Headers>
						<Header Name="Sporveksel" />
						<Header Name="Variant" />
					</Headers>
					<Width>80</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>Variant</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>f666b8a7-c054-4d7c-b430-7af861b9e669</Guid>
					<Headers>
						<Header Name="Sporveksel" />
						<Header Name="Retning" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>if (Dir == "up") then
					return "Stigende Km"
				else
					return "Synkende Km"
				end</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>51712f0c-3731-4403-aff2-74ba7c027bca</Guid>
					<Headers>
						<Header Name="Sporveksel" />
						<Header Name="Avvik" />
					</Headers>
					<Width>30</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>if (SwitchGeometry == "left") then 
					return "V"
				elseif (SwitchGeometry == "right") then
					return "H"
				else
					return "???",_warning
				end	</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>d762837b-7200-46a2-8e90-ca7b8d257ccb</Guid>
					<Headers>
						<Header Name="Sporveksel" />
						<Header Name="Symbol" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>getInvertedBlockImage()</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>ba4ca159-9a7b-49a0-a5c0-8724928c04ec</Guid>
					<Headers>
						<Header Name="Signalanlegg" />
						<Header Name="Styring og kontroll" />
					</Headers>
					<Width>80</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>SwitchControlAndLockingEnumTable = 
					{
						Rm = {	  
							"Remote controlled, machine locked",
							"Sentralstilt, maskinlåst"
						},
						Rl = {
							"Remote controlled, keylocked for left switch leg train movements", 
							"Sentralstilt, kontrollåst V"
						},
						Rr = {	
							"Sentralstilt, kontrollåst H",
							"Remote controlled, keylocked for right switch leg train movements"
						},
						Rb = {
							"Remote controlled, keylocked for both right and left switch leg train movements",
							"Sentralstilt, kontrollåst HV"
						},
						Pl = {
							"Pushbutton controlled, keylocked for left switch leg train movements",
							"Trykknapp, kontrollåst V"
						},
						Pr = {
							"Pushbutton controlled, keylocked for right switch leg train movements",
							"Trykknapp, kontrollåst H"
						},
						Pb = {
							"Pushbutton controlled, keylocked for both right and left switch leg train movements",
							"Trykknapp, kontrollåst HV"
						},
						Pn = {
							"Pushbutton controlled, not interlocked",
							"Trykknapp, uforriglet"
						},
						Hl = {
							"Hand operated (hand thrown), keylocked for left switch leg train movements",
							"Kastelodd, kontrollåst V"
						},
						Hr = {
							"Hand operated (hand thrown), keylocked for right switch leg train movements",
							"Kastelodd, kontrollåst H"
						},
						Hb = {
							"Hand operated (hand thrown), keylocked for both right and left switch leg train movements (one at a time)",
							"Kastelodd, kontrollåst HV"
						},
						Hn = {
							"Hand operated (hand thrown), not interlocked",
							"Kastelodd, uforriglet"
						}
					}
				
				culture = 2 --Norwegian
				return SwitchControlAndLockingEnumTable[SwitchControlAndLocking][culture]</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>fa730a31-6e44-4088-bba8-5800add006c9</Guid>
					<Headers>
						<Header Name="Signalanlegg" />
						<Header Name="Koblet med" />
					</Headers>
					<Width>30</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>
										local s = rel_Switch_IsCoupledWith_Switch
										local r, n = getRelatedObjects(s)
										if n == 0 then
											return "-"
										else
											return r[0].code
										end
									</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
					<Headers>
						<Header Name="Referansespor" />
						<Header Name="Km SS (i ref. spor)" />
					</Headers>
					<Width>35</Width>
					<Sort>Ascending</Sort>
					<Alignment>MiddleCenter</Alignment>
					<Data>NOBN_trk_toKm(ReferenceMileage,3)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>e737d99a-ab83-4ccf-905b-b8aa9c0f3503</Guid>
					<Headers>
						<Header Name="Referansespor" />
						<Header Name="Km Mid" />
					</Headers>
					<Width>35</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>NOBN_trk_toKm(NOBN_trk_getFoulingPointReferenceMileage(getObjectFromId(id)),3)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>854751e2-f04e-4498-8ec9-1e4c169fe30c</Guid>
					<Headers>
						<Header Name="Referansespor" />
						<Header Name="Ref. spor" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>ReferenceAlignment.code</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>2c751b6d-9494-4316-8a01-1f0fecc9b396</Guid>
					<Headers>
						<Header Name="Eget spor" />
						<Header Name="PEL SS (i eget spor)" />
					</Headers>
					<Width>35</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>NOBN_trk_toKm(Mileage,6)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>d27510a5-48e8-4a25-8eeb-6434fcc8f31b</Guid>
					<Headers>
						<Header Name="Eget spor" />
						<Header Name="PEL Mid" />
					</Headers>
					<Width>35</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>NOBN_trk_toKm(NOBN_trk_getFoulingPointMileage(),6)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>5e391291-6606-4394-b065-465f26837190</Guid>
					<Headers>
						<Header Name="Eget spor" />
						<Header Name="Eget spor" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>Alignment.code</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>53cad9b3-26c3-4409-a57f-0a7aa5489538</Guid>
					<Headers>
						<Header Name="Drivmaskiner" />
						<Header Name="Antall drivmaskiner på tunge" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>function analyzePointMachines(sw)
					sw = sw and this
					if sw.RcType ~= rctype_Switch then 
						return {	ntm="?", tms="?", tmt="?", nfm="?", fms="?", fmt="?" }
					end
					local s = rel_Switch_Has_PointMachine
					pointMachines, N = getRelatedObjects(s)
					
					--Split between tongue machine and point frog (swing nose) machine for reasonable length pointMachines:
					minDistanceFromStockRailJointToFrog = 20
					
					-- Init:
					nTongueMachines = 0
					nFrogMachines = 0
					nLeftTongueMachines = 0
					nRightTongueMachines = 0
					nLeftFrogMachines = 0
					nRightFrogMachines = 0
					tongueMachineType = ""
					frogMachineType = ""
					
					for i = 0,N-1 do
						if RC__getDistance2D(this,pointMachines[i]) &lt; minDistanceFromStockRailJointToFrog then
							nTongueMachines = nTongueMachines + 1
							if pointMachines[i].LeftSided then nLeftTongueMachines = nLeftTongueMachines + 1 end
							if pointMachines[i].RightSided then nRightTongueMachines = nRightTongueMachines + 1 end
							tongueMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						else
							nFrogMachines = nFrogMachines + 1
							if pointMachines[i].LeftSided then nLeftFrogMachines = nLeftFrogMachines + 1 end
							if pointMachines[i].RightSided then nRightFrogMachines = nRightFrogMachines + 1 end
							frogMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						end	
					end
					
					if nLeftTongueMachines * nRightTongueMachines &gt; 0 then
						tongueMachineSide = "(varierer)"
					elseif nLeftTongueMachines &gt; 0 then
						tongueMachineSide = "Venstre"
					elseif nRightTongueMachines &gt; 0 then
						tongueMachineSide = "Høyre"
					else
						tongueMachineSide = "-"
					end
					
					if nLeftFrogMachines * nRightFrogMachines &gt; 0 then
						frogMachineSide = "(varierer)"
					elseif nLeftFrogMachines &gt; 0 then
						frogMachineSide = "Venstre"
					elseif nRightFrogMachines &gt; 0 then
						frogMachineSide = "Høyre"
					else
						frogMachineSide = "-"
					end
					return {	ntm=nTongueMachines, tms=tongueMachineSide, tmt=tongueMachineType, 
								nfm=nFrogMachines, fms=frogMachineSide, fmt=frogMachineType
							}
				end
				
				return analyzePointMachines(this).ntm</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>0e40c3d7-060b-4ada-a238-fbae9f11c9b2</Guid>
					<Headers>
						<Header Name="Drivmaskiner" />
						<Header Name="Tungemaskiner side av spor" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>function analyzePointMachines(sw)
					sw = sw and this
					if sw.RcType ~= rctype_Switch then 
						return {	ntm="?", tms="?", tmt="?", nfm="?", fms="?", fmt="?" }
					end
					
					local s = rel_Switch_Has_PointMachine
					pointMachines, N = getRelatedObjects(s)
					
					--Split between tongue machine and point frog (swing nose) machine for reasonable length pointMachines:
					minDistanceFromStockRailJointToFrog = 20
					
					-- Init:
					nTongueMachines = 0
					nFrogMachines = 0
					nLeftTongueMachines = 0
					nRightTongueMachines = 0
					nLeftFrogMachines = 0
					nRightFrogMachines = 0
					tongueMachineType = ""
					frogMachineType = ""
					
					for i = 0,N-1 do
						if RC__getDistance2D(this,pointMachines[i]) &lt; minDistanceFromStockRailJointToFrog then
							nTongueMachines = nTongueMachines + 1
							if pointMachines[i].LeftSided then nLeftTongueMachines = nLeftTongueMachines + 1 end
							if pointMachines[i].RightSided then nRightTongueMachines = nRightTongueMachines + 1 end
							tongueMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						else
							nFrogMachines = nFrogMachines + 1
							if pointMachines[i].LeftSided then nLeftFrogMachines = nLeftFrogMachines + 1 end
							if pointMachines[i].RightSided then nRightFrogMachines = nRightFrogMachines + 1 end
							frogMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						end	
					end
					
					if nLeftTongueMachines * nRightTongueMachines &gt; 0 then
						tongueMachineSide = "(varierer)"
					elseif nLeftTongueMachines &gt; 0 then
						tongueMachineSide = "Venstre"
					elseif nRightTongueMachines &gt; 0 then
						tongueMachineSide = "Høyre"
					else
						tongueMachineSide = "-"
					end
					
					if nLeftFrogMachines * nRightFrogMachines &gt; 0 then
						frogMachineSide = "(varierer)"
					elseif nLeftFrogMachines &gt; 0 then
						frogMachineSide = "Venstre"
					elseif nRightFrogMachines &gt; 0 then
						frogMachineSide = "Høyre"
					else
						frogMachineSide = "-"
					end
					return {	ntm=nTongueMachines, tms=tongueMachineSide, tmt=tongueMachineType, 
								nfm=nFrogMachines, fms=frogMachineSide, fmt=frogMachineType
							}
				end
				
				return analyzePointMachines(this).tms</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>358063ad-bcdf-4630-afc8-ece21fb55ffd</Guid>
					<Headers>
						<Header Name="Drivmaskiner" />
						<Header Name="Tungemaskiner type" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>function analyzePointMachines(sw)
					sw = sw and this
					if sw.RcType ~= rctype_Switch then 
						return {	ntm="?", tms="?", tmt="?", nfm="?", fms="?", fmt="?" }
					end
					
					local s = rel_Switch_Has_PointMachine
					pointMachines, N = getRelatedObjects(s)
					
					--Split between tongue machine and point frog (swing nose) machine for reasonable length pointMachines:
					minDistanceFromStockRailJointToFrog = 20
					
					-- Init:
					nTongueMachines = 0
					nFrogMachines = 0
					nLeftTongueMachines = 0
					nRightTongueMachines = 0
					nLeftFrogMachines = 0
					nRightFrogMachines = 0
					tongueMachineType = ""
					frogMachineType = ""
					
					for i = 0,N-1 do
						if RC__getDistance2D(this,pointMachines[i]) &lt; minDistanceFromStockRailJointToFrog then
							nTongueMachines = nTongueMachines + 1
							if pointMachines[i].LeftSided then nLeftTongueMachines = nLeftTongueMachines + 1 end
							if pointMachines[i].RightSided then nRightTongueMachines = nRightTongueMachines + 1 end
							tongueMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						else
							nFrogMachines = nFrogMachines + 1
							if pointMachines[i].LeftSided then nLeftFrogMachines = nLeftFrogMachines + 1 end
							if pointMachines[i].RightSided then nRightFrogMachines = nRightFrogMachines + 1 end
							frogMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						end	
					end
					
					if nLeftTongueMachines * nRightTongueMachines &gt; 0 then
						tongueMachineSide = "(varierer)"
					elseif nLeftTongueMachines &gt; 0 then
						tongueMachineSide = "Venstre"
					elseif nRightTongueMachines &gt; 0 then
						tongueMachineSide = "Høyre"
					else
						tongueMachineSide = "-"
					end
					
					if nLeftFrogMachines * nRightFrogMachines &gt; 0 then
						frogMachineSide = "(varierer)"
					elseif nLeftFrogMachines &gt; 0 then
						frogMachineSide = "Venstre"
					elseif nRightFrogMachines &gt; 0 then
						frogMachineSide = "Høyre"
					else
						frogMachineSide = "-"
					end
				
					return {	ntm=nTongueMachines, tms=tongueMachineSide, tmt=tongueMachineType, 
								nfm=nFrogMachines, fms=frogMachineSide, fmt=frogMachineType
							}
				end
				
				return analyzePointMachines(this).tmt</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>9d1c5df3-ee27-492f-9809-d73dbaf75501</Guid>
					<Headers>
						<Header Name="Drivmaskiner" />
						<Header Name="Antall drivmaskiner på krysset" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>function analyzePointMachines(sw)
					sw = sw and this
					if sw.RcType ~= rctype_Switch then 
						return {	ntm="?", tms="?", tmt="?", nfm="?", fms="?", fmt="?" }
					end
					
					local s = rel_Switch_Has_PointMachine
					pointMachines, N = getRelatedObjects(s)
					
					--Split between tongue machine and point frog (swing nose) machine for reasonable length pointMachines:
					minDistanceFromStockRailJointToFrog = 20
					
					-- Init:
					nTongueMachines = 0
					nFrogMachines = 0
					nLeftTongueMachines = 0
					nRightTongueMachines = 0
					nLeftFrogMachines = 0
					nRightFrogMachines = 0
					tongueMachineType = ""
					frogMachineType = ""
					
					for i = 0,N-1 do
						if RC__getDistance2D(this,pointMachines[i]) &lt; minDistanceFromStockRailJointToFrog then
							nTongueMachines = nTongueMachines + 1
							if pointMachines[i].LeftSided then nLeftTongueMachines = nLeftTongueMachines + 1 end
							if pointMachines[i].RightSided then nRightTongueMachines = nRightTongueMachines + 1 end
							tongueMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						else
							nFrogMachines = nFrogMachines + 1
							if pointMachines[i].LeftSided then nLeftFrogMachines = nLeftFrogMachines + 1 end
							if pointMachines[i].RightSided then nRightFrogMachines = nRightFrogMachines + 1 end
							frogMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						end	
					end
					
					if nLeftTongueMachines * nRightTongueMachines &gt; 0 then
						tongueMachineSide = "(varierer)"
					elseif nLeftTongueMachines &gt; 0 then
						tongueMachineSide = "Venstre"
					elseif nRightTongueMachines &gt; 0 then
						tongueMachineSide = "Høyre"
					else
						tongueMachineSide = "-"
					end
					
					if nLeftFrogMachines * nRightFrogMachines &gt; 0 then
						frogMachineSide = "(varierer)"
					elseif nLeftFrogMachines &gt; 0 then
						frogMachineSide = "Venstre"
					elseif nRightFrogMachines &gt; 0 then
						frogMachineSide = "Høyre"
					else
						frogMachineSide = "-"
					end
				
					return {	ntm=nTongueMachines, tms=tongueMachineSide, tmt=tongueMachineType, 
								nfm=nFrogMachines, fms=frogMachineSide, fmt=frogMachineType
							}
				end
				
				return analyzePointMachines(this).nfm</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>c10f5dea-1295-4482-9c85-886c02244d63</Guid>
					<Headers>
						<Header Name="Drivmaskiner" />
						<Header Name="Kryssmaskiner side av spor" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>function analyzePointMachines(sw)
					sw = sw and this
					if sw.RcType ~= rctype_Switch then 
						return {	ntm="?", tms="?", tmt="?", nfm="?", fms="?", fmt="?" }
					end
					
					local s = rel_Switch_Has_PointMachine
					pointMachines, N = getRelatedObjects(s)
					
					--Split between tongue machine and point frog (swing nose) machine for reasonable length pointMachines:
					minDistanceFromStockRailJointToFrog = 20
					
					-- Init:
					nTongueMachines = 0
					nFrogMachines = 0
					nLeftTongueMachines = 0
					nRightTongueMachines = 0
					nLeftFrogMachines = 0
					nRightFrogMachines = 0
					tongueMachineType = ""
					frogMachineType = ""
					
					for i = 0,N-1 do
						if RC__getDistance2D(this,pointMachines[i]) &lt; minDistanceFromStockRailJointToFrog then
							nTongueMachines = nTongueMachines + 1
							if pointMachines[i].LeftSided then nLeftTongueMachines = nLeftTongueMachines + 1 end
							if pointMachines[i].RightSided then nRightTongueMachines = nRightTongueMachines + 1 end
							tongueMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						else
							nFrogMachines = nFrogMachines + 1
							if pointMachines[i].LeftSided then nLeftFrogMachines = nLeftFrogMachines + 1 end
							if pointMachines[i].RightSided then nRightFrogMachines = nRightFrogMachines + 1 end
							frogMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						end	
					end
					
					if nLeftTongueMachines * nRightTongueMachines &gt; 0 then
						tongueMachineSide = "(varierer)"
					elseif nLeftTongueMachines &gt; 0 then
						tongueMachineSide = "Venstre"
					elseif nRightTongueMachines &gt; 0 then
						tongueMachineSide = "Høyre"
					else
						tongueMachineSide = "-"
					end
					
					if nLeftFrogMachines * nRightFrogMachines &gt; 0 then
						frogMachineSide = "(varierer)"
					elseif nLeftFrogMachines &gt; 0 then
						frogMachineSide = "Venstre"
					elseif nRightFrogMachines &gt; 0 then
						frogMachineSide = "Høyre"
					else
						frogMachineSide = "-"
					end
					
					return {	ntm=nTongueMachines, tms=tongueMachineSide, tmt=tongueMachineType, 
								nfm=nFrogMachines, fms=frogMachineSide, fmt=frogMachineType
							}
				end
				
				return analyzePointMachines(this).fms</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>a6fa869f-6967-49b5-9c1b-92f205a644f2</Guid>
					<Headers>
						<Header Name="Drivmaskiner" />
						<Header Name="Kryssmaskiner type" />
					</Headers>
					<Width>60</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>function analyzePointMachines(sw)
					sw = sw and this
					if sw.RcType ~= rctype_Switch then 
						return {	ntm="?", tms="?", tmt="?", nfm="?", fms="?", fmt="?" }
					end
					
					local s = rel_Switch_Has_PointMachine
					pointMachines, N = getRelatedObjects(s)
					
					--Split between tongue machine and point frog (swing nose) machine for reasonable length pointMachines:
					minDistanceFromStockRailJointToFrog = 20
					
					-- Init:
					nTongueMachines = 0
					nFrogMachines = 0
					nLeftTongueMachines = 0
					nRightTongueMachines = 0
					nLeftFrogMachines = 0
					nRightFrogMachines = 0
					tongueMachineType = ""
					frogMachineType = ""
					
					for i = 0,N-1 do
						if RC__getDistance2D(this,pointMachines[i]) &lt; minDistanceFromStockRailJointToFrog then
							nTongueMachines = nTongueMachines + 1
							if pointMachines[i].LeftSided then nLeftTongueMachines = nLeftTongueMachines + 1 end
							if pointMachines[i].RightSided then nRightTongueMachines = nRightTongueMachines + 1 end
							tongueMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						else
							nFrogMachines = nFrogMachines + 1
							if pointMachines[i].LeftSided then nLeftFrogMachines = nLeftFrogMachines + 1 end
							if pointMachines[i].RightSided then nRightFrogMachines = nRightFrogMachines + 1 end
							frogMachineType = pointMachines[i].Variant -- Overwrite previous, if any
						end	
					end
					
					if nLeftTongueMachines * nRightTongueMachines &gt; 0 then
						tongueMachineSide = "(varierer)"
					elseif nLeftTongueMachines &gt; 0 then
						tongueMachineSide = "Venstre"
					elseif nRightTongueMachines &gt; 0 then
						tongueMachineSide = "Høyre"
					else
						tongueMachineSide = "-"
					end
					
					if nLeftFrogMachines * nRightFrogMachines &gt; 0 then
						frogMachineSide = "(varierer)"
					elseif nLeftFrogMachines &gt; 0 then
						frogMachineSide = "Venstre"
					elseif nRightFrogMachines &gt; 0 then
						frogMachineSide = "Høyre"
					else
						frogMachineSide = "-"
					end
					
					return {	ntm=nTongueMachines, tms=tongueMachineSide, tmt=tongueMachineType, 
								nfm=nFrogMachines, fms=frogMachineSide, fmt=frogMachineType
							}
				end
				
				return analyzePointMachines(this).fmt</Data>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>10272f0b-a413-49f6-bd6a-b520ea345d97</string>
					<string>71b321ec-4bc3-493d-974b-2b01236d720c</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>

	</ObjectType>


	
<!--========================================================================================================
	COMMON / TRACK AND EMBANKMENT
	DATA EXCHANGE TABLE
	Table for characteristic points of horizontal geometry
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableHorizontalGeometry" Name="JBTFE_DIV Horisontaltrasétabell"
				Layer="JBTFE_TABELLER" Color="ByLayer"
				Group="Overbygning/Datautveksling"
				>

		<RelationSpace>tabell</RelationSpace>
			  
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Horisontaltrasétabell" >
			<Variant Name="Horisontaltrasétabell" />
		</Variants>

		<InsertTable VariantName="Horisontaltrasétabell" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
  <ColumnSelectionSelf>true</ColumnSelectionSelf>
  <ColumnSelectionFromMasterTable>false</ColumnSelectionFromMasterTable>
  <LuaPreviewAutoExecute>false</LuaPreviewAutoExecute>
  <LuaPreviewRowSelectionSearchFilter />
  <Title>Horisontaltrasétabell - 2022-10-28_000 KO-HOT og KO-VET tabeller</Title>
  <IncludeTitle>true</IncludeTitle>
  <ShowInvisibleObjects>false</ShowInvisibleObjects>
  <ObjectManagerFilter />
  <ObjectManagerFilterList />
  <ObjectTypeBrowser>false</ObjectTypeBrowser>
  <EnableLuaFilter>true</EnableLuaFilter>
  <LuaFilter>RcType == rctype_HorizontalGeometryVertex</LuaFilter>
  <UseDataSetFilter>false</UseDataSetFilter>
  <EnableCustomSettings>true</EnableCustomSettings>
  <TitleTextHeight>5</TitleTextHeight>
  <HeaderTextHeight>3.5</HeaderTextHeight>
  <DataTextHeight>2.5</DataTextHeight>
  <VerticalCellMargin>1</VerticalCellMargin>
  <HorizontalCellMargin>1</HorizontalCellMargin>
  <BlockScale>1</BlockScale>
  <MinRowHeight>3</MinRowHeight>
  <EnableWrap>false</EnableWrap>
  <WrapDepth>0</WrapDepth>
  <WrapSpacing>0</WrapSpacing>
  <WrapDirection>Right</WrapDirection>
  <RepeatHeaders>false</RepeatHeaders>
  <VerticalNumbering>
    <Enabled>false</Enabled>
    <IsVertical>true</IsVertical>
    <Location>Left</Location>
    <NumberFormat>Numbers</NumberFormat>
    <TextHeight>2</TextHeight>
    <HideBorders>true</HideBorders>
    <Alignment>MiddleCenter</Alignment>
  </VerticalNumbering>
  <HorizontalNumbering>
    <Enabled>false</Enabled>
    <IsVertical>false</IsVertical>
    <Location>Bottom</Location>
    <NumberFormat>Numbers</NumberFormat>
    <TextHeight>2</TextHeight>
    <HideBorders>true</HideBorders>
    <Alignment>MiddleCenter</Alignment>
  </HorizontalNumbering>
  <TableFormat>Standard</TableFormat>
  <Font>RC-STANDARD</Font>
  <Columns>
    <ColumnSpecification>
      <Guid>e30f54fb-1e8b-4c95-bfdd-dd533e0d15cb</Guid>
      <Headers>
        <Header Name="Objekt" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>BaneNORBaneDataID</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>bef4d979-bacb-4911-a8a7-80635b4a0312</Guid>
      <Headers>
        <Header Name="Beskrivelse" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>str = "Horisontaltrasé, " .. (Name == "_" and "Start/Slutt")
if ocpRef then str = str .. ", " .. getObjectFromId(ocpRef).name end
return str</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>044b867a-6d52-4df6-891b-fda8ab99697a</Guid>
      <Headers>
        <Header Name="Tilhører objekt" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>Ascending</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>Alignment.code</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>a308c405-7a08-47f0-9062-30327102216e</Guid>
      <Headers>
        <Header Name="Tilhører lokasjon" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"TODO"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>fb7dd975-d756-43c7-b114-8473aeecedfa</Guid>
      <Headers>
        <Header Name="Navn/nr" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>if Variant == "(Linje start/slutt)" then
	if pos &lt;= Alignment.RcAlignment.HorizontalProfile.Length/2 then
		return "RL start"
	else
		return "RL slutt"
	end
else
	return name
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>0deca630-a561-414b-8d7b-21caffb5b285</Guid>
      <Headers>
        <Header Name="Idriftssatt dato" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"TODO"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>1e743431-5cf0-47b9-b23e-4aba12d5654b</Guid>
      <Headers>
        <Header Name="Profil(fra) [km]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.06f",Mileage/1000)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
      <Headers>
        <Header Name="Km(fra) [km]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>Ascending</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",ReferenceMileage/1000)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>76d50cbf-7dde-41dc-9485-2de6e15df812</Guid>
      <Headers>
        <Header Name="Side(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"Senter"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>5ed3a550-2ff2-4371-a588-efaa021f2e53</Guid>
      <Headers>
        <Header Name="Sportype(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>s = RcSection:filter(function(x) return x.RcType == "FE%-DIV Sporbruk" end)
if getCollectionLength(s) == 0 then
	return "Ukjent"
else
	return s[0].Variant
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>0f52b60a-38bb-40a0-9d96-54f317f6ef1d</Guid>
      <Headers>
        <Header Name="Spornr(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>Alignment.code</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>5e8302d5-af4c-4446-aea4-143f4d648e36</Guid>
      <Headers>
        <Header Name="Avst/Spormidt(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>0</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>e28acf01-34e6-4a79-9b31-8b7fc26d6be0</Guid>
      <Headers>
        <Header Name="Eier" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"Bane NOR"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>fc15f89b-676d-4a62-a0c6-4ff124763b52</Guid>
      <Headers>
        <Header Name="Nord(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",geoCoord.Y)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>8df53a42-bed9-4667-a761-440c46a5197b</Guid>
      <Headers>
        <Header Name="Øst(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",geoCoord.X)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>5f2711e2-0b3c-485f-8ea0-376ab81cef28</Guid>
      <Headers>
        <Header Name="Høyde(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",geoCoord.Z)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>2e3d26fe-2da8-4495-9570-06159653e2af</Guid>
      <Headers>
        <Header Name="Dokumentreferanse" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"TODO"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>fa469762-6685-482f-b3b3-10b31d5f6589</Guid>
      <Headers>
        <Header Name="Serienr." />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"TODO"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
      <Headers>
        <Header Name="Trasépunkt" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>if Variant == "(Linje start/slutt)" then
	if pos &lt;= Alignment.RcAlignment.HorizontalProfile.Length/2 then
		return "RL start"
	else
		return "RL slutt"
	end
else
	return name
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>3b27856d-3955-4cb8-b54e-9d43504244fb</Guid>
      <Headers>
        <Header Name="Kurveradius [m]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>ai = getAlignmentInfo()
if ai.Segment.Type ~= "Curve" then
	return "-"
else
	return ai.CurveRadius == math.huge and ai.CurveRadius or string.format("%.03f", ai.CurveRadius) --CurveRadius is unsigned
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>ef6c1bb3-82c0-40aa-b3a7-9291375d5a15</Guid>
      <Headers>
        <Header Name="Overhøyde [mm]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.0f", RC__isNan(getAlignmentInfo().Cant) and 0 or getAlignmentInfo().Cant)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>5035e780-fad1-4702-b9ad-511753fa60ef</Guid>
      <Headers>
        <Header Name="Overgangskurvens lengde [m]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>if Variant ~= "OB" then return "-" end
ai = getAlignmentInfo()
if ai and ai.NearestHorizontalVertex then
	if ai.NearestHorizontalVertex.Item1.Type == "Clothoid" then
		return string.format("%.03f", ai.NearestHorizontalVertex.Item1.Length)
	elseif ai.NearestHorizontalVertex.Item2.Type == "Clothoid" then
		return string.format("%.03f", ai.NearestHorizontalVertex.Item2.Length)
	else
		return "?"
	end
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>d26d4f01-0cef-4c8d-bd72-ecadde152216</Guid>
      <Headers>
        <Header Name="Høyde [m]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"TODO"</Data>
    </ColumnSpecification>
  </Columns>
  <SortOrder>
    <string>044b867a-6d52-4df6-891b-fda8ab99697a</string>
    <string>10272f0b-a413-49f6-bd6a-b520ea345d97</string>
  </SortOrder>
  <NewColumnWidth xsi:nil="true" />
 			</TableSpecification>
		</InsertTable>		
	</ObjectType>


	
<!--========================================================================================================
	COMMON / TRACK AND EMBANKMENT
	DATA EXCHANGE TABLE
	Table for characteristic points of vertical profile
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableVerticalProfile" Name="JBTFE_DIV Vertikaltrasétabell"
				Layer="JBTFE_TABELLER" Color="ByLayer"
				Group="Overbygning/Datautveksling"
				>

		<RelationSpace>tabell</RelationSpace>
			  
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Vertikaltrasétabell" >
			<Variant Name="Vertikaltrasétabell" />
		</Variants>

		<InsertTable VariantName="Vertikaltrasétabell" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
  <ColumnSelectionSelf>true</ColumnSelectionSelf>
  <ColumnSelectionFromMasterTable>false</ColumnSelectionFromMasterTable>
  <LuaPreviewAutoExecute>false</LuaPreviewAutoExecute>
  <LuaPreviewRowSelectionSearchFilter />
  <Title>Brukerdefinert - 2022-10-28_000 KO-HOT og KO-VET tabeller</Title>
  <IncludeTitle>true</IncludeTitle>
  <ShowInvisibleObjects>false</ShowInvisibleObjects>
  <ObjectManagerFilter />
  <ObjectManagerFilterList />
  <ObjectTypeBrowser>false</ObjectTypeBrowser>
  <EnableLuaFilter>true</EnableLuaFilter>
  <LuaFilter>RcType == rctype_VerticalProfileVertex</LuaFilter>
  <UseDataSetFilter>false</UseDataSetFilter>
  <EnableCustomSettings>true</EnableCustomSettings>
  <TitleTextHeight>5</TitleTextHeight>
  <HeaderTextHeight>3.5</HeaderTextHeight>
  <DataTextHeight>2.5</DataTextHeight>
  <VerticalCellMargin>1</VerticalCellMargin>
  <HorizontalCellMargin>1</HorizontalCellMargin>
  <BlockScale>1</BlockScale>
  <MinRowHeight>3</MinRowHeight>
  <EnableWrap>false</EnableWrap>
  <WrapDepth>0</WrapDepth>
  <WrapSpacing>0</WrapSpacing>
  <WrapDirection>Right</WrapDirection>
  <RepeatHeaders>false</RepeatHeaders>
  <VerticalNumbering>
    <Enabled>false</Enabled>
    <IsVertical>true</IsVertical>
    <Location>Left</Location>
    <NumberFormat>Numbers</NumberFormat>
    <TextHeight>2</TextHeight>
    <HideBorders>true</HideBorders>
    <Alignment>MiddleCenter</Alignment>
  </VerticalNumbering>
  <HorizontalNumbering>
    <Enabled>false</Enabled>
    <IsVertical>false</IsVertical>
    <Location>Bottom</Location>
    <NumberFormat>Numbers</NumberFormat>
    <TextHeight>2</TextHeight>
    <HideBorders>true</HideBorders>
    <Alignment>MiddleCenter</Alignment>
  </HorizontalNumbering>
  <TableFormat>Standard</TableFormat>
  <Font>RC-STANDARD</Font>
  <Columns>
    <ColumnSpecification>
      <Guid>e30f54fb-1e8b-4c95-bfdd-dd533e0d15cb</Guid>
      <Headers>
        <Header Name="Objekt" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>BaneNORBaneDataID</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>bef4d979-bacb-4911-a8a7-80635b4a0312</Guid>
      <Headers>
        <Header Name="Beskrivelse" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>str = "Vertikaltrase, " .. (name ~= "" and name or "Start/Sutt)")
if ocpRef then
	str = str .. ", " .. getObjectFromId(ocpRef).name
end
return str</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>76b87e66-27ed-427a-93e7-b8ee66cb9827</Guid>
      <Headers>
        <Header Name="Tilhører objekt" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>Ascending</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>Alignment.code</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>86b27289-9419-4ecc-8d4a-2e3da3f8fe9f</Guid>
      <Headers>
        <Header Name="Tilhører lokasjon" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"TODO"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>e25d4b1c-aa3e-42ab-98c6-cfafa7233448</Guid>
      <Headers>
        <Header Name="Navn/nr" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>if name == "(Linje start/slutt)" then
	if pos &lt;= Alignment.RcAlignment.HorizontalProfile.Length/2 then
		return "Linje start"
	else
		return "Linje slutt"
	end
else
	return name
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>ac22abc1-b59e-4457-825b-896afd9a7a46</Guid>
      <Headers>
        <Header Name="Idriftssatt dato" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"TODO"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>7169b1a9-7a4a-4f4c-ad7f-4c2cd78542f8</Guid>
      <Headers>
        <Header Name="Profil(fra) [km]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>return string.format("%.06f",Mileage/1000)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
      <Headers>
        <Header Name="Km(fra) [km]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>Ascending</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>refId = getAlignmentInfo().ReferenceAlignmentId
rm = getAlignmentInfo(refId).Mileage
return rm and string.format("%.03f",rm/1000) or ""</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>76d50cbf-7dde-41dc-9485-2de6e15df812</Guid>
      <Headers>
        <Header Name="Side(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"Senter"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>5ed3a550-2ff2-4371-a588-efaa021f2e53</Guid>
      <Headers>
        <Header Name="Sportype(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>trackUsages = RcSection:filter(function(x) return x.RcType == "Sporbruk" end)
if getCollectionLength(trackUsages) &gt; 0 then
	return trackUsages[0].Variant
else
	return "Ukjent"
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>0f52b60a-38bb-40a0-9d96-54f317f6ef1d</Guid>
      <Headers>
        <Header Name="Spornr(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>Alignment.code</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>5e8302d5-af4c-4446-aea4-143f4d648e36</Guid>
      <Headers>
        <Header Name="Avst/Spormidt(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>0</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>e28acf01-34e6-4a79-9b31-8b7fc26d6be0</Guid>
      <Headers>
        <Header Name="Eier" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"Bane NOR"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>fc15f89b-676d-4a62-a0c6-4ff124763b52</Guid>
      <Headers>
        <Header Name="Nord(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",geoCoord.Y)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>8df53a42-bed9-4667-a761-440c46a5197b</Guid>
      <Headers>
        <Header Name="Øst(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",geoCoord.X)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>5f2711e2-0b3c-485f-8ea0-376ab81cef28</Guid>
      <Headers>
        <Header Name="Høyde(fra)" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",geoCoord.Z)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>2e3d26fe-2da8-4495-9570-06159653e2af</Guid>
      <Headers>
        <Header Name="Dokumentreferanse" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"TODO"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>fa469762-6685-482f-b3b3-10b31d5f6589</Guid>
      <Headers>
        <Header Name="Serienr." />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>"TODO"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
      <Headers>
        <Header Name="Trasépunkt" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>if name == "(Linje start/slutt)" then
	if pos &lt;= Alignment.RcAlignment.HorizontalProfile.Length/2 then
		return "Linje start"
	else
		return "Linje slutt"
	end
else
	return name
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>3b27856d-3955-4cb8-b54e-9d43504244fb</Guid>
      <Headers>
        <Header Name="Kurveradius [m]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f", getAlignmentInfo().NearestVerticalVertex.Radius)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>ef6c1bb3-82c0-40aa-b3a7-9291375d5a15</Guid>
      <Headers>
        <Header Name="Tangentlengde [m]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",getAlignmentInfo().NearestVerticalVertex.Length)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>5035e780-fad1-4702-b9ad-511753fa60ef</Guid>
      <Headers>
        <Header Name="Tangenthøyde [m]" />
      </Headers>
      <Width>50</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",
	getAlignmentInfo().NearestVerticalVertex.VerticalCurveEnd.Elevation
	- getAlignmentInfo().NearestVerticalVertex.VerticalCurveStart.Elevation)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>5057f2f8-f3a1-4088-b09d-e771854752e8</Guid>
      <Headers>
        <Header Name="Nord" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",geoCoord.Y)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>de8b2e56-0399-416a-b414-6334d9cfb492</Guid>
      <Headers>
        <Header Name="Øst" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>string.format("%.03f",geoCoord.X)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>69e97ff0-6a59-49ff-aad9-128da3a2f848</Guid>
      <Headers>
        <Header Name="Høyde [m]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>if Variant == "SE1" then
	return string.format("%.03f",getAlignmentInfo().NearestVerticalVertex.VerticalCurveStart.Elevation)
elseif Variant == "SE2" then
	return string.format("%.03f",getAlignmentInfo().NearestVerticalVertex.VerticalCurveEnd.Elevation)
else
	return ""
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>d26d4f01-0cef-4c8d-bd72-ecadde152216</Guid>
      <Headers>
        <Header Name="Profil SE1 [Km]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>ai = getAlignmentInfo()
if ai.NearestVerticalVertex.VerticalCurveStart.Mileage then
	return string.format("%.06f",ai.NearestVerticalVertex.VerticalCurveStart.Mileage / 1000)
else
	return ""
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>8157325e-542a-4044-b254-e21d5229adaa</Guid>
      <Headers>
        <Header Name="SE 1 Stigning  [o/oo]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>ai = getAlignmentInfo()
if ai.NearestVerticalVertex.VerticalCurveStart.Gradient and not RC__isNan(ai.NearestVerticalVertex.VerticalCurveStart.Gradient) then
	return string.format("%.02f",ai.NearestVerticalVertex.VerticalCurveStart.Gradient)
else
	return ""
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>68515a3a-70d2-408b-8acb-d2191ca1f040</Guid>
      <Headers>
        <Header Name="Profil SE2 [Km]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>ai = getAlignmentInfo()
if ai.NearestVerticalVertex.VerticalCurveEnd.Mileage then
	return string.format("%.06f",ai.NearestVerticalVertex.VerticalCurveEnd.Mileage / 1000)
else
	return ""
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>90f19c72-7061-4e9a-9e72-601e9124d9bc</Guid>
      <Headers>
        <Header Name="SE 2 Stigning [o/oo]" />
      </Headers>
      <Width>40</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>ai = getAlignmentInfo()
if ai.NearestVerticalVertex.VerticalCurveEnd.Gradient and not RC__isNan(ai.NearestVerticalVertex.VerticalCurveEnd.Gradient) then
	return string.format("%.02f",ai.NearestVerticalVertex.VerticalCurveEnd.Gradient)
else
	return ""
end</Data>
    </ColumnSpecification>
  </Columns>
  <SortOrder>
    <string>76b87e66-27ed-427a-93e7-b8ee66cb9827</string>
    <string>10272f0b-a413-49f6-bd6a-b520ea345d97</string>
  </SortOrder>
  <NewColumnWidth xsi:nil="true" />
			</TableSpecification>
		</InsertTable>
	</ObjectType>



<!--========================================================================================================
	COMMON / HIGH VOLTAGE
	OVERHEAD CONTACT WIRE SUPPORT MAST TABLE
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableOcsPoles" Name="JBTFE_DIV KL-tabell"
				Layer="JBTFE_TABELLER" Color="ByLayer"
				Group="Elektro Høyspent/Kontaktledningstabeller"
				>

		<RelationSpace>tabell</RelationSpace>
			  
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Mastetabell 1" >
			<Variant Name="Mastetabell 1" />
			<Variant Name="Mastetabell 2" />
			<Variant Name="Utliggere" />
			<Variant Name="Ledninger" />
			<Variant Name="Barduner" />
			<Variant Name="Isolatorer" />
		</Variants>
		
		<InsertTable VariantName="Mastetabell 1" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Mastetabell for kontaktledningsanlegg</Title>
				<IncludeTitle>true</IncludeTitle>
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>
					RcType:sub(1,9) == "JBTEH_MAS" 
					or RcType == rctype_TunnelWallFixing 
					or RcType == rctype_WireTensioningBalancer
					or RcType == rctype_MidpointAnchor
				</LuaFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<Font>RC-STANDARD</Font>
				<TitleTextHeight>3.5</TitleTextHeight>
				<HeaderTextHeight>2.5</HeaderTextHeight>
				<DataTextHeight>1.8</DataTextHeight>
				<VerticalCellMargin>1</VerticalCellMargin>
				<HorizontalCellMargin>1</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>270</WrapDepth>
				<WrapSpacing>10</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>true</RepeatHeaders>
				<TableFormat>Standard</TableFormat>
				<Columns>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Mast</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>tostring(Name:gsub("eksisterende","eks."))</Data>
						<Title>Nr</Title>
						<Sort>Ascending</Sort>
						<Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Mast</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>string.format("%.03f",Mileage/1000)</Data>
						<Title>Profil\Peget spor</Title>
						<Sort>Ascending</Sort>
						<Guid>630b8470-4cee-4f85-875f-9634b9076eef</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Mast</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>string.format("%.01f",Spanlength)</Data>
						<Title>Spenn-\Plengde</Title>
						<Sort />
						<Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Mast</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>
							if (string.find(Variant:lower(),"hengemast")) then 
								if (string.find(OcsCrossSection,"Ø120")) then
									s = "HGM Ø120" 
								elseif (string.find(OcsCrossSection,"100x100")) then
									s = "HGM" 
								elseif (string.find(OcsCrossSection,"100x150")) then
									s = "HGM" 
								elseif (string.find(OcsCrossSection,"100x200")) then
									s = "HGM" 
								else
									s = "Ukjent Masteprofil ["..OcsCrossSection.."]",_warning
								end
								return s
							else
								return OcsCrossSection
							end
						</Data>
						<Title>Mastetype</Title>
						<Sort />
						<Guid>eb169134-3c23-4575-8073-fa8da33a13a7</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Mast</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>-- "Mastens stilling" betyr egentlig "mastesymbol med utligger".
--
--   Nedenfor vil "*" bety enten O = gittermast, X = hengemast, 8 = bjelkemast G = GMB-mast
--
--   *-   Enkel utligger til høyre side i økende km-retning
--  -*    Enkel utligger til venstre side i økende km-retning
--   *=   Dobbel utligger til høyre side i økende km-retning
--  =*    Dobbel utligger til venstre side i økende km-retning
--
-- Kombinasjoner er tillatt - enkel/dobbel til begge sider.
--

local symbol = "*"
if Variant:lower():match("henge") then 
	symbol = "X"
elseif Variant:lower():match("gmb") then -- 2019-05-05 CLFEY foreslår 'G' for GMB-master.
	symbol = "G"
elseif Variant:lower():match("b%-mast") or Variant:lower():match("h%-mast") then 
	symbol = "O"
elseif Variant:lower():match("bjelke") then 
	symbol = "8"
else
	return "Ukjent Variant ["..Variant.."].",_warning

if (getCollectionLength(Relations[rel_OcsPole_Has_Cantilever]) == 0) then
	return "Har ikke utligger",_warning
elseif (getCollectionLength(Relations[rel_OcsPole_Has_Cantilever]) == 1) then
	if (this.DistanceToAlignment - Relations[rel_OcsPole_Has_Cantilever][0].DistanceToAlignment &gt; 0) then
		return "-"..symbol
	else 
		return symbol.."-"
	end
else
	--getCollectionLength(Relations[rel_OcsPole_Has_Cantilever]) &gt; 1
	return "Har ikke laget formel for multiple utliggere",_warning
end</Data>
						<Title>Retning</Title>
						<Sort />
						<Guid>5eeb2da8-04be-46f2-82a8-e33d3de50004</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Mast</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>string.format("%.02f",getAlignmentInfo().DistanceToAlignment)</Data>
						<Title>CL mast\PCL spor</Title>
						<Sort />
						<Guid>f3d18f52-4971-46a6-a83b-0e834c0ea2f3</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Utligger</Title>
							</Header>
						</Headers>
						<Width>15</Width>
						<Data>Relations[rel_OcsPole_Has_Cantilever][0].Variant</Data>
						<Title>System</Title>
						<Sort />
						<Guid>c8b4a51f-3670-449c-8819-a1c47fba8d09</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Utligger</Title>
							</Header>
						</Headers>
						<Width>15</Width>
						<Data>Relations[rel_OcsPole_Has_Cantilever][0].StaggerDisplay</Data>
						<Title>Sikk-\Psakk</Title>
						<Sort />
						<Guid>9c80dade-86df-4959-acd4-cd03be48c176</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Spor</Title>
							</Header>
						</Headers>
						<Width>30</Width>
						<Data>Alignment.code</Data>
						<Title>Nr</Title>
						<Sort />
						<Guid>94bca7ee-e084-48c4-8129-42573b7b259c</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Spor</Title>
							</Header>
						</Headers>
						<Width>15</Width>
						<Data>
							r = getAlignmentInfo().CurveRadius
							if r == math.huge then 
								return "RL"
							else 
								if math.abs(r) > 5e5 then 
									return "RL"
								else
									if getAlignmentInfo().CurveRotation:upper() == "CCW" then
										return string.format(".%0f",r)
									else
										return string.format("%.0f",-r)
									end
								end
							end
						</Data>
						<Title>Kurve-\Pradius</Title>
						<Sort />
						<Guid>861ae53f-c887-4774-86c2-122e8369dd8c</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Spor</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>local c = getAlignmentInfo().Cant
							if (RC__isNan(c)) then
								return "-"
							else
								return string.format("%.0f",c)
							end
						</Data>
						<Title>OH</Title>
						<Sort />
						<Guid>1378d22d-c88d-41c9-a54b-96db95d2d3c4</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bestemmende spor</Title>
							</Header>
						</Headers>
						<Width>30</Width>
						<Data>ReferenceAlignment.code</Data>
						<Title>Nr</Title>
						<Sort />
						<Guid>74af20b1-7ec9-4ec6-85b6-7e8bda973470</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bestemmende spor</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>string.format("%d %.0d",ReferenceMileage/1000,10*(ReferenceMileage%1000))</Data>
						<Title>Km.</Title>
						<Sort />
						<Guid>5c76f0af-f694-4c2b-b22d-378169c7fdf3</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bestemmende spor</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>string.format("%.02f",getAlignmentInfo(getObjectFromId(ReferenceAlignment)).DistanceToAlignment)</Data>
						<Title>CL mast\PCL spor</Title>
						<Sort />
						<Guid>87fda45d-6ea8-465c-9994-907106a84c16</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Av-\Pspenning</Title>
							</Header>
						</Headers>
						<Width>20</Width>
						<Data>"uferdig"</Data>
						<Title>Avsp.</Title>
						<Sort />
						<Guid>d2a36cb1-b7cb-4c8e-8a87-671ca9cabfe7</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers />
						<Width>50</Width>
						<Data />
						<Title>Merknader</Title>
						<Sort />
						<Guid>0b9b2747-97b6-46de-ba8b-31d4d400faf9</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>630b8470-4cee-4f85-875f-9634b9076eef</string>
					<string>71b321ec-4bc3-493d-974b-2b01236d720c</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>


		
		<InsertTable VariantName="Kontaktledningsmaster" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
  <Title>Kontaktledningsmaster</Title>
  <IncludeTitle>true</IncludeTitle>
  <ColumnSelectionSelf>true</ColumnSelectionSelf>
  <ColumnSelectionFromMasterTable>false</ColumnSelectionFromMasterTable>
  <LuaPreviewAutoExecute>false</LuaPreviewAutoExecute>
  <LuaPreviewRowSelectionSearchFilter />
  <ShowInvisibleObjects>false</ShowInvisibleObjects>
  <ObjectManagerFilterList />
  <ObjectTypeBrowser>false</ObjectTypeBrowser>
  <EnableLuaFilter>false</EnableLuaFilter>
  <LuaFilter>--[[
	Tabell for kontaktledningsmaster
	--------------------------------
	Catenary OCS pole table
	
	2022-05-10_003 CLFEY Created (based on earlier version).
	2022-06-07_004 CLFEY Removed the fixpoint from the collection of WTBs, if present
	2022-06-08_005 CLFEY Added power interrupters to the comment field. NB each interrupter must be
						located within 25 cm from its OCS pole.
	2022-06-09_006 CLFEY Re-written column code for OCS pole height
	2022-06-14_007 CLFEY/SINBRE Adapted to multiple spanlengths.
	2022-06-16_008 CLFEY/RAGBER/SINBRE Column "Avspenning" now tackles multiple WTBs at one cantilever's
						OCS pole. Also tackles other WTBs at one WTB's pole.
	2022-06-21_009 CLFEY Increased tolerance 'tol' in the "Avspenning" column from 1.0 to 1.2, to accept
						WTB's for AT conductors drawn at distance 1.0 from center OCS pole.
	2022-06-23_010 CLFEY Introduced a second tolerance and checking for a midpoint anchor ('fixpunkt')
						close to the tip of a cantilever (CantileverLength in plan view, disregarding cant).

	Find wire parts with a name that matches the pattern 'XX-YYY' stated in the table's 'Var0' property.
	Then list all OCS poles inside the area stated as the table's 'Area' property, having a role
	for the contact wire in question.
	
	It is expected that the wire tension balancers (wtb1 and wtb2) connect to wire parts 'a' and 'e'.
	It is expected that the one or two cantilevers (cnt) connect to wire parts 'b' and 'd'.
	It is expected that the bulk of cantilevers (cnt) connect to wire part 'c'.
	It is expected that the wtb's for the midpoint anchor connect to wire part 'f'.
	It is expected that the midpoint anchor belongs to the track but has a relation to wire part 'c'.
	
	All wire parts must be of the form 'XX-YYYx' where x is 'a' to 'e'.
	In addition, there will be midtpoint anchor lines (fixline) name as 'XX-YYYf', suffix 'f'.
--]]


--Abbreviations:
--	cow		contact wire
--	gwy		guywire (spanner)
--	pol		OCS pole (mast), all types
--	fun		OCS pole foundation, guywire or spanner foundation
--	cnt		cantilever
--	mal		midpoint anchor line
--  map		midpoint anchor point
--	wtb		wire tension balancer [avspenning]

ContactWireRcType				= rctype_ContactWire 
MidpointAnchorRcType			= rctype_WireTensioningBalancer
MidPointAnchorVariant			= "Fixpunkt"
relCowCntFittedToCantilever		= "Festet til utligger"
relCowWtbHasWireTensionBalancer	= "Har avspenning"

-- Find all wire parts present in the table's dedicated area, with the wire part number as stated in Var0:
-- Ignore the midpoint anchoring lines.
contactWireParts = DocumentData.ObjectCollection:filter(
	function (x)
		return x.RcType == ContactWireRcType
			and (x.code:match("(%d+%-%d+)") == Var0) -- 'XX-YYY'
			and not (x.code:match("%d+%-%d+(%a)") == 'f') -- ignore all 'XX-YYYf' - the midpoint anchor lines
			and x:isVisible()
	end)
nContactWireParts = getCollectionLength(contactWireParts)

-- For each wire part, add its cantilevers and wtbs:
items = {}  --The empty collection (safe Lua coding).
for i=0,nContactWireParts-1 do
	wireTensionBalancers = getRelatedObjects(relCowWtbHasWireTensionBalancer,contactWireParts[i])
	wireTensionBalancers = wireTensionBalancers:filter(function (x) return not x.Variant:upper():match("FIX") end) --Remove the fixpoint (concerns DNA 2021.a)
	cantilevers = getRelatedObjects(relCowCntFittedToCantilever,contactWireParts[i])
	items = getUnionOfCollections({items,wireTensionBalancers,cantilevers})
end

return items</LuaFilter>
  <UseDataSetFilter>true</UseDataSetFilter>
  <EnableCustomSettings>true</EnableCustomSettings>
  <TitleTextHeight>1.6</TitleTextHeight>
  <HeaderTextHeight>1.3</HeaderTextHeight>
  <DataTextHeight>1.3</DataTextHeight>
  <VerticalCellMargin>0.15</VerticalCellMargin>
  <HorizontalCellMargin>0.15</HorizontalCellMargin>
  <BlockScale>1</BlockScale>
  <MinRowHeight>1</MinRowHeight>
  <EnableWrap>false</EnableWrap>
  <WrapDepth>270</WrapDepth>
  <WrapSpacing>10</WrapSpacing>
  <WrapDirection>Right</WrapDirection>
  <RepeatHeaders>true</RepeatHeaders>
  <VerticalNumbering>
    <Enabled>false</Enabled>
    <IsVertical>true</IsVertical>
    <Location>Left</Location>
    <NumberFormat>Numbers</NumberFormat>
    <TextHeight>2</TextHeight>
    <HideBorders>true</HideBorders>
    <Alignment>MiddleCenter</Alignment>
  </VerticalNumbering>
  <HorizontalNumbering>
    <Enabled>false</Enabled>
    <IsVertical>false</IsVertical>
    <Location>Bottom</Location>
    <NumberFormat>Numbers</NumberFormat>
    <TextHeight>2</TextHeight>
    <HideBorders>true</HideBorders>
    <Alignment>MiddleCenter</Alignment>
  </HorizontalNumbering>
  <TableFormat>Standard</TableFormat>
  <Font>ISOCP</Font>
  <Columns>
    <ColumnSpecification>
      <Guid>f1f18abb-27b1-4628-9b2f-d386b18f3229</Guid>
      <Headers>
        <Header Name="Mast" />
        <Header Name="ObjektID" />
      </Headers>
      <Width>13</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	m=Relations[rel_Cantilever_BelongsTo_OcsPole][0]
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]	
	
	end
else
	return "Unrecognized RcType"
end

return tostring(m.BaneNORBaneDataID)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
      <Headers>
        <Header Name="Mast" />
        <Header Name="Nr" />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>Ascending</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	m=Relations[rel_Cantilever_BelongsTo_OcsPole][0]
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]	
	end
else
	return "Unrecognized RcType"
end

return tostring(m.name)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>630b8470-4cee-4f85-875f-9634b9076eef</Guid>
      <Headers>
        <Header Name="Mast" />
        <Header Name="Profil\PRef. spor\P[km]" />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>Ascending</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	m=Relations[rel_Cantilever_BelongsTo_OcsPole][0]
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]	
	
	end
else
	return "Unrecognized RcType"
end

return string.format("%.03f",m.ReferenceMileage/1000)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
      <Headers>
        <Header Name="Mast" />
        <Header Name="Spenn-\Plengde\P[m]" />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.1
p1 = "L%d+%-%d+"
p2 = "%-(%d+%.%d)%-"

relCntCowCantileverForContactWire	= "Utligger for kontaktledning"
relWtbCowWtbForContactWire			= "Avspenner kontaktledning"

if RcType == rctype_Cantilever then
	pole = Relations[rel_Cantilever_BelongsTo_OcsPole][0]

elseif RcType == rctype_WireTensioningBalancer then
	if dir:lower() == "down" then
		return ""
	else
		poles = getUnionOfCollections({
					getNearbyPointObjects2D(tol,rctype_OcsDropArmPoleForBridgeOrTunnel),
					getNearbyPointObjects2D(tol,rctype_OcsPole),
					getNearbyPointObjects2D(tol,rctype_OcsDropArmUnderPortal),
					getNearbyPointObjects2D(tol,rctype_TunnelWallFixing)
				})
		if getCollectionLength(poles) == 0 then return "No OCS pole found near WTB "..this.code end
		pole = poles[0]
	end
else
	return "Bad object type ["..this.RcType.."]."
end

wireNames = {}
for match in (pole.SpanlengthDisplay):gmatch(p1) do
	table.insert(wireNames,match)
end
wireNames = getCollectionFromTable(wireNames)
nWires = getCollectionLength(wireNames)
	
spanLengths = {}
for match in (pole.SpanlengthDisplay):gmatch(p2) do
	table.insert(spanLengths,match)
end
spanLengths = getCollectionFromTable(spanLengths)

if nWires == 0 then
	--The OCS pole had just one spanlength mentioned:
	return string.format("%.01f",spanLengths[0])
else
	--Find the spanlength corresponding to this cantilever's contact wire:
	for i = 0,nWires-1 do
		if RcType == rctype_Cantilever then
			rCow,nCow = getRelatedObjects(relCntCowCantileverForContactWire)
		elseif RcType == rctype_WireTensioningBalancer then
			rCow,nCow = getRelatedObjects(relWtbCowWtbForContactWire)
		else
			return _error,"Bad RcType ["..RcType.."]."
		end
		if nCow == 0 then return "Cantilever/WTB "..this.name.." has no contact wire" end
		if rCow[0].name == wireNames[i] then
			return string.format("%.01f",spanLengths[i])
		end
	end
end

return string.format("%.01f",poles[0].Spanlength)</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>eb169134-3c23-4575-8073-fa8da33a13a7</Guid>
      <Headers>
        <Header Name="Mast" />
        <Header Name="Type" />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	m=Relations[rel_Cantilever_BelongsTo_OcsPole][0]
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]	
	
	end
else
	return "Unrecognized RcType"
end

if (string.find(m.Variant,"Hengemast")) then 
	if (string.find(m.OcsCrossSection,"Ø120")) then
		s = "HGM" 
	elseif (string.find(m.OcsCrossSection,"100x100")) then
		s = "HGM" 
	elseif (string.find(m.OcsCrossSection,"100x150")) and m.Var4 == "Kun fiktivt punkt for avspenning" then
		s = "Fiktiv" 
		elseif (string.find(m.OcsCrossSection,"100x150")) and m.Var4 ~= "Kun fiktivt punkt for avspenning" then
		s = "HGM" 
	elseif (string.find(m.OcsCrossSection,"200x100")) then
		s = "HGM" 
	elseif (string.find(m.OcsCrossSection,"100x200")) then
		s = "HGM" 
	else
		s = "Ukjent Masteprofil ["..m.OcsCrossSection.."]",_warning
	end
	
	return s
end	
if m.RcType == rctype_TunnelWallFixing then
return "TF"
end
if m.RcType == rctype_OcsPole and m.Var3 == "HE260M" then 
	return "HEM260"
	elseif m.RcType == rctype_OcsPole then
	return tostring(m.OcsCrossSection:gsub("eksisterende","eks."))
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>59f1642a-0cbf-4c5f-9c66-11831e8ffce1</Guid>
      <Headers>
        <Header Name="Mast" />
        <Header Name="Høyde\P[m]" />
      </Headers>
      <Width>6</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	return Relations[rel_Cantilever_BelongsTo_OcsPole][0].OcsPoleHeight/1000 --[m] OCS pole height

elseif RcType == rctype_WireTensioningBalancer then
	a = getNearbyPointObjects2D(tol, rctype_OcsPole)
	b = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)
	c = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)
	poles = getUnionOfCollections({a,b,c})
	n = getCollectionLength(poles)
	if n == 0 then
		return "No OCS pole found within "..tol".. m from WTB "..code
	elseif n == 1 then
		return poles[0].OcsPoleHeight/1000 --[m] OCS pole height
	else
		--n &gt;= 2
		return "More than one OCS pole found within "..tol.." m from WTB "..code
	end

else
	return "Unexpected RC type ["..RcType.."] for object "..code
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>5eeb2da8-04be-46f2-82a8-e33d3de50004</Guid>
      <Headers>
        <Header Name="Mast" />
        <Header Name="Retning" />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>-- "Mastens stilling" betyr egentlig "mastesymbol med utligger".
--
--   Nedenfor vil "*" bety enten O = gittermast, X = hengemast, 8 = bjelkemast G = GMB-mast
--
--   *-   Enkel utligger til høyre side i økende km-retning
--  -*    Enkel utligger til venstre side i økende km-retning
--   *=   Dobbel utligger til høyre side i økende km-retning
--  =*    Dobbel utligger til venstre side i økende km-retning
--
-- Kombinasjoner er tillatt - enkel/dobbel til begge sider.
--
tol = 0.25
if RcType == rctype_Cantilever then
	m=Relations[rel_Cantilever_BelongsTo_OcsPole][0]
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]
else
	return "Unrecognized RcType"
	end
else
	return "Unrecognized RcType"
end

local symbol = "*"
if m.Variant:match("Henge") ~= nil then 
	symbol = "X"
elseif m.Variant:match("GMB") ~= nil then -- 2019-05-05 CLFEY foreslår 'G' for GMB-master. NB! Test på 'GMB' før 'B-mast'  
	symbol = "G"
elseif m.Variant:match("B%-mast") ~= nil or Variant:match("H%-mast") ~= nil then 
	symbol = "O"
elseif m.Variant:match("Bjelke") ~= nil then 
	symbol = "8"
else
	return "Ukjent Variant ["..Variant.."].",_warning
end
if (getCollectionLength(m.Relations[rel_OcsPole_Has_Cantilever]) == 0) then
	return symbol,_warning -- Har ikke utligger
elseif (getCollectionLength(m.Relations[rel_OcsPole_Has_Cantilever]) == 1) then
	if (m.DistanceToAlignment - m.Relations[rel_OcsPole_Has_Cantilever][0].DistanceToAlignment &gt; 0) then
		return "-"..symbol
	else 
		return symbol.."-"
	end
elseif (getCollectionLength(m.Relations[rel_OcsPole_Has_Cantilever]) == 2) then
	distKL=m.DistanceToAlignment	--KLmast avstand til spor
	distU1=m.Relations[rel_OcsPole_Has_Cantilever][0].DistanceToAlignment  	--Utligger1 avstand til spor
	distU2=m.Relations[rel_OcsPole_Has_Cantilever][1].DistanceToAlignment	--Utligger2 avstand til spor
	
	if distU1 &gt; 0 and distU2 &gt; 0 then
		return "="..symbol
	elseif distU1 &lt; 0 and distU2 &lt; 0 then
		return symbol.."="
	else 
		return "-"..symbol.."-"
	end

elseif (getCollectionLength(m.Relations[rel_OcsPole_Has_Cantilever]) == 3) then
	distKL=m.DistanceToAlignment	--KLmast avstand til spor
	distU1=m.Relations[rel_OcsPole_Has_Cantilever][0].DistanceToAlignment  	--Cantilever 1 distance to alignment
	distU2=m.Relations[rel_OcsPole_Has_Cantilever][1].DistanceToAlignment	--Cantilever 2 distance to alignment
	distU3=m.Relations[rel_OcsPole_Has_Cantilever][2].DistanceToAlignment	--Cantilever 3 distance to alignment
	
	if 	   distU1 &gt; 0 and distU2 &gt; 0 and distU3 &gt; 0 then 	return "≡"..symbol
	
	elseif distU1 &lt; 0 and distU2 &gt; 0 and distU3 &gt; 0 then 	return "="..symbol.."-"
	elseif distU1 &gt; 0 and distU2 &lt; 0 and distU3 &gt; 0 then 	return "="..symbol.."-"
	elseif distU1 &gt; 0 and distU2 &gt; 0 and distU3 &lt; 0 then 	return "="..symbol.."-"
	
	elseif distU1 &gt; 0 and distU2 &gt; 0 and distU3 &lt; 0 then 	return "-"..symbol.."="
	elseif distU1 &lt; 0 and distU2 &gt; 0 and distU3 &gt; 0 then 	return "-"..symbol.."="
	
	elseif distU1 &lt; 0 and distU2 &lt; 0 and distU3 &lt; 0 then 	return symbol.."≡"
	
	else 
		return "???: "..distU1.."/"..distU2.."/"..distU3.."/".."≡"..symbol --"-"..symbol.."-"
	end	
	
	
elseif (getCollectionLength(m.Relations[rel_OcsPole_Has_Cantilever]) == 4) then
	return "="..symbol.."="

else
	--Non-standard combinations of four or more:
	return "Har ikke laget formel for fire utliggere i 1/3 eller 3/1 konfigurasjon (eller fem og fler).",_warning
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>f3d18f52-4971-46a6-a83b-0e834c0ea2f3</Guid>
      <Headers>
        <Header Name="Mast" />
        <Header Name="CL mast\PCL spor\P[m]" />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol=0.25

if RcType == rctype_Cantilever then
	m=Relations[rel_Cantilever_BelongsTo_OcsPole][0]
	return string.format("%.02f",RC__getDistanceToAlignmentFromRelatedObject(rel_Cantilever_BelongsTo_OcsPole))
	
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]	
	
		
	end 
	return string.format("%.02f",m.DistanceToAlignment)
else
	return "Unrecognized RcType"
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>c8b4a51f-3670-449c-8819-a1c47fba8d09</Guid>
      <Headers>
        <Header Name="Mast" />
        <Header Name="Kth\P[m]" />
      </Headers>
      <Width>4</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
	  
if RcType == rctype_Cantilever then
	return string.format("%.02f",ContactWireHeight)

elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
		m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
	elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
		m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
	elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
		m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
	elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
		m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]	
	end
	return Var1

else
	return "Unrecognized RcType"
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>38e72479-9999-457e-8c95-6620093eb48a</Guid>
      <Headers>
        <Header Name="Fundament" />
        <Header Name="ObjektID" />
      </Headers>
      <Width>13</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	m=Relations[rel_Cantilever_BelongsTo_OcsPole][0].Relations[rel_OcsPoleOrAnchoringFootplate_Has_OcsFoundation][0]
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0].Relations[rel_OcsPoleOrAnchoringFootplate_Has_OcsFoundation][0]		
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0].Relations[rel_OcsPoleOrAnchoringFootplate_Has_OcsFoundation][0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0].Relations[rel_OcsPoleOrAnchoringFootplate_Has_OcsFoundation][0]		
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0].Relations[rel_OcsPoleOrAnchoringFootplate_Has_OcsFoundation][0]			
	end
else
	return "Unrecognized RcType"
end

return m.BaneNORBaneDataID</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>9c80dade-86df-4959-acd4-cd03be48c176</Guid>
      <Headers>
        <Header Name="Fundament" />
        <Header Name="Type" />
      </Headers>
      <Width>17</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>if RcType == rctype_WireTensioningBalancer then

  if getNearbyPointObjects2D(0.5,rctype_OcsPole)[0].Relations[rel_OcsPoleOrAnchoringFootplate_Has_OcsFoundation][0].Variant == "Boret KL-fundament, Ø555-191x374xM36" then
return "Boret KL-fund. Ø555"
end

if getNearbyPointObjects2D(0.5,rctype_OcsPole)[0].Relations[rel_OcsPoleOrAnchoringFootplate_Has_OcsFoundation][0].Variant == "Spesial KL-fundament" then
return "Spesial KL-fund."
end

elseif RcType == rctype_Cantilever then
if Relations[rel_Cantilever_BelongsTo_OcsPole][0].Relations[rel_OcsPoleOrAnchoringFootplate_Has_OcsFoundation][0].Variant == "Boret KL-fundament, Ø555-191x374xM36" then
return "Boret KL-fund. Ø555"
end
if Relations[rel_Cantilever_BelongsTo_OcsPole][0].Relations[rel_OcsPoleOrAnchoringFootplate_Has_OcsFoundation][0].Variant == "Spesial KL-fundament" then
return "Spesial KL-fund."
end
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>94bca7ee-e084-48c4-8129-42573b7b259c</Guid>
      <Headers>
        <Header Name="Spor" />
        <Header Name="Nr" />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	return Alignment.name
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]	
	
	end
else
	return "Unrecognized RcType"
end
return m.Alignment.name</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>861ae53f-c887-4774-86c2-122e8369dd8c</Guid>
      <Headers>
        <Header Name="Spor" />
        <Header Name="Kurve-\Pradius\P[m]" />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	m=Relations[rel_HvSwitrel_Cantilever_BelongsTo_OcsPolech_IsInstalledOn_OcsPole][0]
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]	
	end
else
	return "Unrecognized RcType"
end

r = m:getAlignmentInfo().CurveRadius
	if math.abs(r) &gt; 5e5 then 
		return "RL"
	else
		if m:getAlignmentInfo().CurveRotation:upper() == "CCW" then
			return string.format("%.0f",-r)
		else
			return string.format("%.0f",r)
	end
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>1378d22d-c88d-41c9-a54b-96db95d2d3c4</Guid>
      <Headers>
        <Header Name="Spor" />
        <Header Name="OH\P[mm]" />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	m=Relations[rel_Cantilever_BelongsTo_OcsPole][0]
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]		
	
	end
else
	return "Unrecognized RcType"
end

local c = m:getAlignmentInfo().Cant

if (RC__isNan(c)) then
	return "0"
else
	return string.format("%.0f",c)
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>2894213c-f022-4435-8d46-efbcb0bb4b36</Guid>
      <Headers>
        <Header Name="Spor" />
        <Header Name="Ref.spor.\Pnr" />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	return Alignment.name
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]	
	
	end
else
	return "Unrecognized RcType"
end
return m.ReferenceAlignment.name</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>f2d682aa-7a03-46f2-9f09-aaa1302771fe</Guid>
      <Headers>
        <Header Name="Andre konstruksjoner" />
        <Header Name="Bardun retn." />
      </Headers>
      <Width>8</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
--m=Relations[rel_Cantilever_BelongsTo_OcsPole][0] --Do not use this construct here
if RcType == rctype_Cantilever then
	m=Relations[rel_Cantilever_BelongsTo_OcsPole][0]
elseif RcType == rctype_WireTensioningBalancer then
	if getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsPole)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsPole)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_OcsDropArmUnderPortal)[0]	
elseif getCollectionLength(getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)) &gt; 0.5 then
m = getNearbyPointObjects2D(tol, rctype_TunnelWallFixing)[0]	
	
	end
else
	return "Unrecognized RcType"
end

if (m.RcType == rctype_OcsPole  or m.RcType == rctype_OcsDropArmPoleForBridgeOrTunnel)
then
	vpil = "←" --"\8592"
	opil = "↑"--"\8593"
	hpil = "→" --"\8594"
	npil = "↓"--"\8595"
	ba = m.getClosestAlignments(rctype_GuyWire):
		filter(function  (x) return x.Variant:lower() == "bardun" and RC__getDistance2D(x.rcalignment.startpoint) &lt; 1.0 end )
	nb = m.getCollectionLength(ba)
	--if true then return nb,ba end
	t = m.getClosestTracks()
	tgt= m.getAlignmentInfo(t[0].id).tangent
	--if true then return tgt end
	sporvinkel = math.atan(tgt.Y, tgt.X) * 180.0/math.pi 
	--if true then return sporvinkel end
	first = true
	for i = 0, nb-1 do
		s = first and "" or s..", "
		b = ba[i]
		pe = b.RcAlignment.EndPoint
		bf = m.getNearbyPointObjects2D(tol, "JBTEH_BAF Bardunfeste", pe)[0]
		--if true then return bf end
		tgb= b.RcAlignment.StartTangent
		--if true then return tgb end
		bardunvinkel = math.atan(tgb.Y, tgb.X) * 180.0/math.pi
		--if true then return bardunvinkel end
		vinkel = bardunvinkel - sporvinkel
		if vinkel &lt; -180 then vinkel = vinkel + 360 end
		if vinkel &gt; 180 then vinkel = vinkel - 360 end
		hkurve = vinkel &gt; 50 and vinkel &lt; 130
		vkurve = vinkel &lt; -50 and vinkel &gt; -130
		medrettet = vinkel &gt; -25 and vinkel &lt; 25
		motrettet = vinkel &lt; -155 or vinkel &gt; 155
		--if true then return vinkel,bf.Variant, end
		--if true then return sporvinkel, bardunvinkel, vinkel, hkurve, vkurve medrettet, motrettet end
		if (vkurve or hkurve or medrettet or motrettet) == false then 
			return "Feil, ulovlig bardunvinkel ("..vinkel..")"
	  	end
		if hkurve and bf.Variant == "Bardunfeste fotplate, enkel" then s = s..vpil
		elseif vkurve and bf.Variant == "Bardunfeste fotplate, enkel" then s = s..hpil
		elseif motrettet and bf.Variant == "Bardunfeste fotplate, enkel" then s = s..opil
		elseif motrettet and bf.Variant == "Bardunfeste fotplate, dobbel" then s = s..opil..opil
		elseif medrettet and bf.Variant == "Bardunfeste fotplate, enkel"  then s = s..npil
		elseif medrettet and bf.Variant == "Bardunfeste fotplate, dobbel" then s = s..npil..npil
		else
			return bf.variant --"Feil skal ikke skje" -- Har ingen Bardun
		end
		first = false
	end
	return s
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>d2a36cb1-b7cb-4c8e-8a87-671ca9cabfe7</Guid>
      <Headers>
        <Header Name="Andre konstruksjoner" />
        <Header Name="Avspenning" />
      </Headers>
      <Width>16</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol1 = 1.2 --[m] Enough to find an AutoTransformer conductor being hand-drawn at a distance &lt;= 1.2 from the center of its OCS pole.
tol2 = 0.5 --[m] Enough to find the OCS pole holding a midpoint anchor at the tip of its cantilever (for DNA version 2021.a).
dnaIri = DocumentData.DnaIri:match(".+;(.d+.%a)$")

if RcType == rctype_WireTensioningBalancer then
	poles = getUnionOfCollections({
			getNearbyPointObjects2D(tol1,rctype_OcsDropArmPoleForBridgeOrTunnel),
			getNearbyPointObjects2D(tol1,rctype_OcsPole),
			getNearbyPointObjects2D(tol1,rctype_OcsDropArmUnderPortal),
			getNearbyPointObjects2D(tol1,rctype_TunnelWallFixing)
		})
	nPoles = getCollectionLength(poles)
	if nPoles == 0 then return "No OCS pole found near WTB "..this.code end
	wtb = getNearbyPointObjects2D(tol,rctype_WireTensioningBalancer,poles[0])

elseif RcType == rctype_Cantilever then
	--Look for wire tension balancers at the same OCS pole:
	rPoles,nPoles = getRelatedObjects(rel_Cantilever_BelongsTo_OcsPole)
	wtbs = getNearbyPointObjects2D(tol1,rctype_WireTensioningBalancer,rPoles[0]) --we know there must be an OCS pole here

	--Look for a midpoint anchor at the extremity of the cantilever:
	p1 = getPoint3D(this.geoCoord.X, this.geoCoord.Y)
	--Add vector from insertion point of cantilever to its tip (as seen in the OCS plan view, i.e. disregarding cant), in WCS coordinates:
	t = getAlignmentInfo(this.Alignment.id,p1).Tangent
	tg = math.atan(t.Y,t.X)
	U = getPoint3D(RC__getWcsVectorFromAcsVector(DistanceToAlignment &lt; 0 and CantileverLength or -CantileverLength, 0, tg)) --Vector pointing along the cantilever
	tipOfCantilever = getVectorSum(p1,U)
	mpas = getNearbyPointObjects2D(tol2,rctype_WireTensioningBalancer,tipOfCantilever) --collection of MPA(s), if any

	--Make a joint collection of WTBs plus a potential MPA at the same OCS pole:
	wtb = getUnionOfCollections({wtbs,mpas})

else
	return "Unrecognized RcType ["..RcType.."]."
end

t = ""
nWtb = getCollectionLength(wtb)
for i = 0, nWtb-1 do
	if i == 0 then
		t = wtb[0].name
	else
		t = t..", "..wtb[i].name
	end
end

return t</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>0b9b2747-97b6-46de-ba8b-31d4d400faf9</Guid>
      <Headers>
        <Header Name="Merknader" />
      </Headers>
      <Width>25</Width>
      <HideColumn>false</HideColumn>
      <SortOption>None</SortOption>
      <Alignment>MiddleCenter</Alignment>
      <Data>tol = 0.25
if RcType == rctype_Cantilever then
	m = Relations[rel_Cantilever_BelongsTo_OcsPole][0]

elseif RcType == rctype_WireTensioningBalancer then
	if getNearbyPointObjects2D(tol,rctype_OcsPole)[0] == nil
		and getNearbyPointObjects2D(tol,rctype_TunnelWallFixing)[0] == nil
		and getNearbyPointObjects2D(tol,rctype_OcsDropArmPoleForBridgeOrTunnel)[0] == nil 
		then
			m = getNearbyPointObjects2D(tol,rctype_OcsDropArmUnderPortal)[0]
	
	elseif getNearbyPointObjects2D(tol,rctype_OcsDropArmUnderPortal)[0] == nil
		and getNearbyPointObjects2D(tol,rctype_TunnelWallFixing)[0] == nil
		and getNearbyPointObjects2D(tol,rctype_OcsDropArmPoleForBridgeOrTunnel)[0] == nil
		then
			m = getNearbyPointObjects2D(tol,rctype_OcsPole)[0]

	elseif getNearbyPointObjects2D(tol,rctype_OcsDropArmUnderPortal)[0] == nil
		and getNearbyPointObjects2D(tol,rctype_OcsPole)[0] == nil
		and getNearbyPointObjects2D(tol,rctype_OcsDropArmPoleForBridgeOrTunnel)[0] == nil
		then
			m = getNearbyPointObjects2D(tol,rctype_TunnelWallFixing)[0]
		
	elseif getNearbyPointObjects2D(tol,rctype_OcsDropArmUnderPortal)[0] == nil
		and getNearbyPointObjects2D(tol,rctype_OcsPole)[0] == nil
		and getNearbyPointObjects2D(tol,rctype_TunnelWallFixing)[0] == nil 
		then
			m = getNearbyPointObjects2D(tol,rctype_OcsDropArmPoleForBridgeOrTunnel)[0]	
	end

else
	return "Unexpected RcType ["..RcType.."]"
end

spanner = getClosestAlignments(m,rctype_Spanner):filter(
	function (x)
		return m:RC__getDistance2D(x.RcAlignment.HorizontalProfile.StartPoint) &lt; tol
	end)
nSpanner = getCollectionLength(spanner)
interrupter = getNearbyPointObjects2D(m,tol,rctype_HvSwitch)
nInterrupter = getCollectionLength(interrupter)

if m.RcType == rctype_OcsPole and m.Relations[rel_OcsPole_IsSupportFor_OcsPortal][0] then
	tPortal = m.Relations[rel_OcsPole_IsSupportFor_OcsPortal][0].name
elseif m.RcType == rctype_OcsDropArmUnderPortal and m.Relations[rel_OcsPole_IsDropArmUnder_OcsPortal][0] then
	tPortal = m.Relations[rel_OcsPole_IsDropArmUnder_OcsPortal][0].name
else
	tPortal = ""
end

tSpanner = ""
for i = 0,nSpanner-1 do
	tSpanner = tSpanner..(i == 0 and "Strever " or ", ")..spanner[i].code
end

tInterrupter = ""
for i = 0,nInterrupter-1 do
	tInterrupter = tInterrupter..(i == 0 and "Bryter " or ", ")..interrupter[i].code
end

if m.Variant:match("eksisterende") then
	return "Eks. mast "..tPortal.." "..tSpanner.." "..m.Var4..""..tInterrupter
else
	return ""..tPortal.." "..tSpanner.." "..m.Var4..""..tInterrupter
end</Data>
    </ColumnSpecification>
  </Columns>
  <SortOrder>
    <string>630b8470-4cee-4f85-875f-9634b9076eef</string>
    <string>71b321ec-4bc3-493d-974b-2b01236d720c</string>
  </SortOrder>
  <NewColumnWidth xsi:nil="true" />
			</TableSpecification>
		</InsertTable>
		

		<InsertTable VariantName="Mastetabell 2" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Mastetabell</Title>
				<IncludeTitle>true</IncludeTitle>
				<ShowInvisibleObjects>false</ShowInvisibleObjects>
				<OMFilterList />
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>RcType:sub(1,9) == "JBTEH_MAS" and isVisible() == true</LuaFilter>
				<UseDataSetFilter>false</UseDataSetFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<TitleTextHeight>3.5</TitleTextHeight>
				<HeaderTextHeight>2.5</HeaderTextHeight>
				<DataTextHeight>1.8</DataTextHeight>
				<VerticalCellMargin>1</VerticalCellMargin>
				<HorizontalCellMargin>1</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<MinRowHeight>3</MinRowHeight>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>270</WrapDepth>
				<WrapSpacing>10</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>true</RepeatHeaders>
				<VerticalNumbering>
					<Enabled>false</Enabled>
					<IsVertical>true</IsVertical>
					<Location>Left</Location>
					<NumberFormat>Numbers</NumberFormat>
					<TextHeight>2</TextHeight>
					<HideBorders>true</HideBorders>
					<Alignment>MiddleCenter</Alignment>
				</VerticalNumbering>
				<HorizontalNumbering>
					<Enabled>false</Enabled>
					<IsVertical>false</IsVertical>
					<Location>Bottom</Location>
					<NumberFormat>Numbers</NumberFormat>
					<TextHeight>2</TextHeight>
					<HideBorders>true</HideBorders>
					<Alignment>MiddleCenter</Alignment>
				</HorizontalNumbering>
				<TableFormat>Standard</TableFormat>
				<Font>RC-STANDARD</Font>
				<Columns>
					<ColumnSpecification>
					<Guid>ebeae652-c017-4e38-bd24-c31a859dd006</Guid>
					<Headers>
						<Header Name="Mast" />
						<Header Name="Nr" />
					</Headers>
					<Width>15</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>Name</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
					<Headers>
						<Header Name="Mast" />
						<Header Name="Spenn-\Plengde [m]" />
					</Headers>
					<Width>20</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>(Spanlength == 0 and "" or string.format("%.01f",Spanlength))..(Spanlength2 == 0 and "" or string.format("/%.01f",Spanlength2))</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>eb169134-3c23-4575-8073-fa8da33a13a7</Guid>
					<Headers>
						<Header Name="Mast" />
						<Header Name="Mastetype" />
					</Headers>
					<Width>20</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>if (string.find(Variant,"Hengemast")) then 
												if (string.find(OcsCrossSection,"Ø120")) then
													s = "HGM Ø120" 
												elseif (string.find(OcsCrossSection,"100x100")) then
													s = "HGM" 
												elseif (string.find(OcsCrossSection,"150x100")) then
													s = "HGM" 
												elseif (string.find(OcsCrossSection,"200x100")) then
													s = "HGM" 
												else
													s = "Ukjent Masteprofil ["..OcsCrossSection.."]",_warning
												end
												return s
											else
												return tostring(OcsCrossSection:gsub("eksisterende","eks."))
											end</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>cc20a186-debe-4ea2-954f-f7be1f77b7fe</Guid>
					<Headers>
						<Header Name="Mast" />
						<Header Name="Åk" />
					</Headers>
					<Width>10</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>local s = rel_OcsPole_IsSupportFor_OcsPortal
				local h = rel_OcsPole_IsDropArmUnder_OcsPortal
				local r,n = getRelatedObjects(s)
				local b,t = getRelatedObjects(h)
				
				if n == 0 and t == 0 then
					return ""
				elseif n&gt;0 then
					return r[0].code
				elseif t&gt;0 then
					return b[0].code
				end</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>5eeb2da8-04be-46f2-82a8-e33d3de50004</Guid>
					<Headers>
						<Header Name="Mast" />
						<Header Name="Retning" />
					</Headers>
					<Width>10</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>-- "Mastens stilling" betyr egentlig "mastesymbol med utligger".
				--
				--   Nedenfor vil "*" bety enten O = gittermast, X = hengemast, 8 = bjelkemast G = GMB-mast
				--
				--   *-   Enkel utligger til høyre side i økende km-retning
				--  -*    Enkel utligger til venstre side i økende km-retning
				--   *=   Dobbel utligger til høyre side i økende km-retning
				--  =*    Dobbel utligger til venstre side i økende km-retning
				--
				-- Kombinasjoner er tillatt - enkel/dobbel til begge sider.
				--
				
				local symbol = "*"
				if Variant:match("Henge") ~= nil then 
					symbol = "X"
				elseif Variant:match("GMB") ~= nil then -- 2019-05-05 CLFEY foreslår 'G' for GMB-master. NB! Test på 'GMB' før 'B-mast'  
					symbol = "G"
				elseif Variant:match("B%-mast") ~= nil or Variant:match("H%-mast") ~= nil then 
					symbol = "O"
				elseif Variant:match("Bjelke") ~= nil then 
					symbol = "O"
				else
					return "",_warning
				end
				
				if (getCollectionLength(Relations[rel_OcsPole_Has_Cantilever]) == 0) then
					return "",_warning --Har ikke utligger
				elseif (getCollectionLength(Relations[rel_OcsPole_Has_Cantilever]) == 1) then
					if (this.DistanceToAlignment - Relations[rel_OcsPole_Has_Cantilever][0].DistanceToAlignment &gt; 0) then
						return "-"..symbol
					else 
						return symbol.."-"
					end
				elseif (getCollectionLength(Relations[rel_OcsPole_Has_Cantilever]) == 2) then
					if (this.DistanceToAlignment - Relations[rel_OcsPole_Has_Cantilever][0].DistanceToAlignment &gt; 0) then
						return "="..symbol
					else 
						return symbol.."="
					end
				end</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>f3d18f52-4971-46a6-a83b-0e834c0ea2f3</Guid>
					<Headers>
						<Header Name="Mast" />
						<Header Name="CL mast\PCL spor [m]" />
					</Headers>
					<Width>15</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>string.format("%.02f",getAlignmentInfo().DistanceToAlignment)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>be125708-f0f2-484a-8a30-0bf4f5ef351d</Guid>
					<Headers>
						<Header Name="Mast" />
						<Header Name="BaneData ID" />
					</Headers>
					<Width>25</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>FDVBaneDataObjektID</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>000c2d2c-237b-4553-9d80-abbc643c9a95</Guid>
					<Headers>
						<Header Name="Utligger" />
						<Header Name="Kth [m]" />
					</Headers>
					<Width>15</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>local s = rel_OcsPole_Has_Cantilever
					local r,n = getRelatedObjects(s)
				
				if n == 0 or isVisible(r[0]) == false then 
					return ""
				elseif n == 1 then
					return r[0].ContactWireHeight
				elseif n == 2 then	
				return r[0].ContactWireHeight.."/"..r[1].ContactWireHeight
				end</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>8c81f720-43ed-4520-a78f-19410c849895</Guid>
					<Headers>
						<Header Name="Utligger" />
						<Header Name="Sh [m]" />
					</Headers>
					<Width>15</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>local s = rel_OcsPole_Has_Cantilever
					local r,n = getRelatedObjects(s)
				
				if n == 0 or isVisible(r[0]) == false then 
					return ""
				elseif n == 1 then
					return r[0].SystemHeight
				elseif n == 2 then	
				return r[0].SystemHeight.."/"..r[1].SystemHeight
				end</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>00e2d0b2-3318-4838-93bd-7528d83478b2</Guid>
					<Headers>
						<Header Name="Utligger" />
						<Header Name="Sikk\PSakk [m]" />
					</Headers>
					<Width>15</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>local s = rel_OcsPole_Has_Cantilever
					local r,n = getRelatedObjects(s)
				
				if n == 0 or isVisible(r[0]) == false then 
					return ""
				elseif n == 1 then
					return r[0].Stagger
				elseif n == 2 then	
				return r[0].Stagger.."/"..r[1].Stagger
				end</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>94bca7ee-e084-48c4-8129-42573b7b259c</Guid>
					<Headers>
						<Header Name="Eget spor" />
						<Header Name="Nr" />
					</Headers>
					<Width>15</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>Alignment.code</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>630b8470-4cee-4f85-875f-9634b9076eef</Guid>
					<Headers>
						<Header Name="Eget spor" />
						<Header Name="PEL [km]" />
					</Headers>
					<Width>15</Width>
					<Sort>Ascending</Sort>
					<Alignment>MiddleCenter</Alignment>
					<Data>NOBN_trk_toKm(Mileage)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>861ae53f-c887-4774-86c2-122e8369dd8c</Guid>
					<Headers>
						<Header Name="Eget spor" />
						<Header Name="Kurve-\Pradius [m]" />
					</Headers>
					<Width>15</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>
							r = getAlignmentInfo().CurveRadius
							if r == math.huge then 
								return "RL"
							else 
								if math.abs(r) > 5e5 then 
									return "RL"
								else
									if getAlignmentInfo().CurveRotation:upper() == "CCW" then
										return string.format(".%0f",r)
									else
										return string.format("%.0f",-r)
									end
								end
							end
					</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>1378d22d-c88d-41c9-a54b-96db95d2d3c4</Guid>
					<Headers>
						<Header Name="Eget spor" />
						<Header Name="OH [mm]" />
					</Headers>
					<Width>10</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>local c = getAlignmentInfo().Cant
											if (RC__isNan(c)) then
												return "-"
											else
												return string.format("%.0f",c)
											end
										</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>74af20b1-7ec9-4ec6-85b6-7e8bda973470</Guid>
					<Headers>
						<Header Name="Bestemmende spor" />
						<Header Name="Nr" />
					</Headers>
					<Width>15</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>ReferenceAlignment.code</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>5c76f0af-f694-4c2b-b22d-378169c7fdf3</Guid>
					<Headers>
						<Header Name="Bestemmende spor" />
						<Header Name="Km. [km]" />
					</Headers>
					<Width>10</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>--string.format("%.03f",ReferenceMileage/1000,10*(ReferenceMileage%1000))
				NOBN_trk_toKm(ReferenceMileage)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>87fda45d-6ea8-465c-9994-907106a84c16</Guid>
					<Headers>
						<Header Name="Bestemmende spor" />
						<Header Name="CL mast\PCL spor [m]" />
					</Headers>
					<Width>15</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>string.format("%.02f",getAlignmentInfo(getObjectFromId(ReferenceAlignment)).DistanceToAlignment)</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>57a7dcc0-e348-4e8a-a6db-542f7c13ce67</Guid>
					<Headers>
						<Header Name="Eks.spor" />
						<Header Name="Km [km]" />
					</Headers>
					<Width>20</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>r = string.format("%.03f", (Mileage+1483.104)/1000)
				return "\\C10;"..r</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>d2a36cb1-b7cb-4c8e-8a87-671ca9cabfe7</Guid>
					<Headers>
						<Header Name="Av-\Pspenning" />
						<Header Name="Avsp." />
					</Headers>
					<Width>20</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>
				tol = 0.25
				if RcType == rctype_OcsPole then
					vpil = "←" --"\8592"
					opil = "↑"--"\8593"
					hpil = "→" --"\8594"
					npil = "↓"--"\8595"
					ba = getClosestAlignments(rctype_GuyWire):
						filter(function  (x) return x.Variant:lower() == "bardun" and RC__getDistance2D(x.rcalignment.startpoint) &lt; 1.0 end )
					nb = getCollectionLength(ba)
					--if true then return nb,ba end
					t = getClosestTracks()
					tgt= getAlignmentInfo(t[0].id).tangent
					--if true then return tgt end
					sporvinkel = math.atan(tgt.Y, tgt.X) * 180.0/math.pi 
					--if true then return sporvinkel end
					first = true
					for i = 0, nb-1 do
						s = first and "" or s..", "
						b = ba[i]
						pe = b.RcAlignment.EndPoint
						bf = getNearbyPointObjects2D(tol, "JBTEH_BAF Bardunfeste", pe)[0]
						--if true then return bf end
						tgb= b.RcAlignment.StartTangent
						--if true then return tgb end
						bardunvinkel = math.atan(tgb.Y, tgb.X) * 180.0/math.pi
						--if true then return bardunvinkel end
						vinkel = bardunvinkel - sporvinkel
						if vinkel &lt; -180 then vinkel = vinkel + 360 end
						if vinkel &gt; 180 then vinkel = vinkel - 360 end
						hkurve = vinkel &gt; 50 and vinkel &lt; 130
						vkurve = vinkel &lt; -50 and vinkel &gt; -130
						medrettet = vinkel &gt; -25 and vinkel &lt; 25
						motrettet = vinkel &lt; -155 or vinkel &gt; 155
						--if true then return vinkel,bf.Variant, end
						--if true then return sporvinkel, bardunvinkel, vinkel, hkurve, vkurve medrettet, motrettet end
						if (vkurve or hkurve or medrettet or motrettet) == false then 
							return "Feil, ulovlig bardunvinkel ("..vinkel..")"
						end
						if hkurve and bf.Variant:lower():match("enkel") then s = s..vpil
						elseif vkurve and bf.Variant:lower():match("enkel") then s = s..hpil
						elseif motrettet and bf.Variant:lower():match("enkel") then s = s..opil
						elseif motrettet and bf.Variant:lower():match("dobbel") then s = s..opil..opil
						elseif medrettet and bf.Variant:lower():match("enkel")  then s = s..npil
						elseif medrettet and bf.Variant:lower():match("dobbel") then s = s..npil..npil
						else
							return _error, "ERROR - cannot deduce symbol for variant '"..bf.Variant.."'."
						end
						first = false
					end
					return s
				end					</Data>
					</ColumnSpecification>
					<ColumnSpecification>
					<Guid>0b9b2747-97b6-46de-ba8b-31d4d400faf9</Guid>
					<Headers>
						<Header Name="Merknader" />
					</Headers>
					<Width>50</Width>
					<Sort />
					<Alignment>MiddleCenter</Alignment>
					<Data>tol = 0.25
				avspenning = getClosestAlignments("JBTEH_KLO Kontaktledningsoppheng"):filter(
					function (x) 
						return x.Variant:lower() == "bardun" and RC__getDistance2D(x.RcAlignment.startpoint) &lt; tol
					end)
				strever = getClosestAlignments("JBTEH_KLO Kontaktledningsoppheng"):filter(
					function (x) 
						return x.Variant:lower() == "strever" and RC__getDistance2D(x.RcAlignment.startpoint) &lt; tol
					end)
					
				fix = {}
				local s = rel_OcsPole_Has_Cantilever
				local cantilevers, n = getRelatedObjects(s)
				if n ~= 0 then
					local midpointAnchors, midpointAnchorsN = cantilevers[0].getRelatedObjects(rel_Cantilever_IsLockedBy_MidpointAnchor)
					if midpointAnchorsN ~= 0 then
						fix = midpointAnchors[0].Relations[rel_MidpointAnchor_IsAnchoredBy_MidpointAnchoringLine]
					end
				end
				
				--fix = getNearbyPointObjects2D(5, rctype_WireTensioningBalancer)
				
				--fix = Relations[rel_OcsPole_Has_Cantilever][0].Relations["Fikseres av fixline"]
				ta = avspenning and RC__identify(avspenning[0]) or ""
				ts = strever and RC__identify(strever[0]) or ""
				tf = fix and RC__identify(fix[0]) or ""
				
				
				t = {}
				
				
				
				if objectInfo ~= "" then table.insert(t, objectInfo) end
				if avspenning.Count ~= 0 then table.insert(t, ta) end
				if strever.Count ~= 0 then table.insert(t, ts) end
				if fix.Count ~= nil then table.insert(t, tf) end
				
				--s = ""
				--if #t == 1 then
				--	s = t[1]
				--elseif #t &gt;= 1 then
				--	for i = 1,#t do s = s..", "..t[i] end
				--	string.gsub(s,)
				--end
				
				s = ""
				
				first = true
				
				for i = 1,#t do
				
					if not first then s = s..", " else first = false end
				
					s = s..t[i]
				
				end
				
				return s
				
				--return Relations[rel_OcsPole_Has_Cantilever][0].Relations["Har kontaktledningsoppheng"][0].Variant == "fixline" --Sjekk navn</Data>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>630b8470-4cee-4f85-875f-9634b9076eef</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>
		
		<!-- TODO: Lage tabeller for utliggere, barduner, åk etc -->
	</ObjectType>



<!--========================================================================================================
	COMMON
	EARTHING TABLE
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableEarthing" Name="JBTFE_DIV Jordingstabell"
				Layer="JBTFE_TABELLER"
				Group="Elektro Høyspent/Jordingstabeller"
				>

		<RelationSpace>tabell</RelationSpace>
			  
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Jordingstabell" >
			<Variant Name="Jordingstabell" />
		</Variants>

		<InsertTable VariantName="Jordingstabell" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
  <Title>Jordingstabell [angi tegningsnummer her]</Title>
  <IncludeTitle>true</IncludeTitle>
  <ShowInvisibleObjects>false</ShowInvisibleObjects>
  <ObjectManagerFilter>JBTEH_MAS KL-mast</ObjectManagerFilter>
  <ObjectManagerFilterList>
    <string>JBTEH_MAS KL-mast</string>
    <string>JBTEH_MAS KL-mast</string>
  </ObjectManagerFilterList>
  <EnableLuaFilter>true</EnableLuaFilter>
  <LuaFilter>--CLFEY 2020-03-01 EARTHING TABLE - Based on the 'Lieråsen-Brakerøya' project for Bane NOR.
--Make one copy of this table for each layout. Edit Lua changes in master table.
--Associate each table with the area capturing the objects to be included in the table.
--
--This table definition relies on the following Lua functions to be contained in the DNA:
--    RC__identify(xyzzy)                        : Returns object xyzzy's  name if present, or code if present, or guid.
--    NOBN_trk_toKm(ReferenceMileage)                 : Returns a string with ref. mileage as km with 3 decimals (meter precision).
--    r,n = getRelatedObjects(s) : Returns Relations[s]:filter(function (x) return x:isVisible() end) and the size of that collection.
--
RcType == rctype_EarthingConductor
or
(
	EarthingMethod == "Wire" or 
	(EarthingMethod == "Rail" or EarthingMethod == "Track") or --(prepared for future change to enum value from 'Rail' to 'Track')
	EarthingMethod == "Object"
	--Ignore those with 'None' and 'Unknown'.
)
and 
(
	--Replace with your project's min/max mileages for this table, if mileage limits are required.
	ReferenceMileage &gt;= 0 and
	ReferenceMileage &lt;= math.huge
)</LuaFilter>
  <UseDataSetFilter>false</UseDataSetFilter>
  <EnableCustomSettings>true</EnableCustomSettings>
  <TitleTextHeight>3.5</TitleTextHeight>
  <HeaderTextHeight>2.5</HeaderTextHeight>
  <DataTextHeight>1.8</DataTextHeight>
  <VerticalCellMargin>0.5</VerticalCellMargin>
  <HorizontalCellMargin>1</HorizontalCellMargin>
  <BlockScale>1</BlockScale>
  <MinRowHeight>1</MinRowHeight>
  <EnableWrap>false</EnableWrap>
  <WrapDepth>0</WrapDepth>
  <WrapSpacing>0</WrapSpacing>
  <WrapDirection>Right</WrapDirection>
  <RepeatHeaders>false</RepeatHeaders>
  <VerticalNumbering>
    <Enabled>false</Enabled>
    <IsVertical>true</IsVertical>
    <Location>Left</Location>
    <NumberFormat>Numbers</NumberFormat>
    <TextHeight>2</TextHeight>
    <HideBorders>true</HideBorders>
    <Alignment>MiddleCenter</Alignment>
  </VerticalNumbering>
  <HorizontalNumbering>
    <Enabled>false</Enabled>
    <IsVertical>false</IsVertical>
    <Location>Bottom</Location>
    <NumberFormat>Numbers</NumberFormat>
    <TextHeight>2</TextHeight>
    <HideBorders>true</HideBorders>
    <Alignment>MiddleCenter</Alignment>
  </HorizontalNumbering>
  <TableFormat>Standard</TableFormat>
  <Font>RC-STANDARD</Font>
  <Columns>
    <ColumnSpecification>
      <Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
      <Headers>
        <Header Name="Spor / Jordleder" />
        <Header Name="Km Ref.spor [angi refspor her]" />
      </Headers>
      <Width>20</Width>
      <Sort>Ascending</Sort>
      <Alignment>MiddleCenter</Alignment>
      <Data>if RcAlignment == nil then
	-- Point object:
	return NOBN_trk_toKm(ReferenceMileage)
else
	return "-"
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
      <Headers>
        <Header Name="Spor / Jordleder" />
        <Header Name="Tilhører" />
      </Headers>
      <Width>30</Width>
      <Sort>Ascending</Sort>
      <Alignment>MiddleCenter</Alignment>
      <Data>if RcType == rctype_EarthingConductor then
	return code
	
elseif EarthingMethod == "Wire" then
	if EarthingAlignment == nil then
		return "Missing PE wire"
	else
		return RC__identify(EarthingAlignment)
	end

elseif EarthingMethod == "Rail" or EarthingMethod == "Track" then --(prepared for future change to enum value from 'Rail' to 'Track')
	if EarthingAlignment == nil then
		return "Missing track"
	else
		return EarthingAlignment.code
	end
	
elseif EarthingMethod == "Object" then
	if EarthingObject == nil then
		return "Missing PE object"
	else
		return RC__identify(EarthingObject)
	end
	
elseif EarthingMethod == "None" or EarthingMethod == "Unknown" then
	--(Should have been filtered out already)
	return "PE not required"

else
	return "*** Bad EarthingMethod ["..tostring(EarthingMethod).."]."
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>32998746-0c24-4ac9-a9fe-6f23dedadb2e</Guid>
      <Headers>
        <Header Name="Spor / Jordleder" />
        <Header Name="Side" />
      </Headers>
      <Width>15</Width>
      <Sort />
      <Alignment>MiddleCenter</Alignment>
      <Data>--Earth wires are alignments, so assume that they have each been related to a marker placed on the wire, to extract side-of-track etc.
if RcAlignment == nil then 
	obj = this --Point object
else
	s = rel_Anything_Has_Marker
	r,n = getRelatedObjects(s)
	if n == 0 then
		return "-"
	else 
		obj = r[0]
	end
end
return obj.Leftsided and "Venstre" or "Høyre"</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>c862d114-307a-4c93-ab16-b6437fb24902</Guid>
      <Headers>
        <Header Name="Objekt" />
      </Headers>
      <Width>70</Width>
      <Sort />
      <Alignment>MiddleCenter</Alignment>
      <Data>--There may be a need to show the earthing of object types for which RC does not have a specific model yet. 
--These objects are to be represented by RcType 'Watch' objects and will present them selves as 'Diverse'.
t = RcType:sub(8)
if t == "Watch" then 
	return "Diverse"
else
	return t.." / "..(Variant == nil and "" or Variant)
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>e9394aa0-e916-4405-8943-4fad9acab949</Guid>
      <Headers>
        <Header Name="Driftsmerking" />
      </Headers>
      <Width>70</Width>
      <Sort>Ascending</Sort>
      <Alignment>MiddleCenter</Alignment>
      <Data>RC__identify()</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>289d4be1-1319-4c1c-a970-dba62aca2493</Guid>
      <Headers>
        <Header Name="Merkeskilt" />
        <Header Name="På jordleder" />
      </Headers>
      <Width>60</Width>
      <Sort />
      <Alignment>MiddleCenter</Alignment>
      <Data>if RcType == rctype_EarthingConductor then
	return "Skinne / "..RC__identify()
else 
	return EarthingLabelText
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>63762ea8-c3cb-4325-b360-d8983eafb1cb</Guid>
      <Headers>
        <Header Name="Merkeskilt" />
        <Header Name="Farge" />
      </Headers>
      <Width>20</Width>
      <Sort />
      <Alignment>MiddleCenter</Alignment>
      <Data>--Translate from English if needed:
if EarthingLabelColor == "Red" then return "Rød"
elseif EarthingLabelColor == "Green" then return "Grønn"
elseif EarthingLabelColor == "White" then return "Hvit"
elseif EarthingLabelColor== "Blue" then return "Blå"
elseif EarthingLabelColor == "Yellow" then return "Gul"
elseif RcType == rctype_EarthingConductor then return "Rød"
else return EarthingLabelColor
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>1e6313b6-5ae6-478b-8449-17375bf6df8e</Guid>
      <Headers>
        <Header Name="Jordet til" />
        <Header Name="Venstre skinne" />
      </Headers>
      <Width>20</Width>
      <Sort />
      <Alignment>MiddleCenter</Alignment>
      <Data>if EarthingMethod == "Rail" and LeftSided then
	return "X"
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>6790c4e6-642a-46da-9417-21687b497b8e</Guid>
      <Headers>
        <Header Name="Jordet til" />
        <Header Name="Høyre skinne" />
      </Headers>
      <Width>20</Width>
      <Sort />
      <Alignment>MiddleCenter</Alignment>
      <Data>if EarthingMethod == "Rail" and RightSided then
	return "X"
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>43d5b0a0-e8d1-4a9f-8385-cafb3d1c92bb</Guid>
      <Headers>
        <Header Name="Jordet til" />
        <Header Name="Langsående jordleder" />
      </Headers>
      <Width>20</Width>
      <Sort />
      <Alignment>MiddleCenter</Alignment>
      <Data>if EarthingMethod == "Wire" then
	return "X"
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>7437388b-b08d-4605-b461-b5429d3f6292</Guid>
      <Headers>
        <Header Name="Koblet via" />
      </Headers>
      <Width>70</Width>
      <Sort />
      <Alignment>MiddleCenter</Alignment>
      <Data>if RcType == rctype_EarthingConductor then
	return "Direkte til skinne"

elseif EarthingMethod == "Rail" then 
	return "Direkte til skinne"

elseif EarthingMethod == "Wire" then 
	return "Direkte til langsgående jordleder"

elseif EarthingMethod == "Object" then
	return "Jordet via "..RC__identify(EarthingObject)

else
	return "?"
end</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>0dec4ab1-4196-4142-8497-b0d4916f0f9e</Guid>
      <Headers>
        <Header Name="Fag" />
      </Headers>
      <Width>25</Width>
      <Sort />
      <Alignment>MiddleCenter</Alignment>
      <Data>Discipline</Data>
    </ColumnSpecification>
    <ColumnSpecification>
      <Guid>b7236c2b-cfce-4af4-a0b2-e99fb66653ad</Guid>
      <Headers>
        <Header Name="Merknader" />
      </Headers>
      <Width>35</Width>
      <Sort />
      <Alignment>MiddleCenter</Alignment>
      <Data>s = rel_OcsPole_IsSupportFor_OcsPortal
r,n = getRelatedObjects(s)
if n &gt; 0 then
	return "Tilhører åk "..r[0].code
else 
	return ""
end</Data>
    </ColumnSpecification>
  </Columns>
  <SortOrder>
    <string>71b321ec-4bc3-493d-974b-2b01236d720c</string>
    <string>e9394aa0-e916-4405-8943-4fad9acab949</string>
    <string>10272f0b-a413-49f6-bd6a-b520ea345d97</string>
  </SortOrder>
			</TableSpecification>
		</InsertTable>
		<!--TODO Definere disse tabellene-->
	</ObjectType>


	
<!--========================================================================================================
	COMMON / CIVIL ENGINEERING
	FOUNDATION TABLE
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableFoundations" Name="JBTFE_DIV Fundamenttabell"
				Layer="JBTFE__TABELLER"
				Group="Underbygning/Fundamenttabeller"
				>

		<RelationSpace>tabell</RelationSpace>

		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Fundamenter" >
			<Variant Name="Fundamenter" />
			<Variant Name="Skiltfester" />
		</Variants>
		
		<!--TODO Definere disse tabellene-->
	</ObjectType>



<!--========================================================================================================
	COMMON / CIVIL ENGINEERING
	CABLE DUCT TABLE
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableCableDucts" Name="JBTFE_DIV Føringsveitabell"
				Layer="JBTFE_TABELLER" 
				Group="Underbygning/Føringsveitabeller"
				>

		<RelationSpace>tabell</RelationSpace>

		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Trekkerør" >
			<Variant Name="Trekkekummmer" />
			<Variant Name="Rørkryss" />
			<Variant Name="Trekkerør" />
			<Variant Name="Kabelkanaler" />
		</Variants>

		<!--TODO Definere disse tabellene-->
	</ObjectType>



<!--========================================================================================================
	COMMON / SIGNALLING
	INTERLOCKING TABLE
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableInterlockingControl" Name="JBTFE_DIV Forriglingstabell"
				Layer="JBTFE_TABELLER" Color="ByLayer"
				Group="Signal/Forriglingstabeller"
				>

		<RelationSpace>tabell</RelationSpace>

		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Forriglingstabell 0 Tabelloversikt" >
			<Variant Name="Forriglingstabell 0 Tabelloversikt" />
			<Variant Name="Forriglingstabell 1-A Togveier retning A" />
			<Variant Name="Forriglingstabell 1-B Togveier retning B" />
			<Variant Name="Forriglingstabell 2-A Forlengede togveier retning A" />
			<Variant Name="Forriglingstabell 2-B Forlengede togveier retning B" />
			<Variant Name="Forriglingstabell 3-A Sikkerhetssone togveier retning A" />
			<Variant Name="Forriglingstabell 3-B Sikkerhetssone togveier retning B" />
			<Variant Name="Forriglingstabell 4 Sidedekning for togvei og skiftevei" />
			<Variant Name="Forriglingstabell 5 Utløsing togveier" />
			<Variant Name="Forriglingstabell 6-A Skifteveier retning A" />
			<Variant Name="Forriglingstabell 6-B Skifteveier retning B" />
			<Variant Name="Forriglingstabell 7-A Forlengede skifteveier retning A" />
			<Variant Name="Forriglingstabell 7-B Forlengede skifteveier retning B" />
			<Variant Name="Forriglingstabell 8-A Sikkerhetssone skifteveier retning A" />
			<Variant Name="Forriglingstabell 8-B Sikkerhetssone skifteveier retning B" />
			<Variant Name="Forriglingstabell 9 Utløsing skifteveier" />
			<Variant Name="Forriglingstabell 10 Lokalområder" />
			<Variant Name="Forriglingstabell 11 Sammensatte lokalområder" />
			<Variant Name="Forriglingstabell 12 Sveivområder" />
			<Variant Name="Forriglingstabell 13 Signalstopp" />
			<Variant Name="Forriglingstabell 14 Avsporingsindikatorer" />
			<Variant Name="Forriglingstabell 15 Automatisk gjennomgangsdrift" />
			<Variant Name="Forriglingstabell 16-A AG-togveier retning A" />
			<Variant Name="Forriglingstabell 16-B AG-togveier retning B" />
			<Variant Name="Forriglingstabell 17 Arbeidsområder" />
			<Variant Name="Forriglingstabell 18 Sammensatte arbeidsområder" />
			<Variant Name="Forriglingstabell 19 Sporvekselomlegging" />
			<Variant Name="Forriglingstabell 20 Middelkontrollampe" />
		</Variants>
		
		<!--TODO Definere disse tabellene-->
	</ObjectType>



<!--========================================================================================================
	COMMON / SIGNALLING
	SIGNAL TABLE
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableSignals" Name="JBTFE_DIV Signaltabell"
				Layer="JBTFE_TABELLER" Color="ByLayer"
				Group="Signal/Signaltabeller"
				>

		<RelationSpace>tabell</RelationSpace>
		
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Signaltabell Hovedsignaler" >
			<Variant Name="Signaltabell Enkel" />
			<Variant Name="Signaltabell Byggetoleranser" />
			<Variant Name="Signaltabell Hovedsignaler" />
			<Variant Name="Signaltabell Frittstående forsignaler" />
			<Variant Name="Signaltabell Frittstående dvergsignaler" />
			<Variant Name="Signaltabell Frittstående formsignaler" />
		</Variants>
		
		<!-- Signal table (simple) -->
		<InsertTable VariantName="Signaltabell Enkel" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Signaltabell (begrenset)</Title>
				<IncludeTitle>true</IncludeTitle>
				<ShowInvisibleObjects>false</ShowInvisibleObjects>
				<ObjectManagerFilter></ObjectManagerFilter>
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>RcType == rctype_Signal</LuaFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<Font>RC-STANDARD</Font>
				<TitleTextHeight>12</TitleTextHeight>
				<HeaderTextHeight>10</HeaderTextHeight>
				<DataTextHeight>8</DataTextHeight>
				<VerticalCellMargin>1.5</VerticalCellMargin>
				<HorizontalCellMargin>1.5</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>0</WrapDepth>
				<WrapSpacing>0</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>false</RepeatHeaders>
				<TableFormat>Standard</TableFormat>
				<Columns>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Signalinformasjon</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>if name:match("Rep") then return "Rep.Hs"
elseif (MainSignal ~= "-") then return "Hovedsignal"
elseif (DistantSignal ~= "-") then return "Forsignal"
elseif (DwarfSignal ~= "-") then return "Dvergsignal"
else return "Ukjent signaltype",_warning
end</Data>
						<Title>Signaltype</Title>
						<Sort>Descending</Sort>
						<Guid>225851ac-3c72-4fb9-880f-9cd04c77bbc8</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Signalinformasjon</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>if dir == "down" then
	return "Synkende km"
elseif dir == "up" then
	return "Stigende km"
else
	return "Ukjent retning ["..dir.."]",_warning
end</Data>
						<Title>Retning</Title>
						<Sort>Ascending</Sort>
						<Guid>0bad5f0f-eb7f-4516-957a-5768e6f4e1c5</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Signalinformasjon</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>name</Data>
						<Title>Navn</Title>
						<Sort>Ascending</Sort>
						<Guid>600a9562-51e1-4e46-bfb1-9e807bd20025</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Signalinformasjon</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>if (Sight == 0) then
	return "(ikke angitt)"
else
	return Sight
end</Data>
						<Title>Siktkrav [m]</Title>
						<Sort />
						<Guid>d57eb1d7-427b-4a4e-b1fc-1b281c6ff7bd</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Spor</Title>
							</Header>
						</Headers>
						<Width>80</Width>
						<Data>NOBN_trk_toKm(ReferenceMileage,3)</Data>
						<Title>Km i ref.spor</Title>
						<Sort>Ascending</Sort>
						<Guid>330ae8a5-3643-4624-8aba-fcd86e60940e</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Eget spor</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>ReferenceAlignment.code</Data>
						<Title>Referanse- spor</Title>
						<Sort />
						<Guid>294be7d2-4067-49c5-ada9-c5df1eec6d35</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Eget spor</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>Alignment.code</Data>
						<Title>Eget spor</Title>
						<Sort />
						<Guid>5ddd8bf2-8dc5-4d1a-92e4-851dd8ee1190</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Plassering</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>local dirIsUp = (dir == "up")
local dirIsDown = (dir == "down")
--
if (dirIsUp and RightSided) then
	return "Høyre"
elseif (dirIsUp and LeftSided) then
	return "Venstre"
elseif (dirIsDown and RightSided) then 
	return "Venstre"
elseif (dirIsDown and LeftSided) then
	return "Høyre"
else
	return "Feil: Ukjent dir ["..dir.."]"
end</Data>
						<Title>Side av spor i kjøre- retningen</Title>
						<Sort />
						<Guid>aabae339-be76-4cd7-acc2-3e658bd9b637</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
						<Header>
								<Title>Plassering</Title>
						</Header>
						</Headers>
						<Width>60</Width>
						<Data>if (getAlignmentInfo().CurveType == "Straight") then
	return "-"
else
	return math.floor(getAlignmentInfo().CurveRadius+0.5)
end</Data>
						<Title>Kurveradius [m]</Title>
						<Sort />
						<Guid>7aa6f1c4-3d65-4dfe-9d4e-2efc53adc742</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Plassering</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>if (getAlignmentInfo().CurveType == "Straight") then
	return "Rettspor" 
elseif (getAlignmentInfo().CurveRotation:upper() == "CCW") then
	return "Venstrekurve" 
elseif (getAlignmentInfo().CurveRotation:upper() == "CW") then
	return "Høyrekurve"
	else return "Feil i kurverotasjon [" .. tostring(getAlignmentInfo().CurveRotation) .. "]",_warning
end
						</Data>
						<Title>Høyre / venstre kurve (Oslo i ryggen)</Title>
						<Sort />
						<Guid>aca992ac-7a86-4558-80e0-1638c189741f</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Plassering</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>if (getAlignmentInfo().CurveType == "Straight") then
	return "Rettspor"
else
	if (getAlignmentInfo().CurveRotation:upper() == "CCW") then
		if (LeftSided) then
			return "Innerkurve"
		else	
			return "Ytterkurve"
		end
	else
		if (RightSided) then
			return "Innerkurve"
		else	
			return "Ytterkurve"
		end
	end
end</Data>
						<Title>Innerkurve / ytterkurve</Title>
						<Sort />
						<Guid>9948125f-4ec5-4e90-901b-2b51c9b577e6</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
							<Headers>
								<Header>
									<Title>Bygging</Title>
								</Header>
							</Headers>
							<Width>60</Width>
							<Data>local s = ""
local first = true
if (MainSignal ~= "-") then 
	s = MainSignal
	first = false
end 
if (DistantSignal ~= "-") then 
	if (first) then s = "Fs" else s = s.."-Fs" end 
	first = false
end 
if (DwarfSignal ~= "-") then 
	if (first) then s = "Ds" else s = s.."-Ds" end
	first = false
end
if (HighShuntingSignal ~= "-") then 
	if (first) then s = "Z" else s = s.."-Z" end		
	first = false
end 
if (PositionLamp ~= "-") then
	if (first) then s = "MKs" else s = s.."-MKs" end		
	first = false
end
if (CautiousDrivingSignal == "Ja") then
	if (first) then s = "FKs" else s = s.."-FKs" end		
	first = false
end
if (LineSignal ~= "-") then 
	if (first) then s = "Ls" else s = s.."-Ls" end		
	first = false
end
if (OpticalSpeedSignal == "Ja") then 
	if (first) then s = "Hast" else s = s.."-Hast" end		
	first = false
end 
return s</Data>
						<Title>Bestykning</Title>
						<Sort />
						<Guid>1ebe9384-18d8-407b-8aff-74eca20f9286</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bygging</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>getInvertedBlockImage()</Data>
						<Title>2D symbol</Title>
						<Sort />
						<Guid>ec4d6960-bb43-4150-9cd4-c873d9080532</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>225851ac-3c72-4fb9-880f-9cd04c77bbc8</string>
					<string>0bad5f0f-eb7f-4516-957a-5768e6f4e1c5</string>
					<string>330ae8a5-3643-4624-8aba-fcd86e60940e</string>
					<string>600a9562-51e1-4e46-bfb1-9e807bd20025</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>

		<!-- Signal table construction tolerances -->
		<InsertTable VariantName="Signaltabell (detaljert)" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Signaltabell (detaljert)</Title>
				<IncludeTitle>true</IncludeTitle>
				<ShowInvisibleObjects>false</ShowInvisibleObjects>
				<ObjectManagerFilter></ObjectManagerFilter>
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>RcType == rctype_Signal</LuaFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<Font>RC-STANDARD</Font>
				<TitleTextHeight>5</TitleTextHeight>
				<HeaderTextHeight>3.5</HeaderTextHeight>
				<DataTextHeight>2.5</DataTextHeight>
				<VerticalCellMargin>1.5</VerticalCellMargin>
				<HorizontalCellMargin>1.5</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>0</WrapDepth>
				<WrapSpacing>0</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>false</RepeatHeaders>
				<TableFormat>Standard</TableFormat>
				<Columns>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Signaltabell Byggetoleranser</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>if name:lower():match("rep") then 
	return "Rep.Hs"
elseif (MainSignal ~= "-") then 
	return "Hovedsignal"
elseif (DistantSignal ~= "-") then
	return "Forsignal"
elseif (DwarfSignal ~= "-") then
	return "Dvergsignal"
else
	return "Ukjent signaltype",_warning
end</Data>
						<Title>Signaltype</Title>
						<Sort>Descending</Sort>
						<Guid>225851ac-3c72-4fb9-880f-9cd04c77bbc8</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Signalinformasjon</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>if dir == "down" then
	return "Synkende km"
elseif dir == "up" then
	return "Stigende km"
else
	return "Feil: Ukjent retning ["..dir.."]",_warning
end</Data>
						<Title>Retning</Title>
						<Sort>Ascending</Sort>
						<Guid>0bad5f0f-eb7f-4516-957a-5768e6f4e1c5</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Signalinformasjon</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>name</Data>
						<Title>Navn</Title>
						<Sort>Ascending</Sort>
						<Guid>600a9562-51e1-4e46-bfb1-9e807bd20025</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Signalinformasjon</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>if (Sight == 0) then
	return "(ikke angitt)"
else
	return Sight
end</Data>
						<Title>Siktkrav [m]</Title>
						<Sort />
						<Guid>d57eb1d7-427b-4a4e-b1fc-1b281c6ff7bd</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Eget spor</Title>
							</Header>
						</Headers>
						<Width>80</Width>
						<Data>NOBN_trk_toKm(ReferenceMileage,3)</Data>
						<Title>Km i ref.spor</Title>
						<Sort>Ascending</Sort>
						<Guid>330ae8a5-3643-4624-8aba-fcd86e60940e</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Eget spor</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>ReferenceAlignment.code</Data>
						<Title>Referanse- spor</Title>
						<Sort />
						<Guid>294be7d2-4067-49c5-ada9-c5df1eec6d35</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Eget spor</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>Alignment.code</Data>
						<Title>Eget spor</Title>
						<Sort />
						<Guid>5ddd8bf2-8dc5-4d1a-92e4-851dd8ee1190</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Plassering</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>
							local dirIsUp = (dir == "up")
							local dirIsDown = (dir = "down")
							--
							if (dirIsUp and RightSided) then
								return "Høyre"
							elseif (dirIsUp and LeftSided) then
								return "Venstre"
							elseif (dirIsDown and RightSided) then 
								return "Venstre"
							elseif (dirIsDown and LeftSided) then
								return "Høyre"
							else
								return "Feil: Ukjent dir ["..dir.."]"
							end
						</Data>
						<Title>Side av spor i kjøre- retningen</Title>
						<Sort />
						<Guid>aabae339-be76-4cd7-acc2-3e658bd9b637</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Plassering</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>string.format("%4g",math.abs(DistanceToAlignment))</Data>
						<Title>Avstand til eget spors CL [m]</Title>
						<Guid>f8d14542-afa2-4a2b-bc57-ad91df773157</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Plassering</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>
							if (getAlignmentInfo().CurveType == "Straight") then
								return "-"
							else
								return math.floor(getAlignmentInfo().CurveRadius+0.5)
							end
						</Data>
						<Title>Kurveradius [m]</Title>
						<Sort />
						<Guid>7aa6f1c4-3d65-4dfe-9d4e-2efc53adc742</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Plassering</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>
							if (getAlignmentInfo().CurveType == "Straight") then
								return "Rettspor" 
							elseif (getAlignmentInfo().CurveRotation:upper() == "CCW") then
								return "Venstrekurve" 
							elseif (getAlignmentInfo().CurveRotation:upper() == "CW") then 
								return "Høyrekurve"
								else return "Feil i kurverotasjon ["..tostring(getAlignmentInfo().CurveRotation).."]",_warning
							end
						</Data>
						<Title>Høyre / venstre kurve (Oslo i ryggen)</Title>
						<Sort />
						<Guid>aca992ac-7a86-4558-80e0-1638c189741f</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Plassering</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>if (getAlignmentInfo().CurveType == "Straight") then
								return "Rettspor"
							else
								if (getAlignmentInfo().CurveRotation:upper() == "CCW") then
									if (LeftSided) then
										return "Innerkurve"
									else	
										return "Ytterkurve"
									end
								else
									if (RightSided) then
										return "Innerkurve"
									else	
										return "Ytterkurve"
									end
								end
							end
						</Data>
						<Title>Innerkurve / ytterkurve</Title>
						<Sort />
						<Guid>9948125f-4ec5-4e90-901b-2b51c9b577e6</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bygging</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>
							if (getAlignmentInfo().CurveType == "Straight") then
								return 0
							else
								r = getAlignmentInfo().CurveRadius
								if (getAlignmentInfo().CurveRotation:upper() == "CW") then
									--clockwise
									if (RightSided) then
										--Innerkurve
										k = 81000/(2*r)
									else	
										--Ytterkurve
										k = 63000/(2*r)
									end
								else
									--counterclockwise
									if (LeftSided) then
										--Innerkurve
										k = 81000/(2*r)
									else	
										--Ytterkurve
										k = 63000/(2*r)
									end
								end
								return math.floor(k+0.5)
							end
						</Data>
						<Title>Kurveutslag         Ki / Ky [mm]</Title>
						<Sort />
						<Guid>dd7266c0-bde1-499e-a1bd-4d647ec71144</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Plassering</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>
							oh = math.floor(getAlignmentInfo().Cant + 0.5)
							if (RC__isNan(oh)) then
								return "(mangler overhøyde)"
							else
								return oh
							end
						</Data>
						<Title>Overhøyde [mm]</Title>
						<Sort />
						<Guid>571d4332-2a54-4b50-b0cf-f6ff489269d7</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bygging</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>oh35 = math.floor(getAlignmentInfo().Cant * (3500/1500) + 0.5)
if (RC__isNan(oh35)) then
	return "(ukjent overhøyde)"
else
	return oh35
end</Data>
						<Title>Overhøyde- utslag i 3.5m høyde [mm]</Title>
						<Sort />
						<Guid>bd49b1af-86e1-4668-ba19-eda7a0418425</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bygging</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>local k,s,r
if (getAlignmentInfo().CurveType == "Straight") then
	return 0
else
	oh35 = math.floor(getAlignmentInfo().Cant * (3500/1500) + 0.5)
	r = getAlignmentInfo().CurveRadius
	if (getAlignmentInfo().CurveRotation:upper() == "CW") then
		--clockwise
		if (RightSided) then
			--Innerkurve
			k = 81000/(2*r)
			s = 1.0
		else	
			--Ytterkurve
			k = 63000/(2*r)
			s = -1.0
		end
	else
		--counterclockwise
		if (LeftSided) then
			--Innerkurve
			k = 81000/(2*r)
			s = 1.0
		else	
			--Ytterkurve
			k = 63000/(2*r)
			s = -1.0
		end
	end
	if (RC__isNan(oh35)) then
		return "(mangler overhøyde)"
	else
		return math.floor(k + s*oh35 + .5)
	end
end</Data>
						<Title>Utslag mot signalet i 3.5m høyde [mm]</Title>
						<Sort />
						<Guid>5c223d26-335c-441e-baa7-6999d778782e</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bygging</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>local k,s,r
if (getAlignmentInfo().CurveType == "Straight") then
	return math.abs(DistanceToAlignment)
else
	oh35 = math.floor(getAlignmentInfo().Cant * (3500/1500) + 0.5)
	r = getAlignmentInfo().CurveRadius
	if (getAlignmentInfo().CurveRotation:upper() == "CW") then
		--clockwise
		if (RightSided) then
			--Innerkurve
			k = 81000/(2*r)
			s = 1
		else	
			--Ytterkurve
			k = 63000/(2*r)
			s = -1
		end
	else
		--counterclockwise
		if (LeftSided) then
			--Innerkurve
			k = 81000/(2*r)
			s = 1
		else	
			--Ytterkurve
			k = 63000/(2*r)
			s = -1
		end
	end
	if (RC__isNan(oh35)) then
		return "(mangler overhøyde)"
	else
		return math.abs(math.floor(100*(DistanceToAlignment + (k + s*oh35)/1000) + 0.5)/100)
	end
end</Data>
						<Title>Margin til stikningspunkt [m]</Title>
						<Sort />
						<Guid>e5f1ad8b-090e-4be7-8dcf-cee6d795ca1c</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bygging</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>local s = ""
local first = true
if (MainSignal ~= "-") then 
	s = MainSignal
	first = false
end 
if (DistantSignal ~= "-") then 
	if (first) then s = "Fs" else s = s.."-Fs" end 
	first = false
end 
if (DwarfSignal ~= "-") then 
	if (first) then s = "Ds" else s = s.."-Ds" end
	first = false
end
if (PositionLamp ~= "-") then
	if (first) then s = "MKs" else s = s.."-MKs" end		
	first = false
end
if (CautiousDrivingSignal ~= "-") then
	if (first) then s = "FKs" else s = s.."-FKs" end		
	first = false
end
if (LineSignal ~= "-") then 
	if (first) then s = "Ls" else s = s.."-Ls" end		
	first = false
end
if (OpticalSpeedSignal ~= "-") then 
	if (first) then s = "Hast" else s = s.."-Hast" end		
	first = false
end 
if (HighShuntingSignal ~= "-") then 
	if (first) then s = "Z" else s = s.."-Z" end		
	first = false
end 
return s</Data>
						<Title>Bestykning</Title>
						<Sort />
						<Guid>1ebe9384-18d8-407b-8aff-74eca20f9286</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bygging</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>getInvertedBlockImage()</Data>
						<Title>2D symbol</Title>
						<Sort />
						<Guid>ec4d6960-bb43-4150-9cd4-c873d9080532</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers>
							<Header>
								<Title>Bygging</Title>
							</Header>
						</Headers>
						<Width>60</Width>
						<Data>get3DBlockImage(2)</Data>
						<Title>3D modell</Title>
						<Sort />
						<Guid>565acdf6-c46b-44bd-bc72-e876121667d1</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>225851ac-3c72-4fb9-880f-9cd04c77bbc8</string>
					<string>0bad5f0f-eb7f-4516-957a-5768e6f4e1c5</string>
					<string>330ae8a5-3643-4624-8aba-fcd86e60940e</string>
					<string>600a9562-51e1-4e46-bfb1-9e807bd20025</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>
		
		<!-- Signaltabell Hovedsignaler -->
		<InsertTable VariantName="Signaltabell Hovedsignaler" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" >
			<TableSpecification>
				<Title>Signaltabell Hovedsignaler</Title>
				<IncludeTitle>true</IncludeTitle>
				<EnableLuaFilter>true</EnableLuaFilter>
				<LuaFilter>RcType == rctype_Signal and MainSignal ~= "-"</LuaFilter>
				<EnableCustomSettings>true</EnableCustomSettings>
				<Font>RC-STANDARD</Font>
				<TitleTextHeight>12</TitleTextHeight>
				<HeaderTextHeight>10</HeaderTextHeight>
				<DataTextHeight>8</DataTextHeight>
				<VerticalCellMargin>1.5</VerticalCellMargin>
				<HorizontalCellMargin>1.5</HorizontalCellMargin>
				<BlockScale>1</BlockScale>
				<EnableWrap>false</EnableWrap>
				<WrapDepth>0</WrapDepth>
				<WrapSpacing>0</WrapSpacing>
				<WrapDirection>Right</WrapDirection>
				<RepeatHeaders>false</RepeatHeaders>
				<TableFormat>Standard</TableFormat>
				<Columns>
					<ColumnSpecification>
						<Headers />
						<Width>60</Width>
						<Data>Name</Data>
						<Title>Navn</Title>
						<Sort />
						<Guid>71b321ec-4bc3-493d-974b-2b01236d720c</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers />
						<Width>60</Width>
						<Data>NOBN_trk_toKm(ReferenceMileage,3)</Data>
						<Title>Km (ref)</Title>
						<Sort>Ascending</Sort>
						<Guid>10272f0b-a413-49f6-bd6a-b520ea345d97</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
					<ColumnSpecification>
						<Headers />
						<Width>60</Width>
						<Data>getInvertedBlockImage()</Data>
						<Title>2D symbol</Title>
						<Sort />
						<Guid>d762837b-7200-46a2-8e90-ca7b8d257ccb</Guid>
						<Alignment>MiddleCenter</Alignment>
					</ColumnSpecification>
				</Columns>
				<SortOrder>
					<string>10272f0b-a413-49f6-bd6a-b520ea345d97</string>
				</SortOrder>
			</TableSpecification>
		</InsertTable>
		
		<!--TODO Definere de resterende signaltabellene-->
		<!-- <InsertTable VariantName="Signaltabell Frittstående forsignaler" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" > -->
		<!-- <InsertTable VariantName="Signaltabell Frittstående dvergsignaler" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" > -->
		<!-- <InsertTable VariantName="Signaltabell Frittstående formsignaler" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-TABELL-Schematic" > -->

	</ObjectType>



<!--========================================================================================================
	COMMON / SIGNALLING
	ATC TELEGRAM ENCODING TABLE
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETETable" Class="RCTable" LuaName="rctype_TableAtcEncoding" Name="JBTFE_DIV ATC kodetabell"
				Layer="JBTFE_TABELLER"
				Color="ByLayer"
				Group="Signal/ATC kodetabeller"
				>

		<RelationSpace>tabell</RelationSpace>
		
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TABLE_OBJECT" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="ATC kodetabell serie/parallellbaliser (Ktab20s)" >
			<Variant Name="ATC kodetabell serie/parallellbaliser (Ktab20s)" />
			<Variant Name="ATC kodetabell GMB-parallellbaliser (KtabGMBf) " />
			<Variant Name="ETCS balise kodetabell for Østre linje" />
			<Variant Name="ETCS balise kodetabell for Nasjonal Implementering" />
		</Variants>

		<!--TODO Definere disse tabellene-->
	</ObjectType>

	
	
<!--========================================================================================================
    End of file 
=========================================================================================================-->
</xpp:bloc>
