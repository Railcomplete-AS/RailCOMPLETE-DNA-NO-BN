<!--========================================================================================================

    NO-BN-OcsWireSystem.xml
	
	Include in DNA file using XPPq XML preprocessor directive <xpp:expand href="fileName.xml" />.

	(c) Railcomplete AS, Norway, 2015-2021. All rights reserved.
	
=========================================================================================================-->
<xpp:bloc>

<!--========================================================================================================
	Contents:
	ANNOTATION OF CONTACT WIRES (wire change annotations)
	CONTACT WIRE ALIGNMENT
	CONDUCTORS / CABLES ALIGNMENT
	MIDPOINT ANCHOR LINE ALIGNMENT
	GUYWIRE ALIGNMENT
	SPANNER ALIGNMENT
	GUYWIRE ANHCORING
	SPANNER ANHCORING
	ANCHORING OF GUYWIRES OR WIRES TO TUNNEL WALL
	GUYWIRE/TENSIONING WIRE FASTENING TO OCS POLE
	WIRE TENSION BALANCER (WTB)
	MIDPOINT ANCHOR - 'FIXPOINT'
	OCS CONDUCTOR ALIGNMENT CONTINUATIONS
	OCS CONTACT WIRE ALIGNMENT CONTINUATIONS
=========================================================================================================-->


<!--========================================================================================================
	HIGH VOLTAGE
	ANNOTATION OF CONTACT WIRES
=========================================================================================================-->
	<ObjectType DataType="tMarker" Class="RailwayPlacedObject" Name="JBTEH_LBA Ledningsbytte annotering" 
				Layer="JBTEH_LBA" Color="ByLayer"
				Group="Kontaktledning/Ledningsbytte annotering"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>

		<RelationSpace>kl-annotering</RelationSpace>
		
		<!-- <xpp:expand select="NOBN_xxx_DEPRECATED_MACRO___TO_BE_REMOVED" /> -->
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_40_OFF_NO_TAG___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TRACKBOUND_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<LuaExpression Name="DistanceToAlignment" ><Formula>RightSided and 4e-4 or -4e-4</Formula></LuaExpression>

		<Variants DefaultValue="Vekslingsfelt annotering" >
			<Variant Name="Seksjonsfelt annotering" />
			<Variant Name="Vekslingsfelt annotering" />
			<Variant Name="Sugefelt annotering" />
			<Variant Name="Fritekst annotering" />
		</Variants>
	
		<LuaExpression Name="name" ><Formula>_JBTEH_LBA_ocs_annotation_name()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_LBA_ocs_annotation_name()" 
			ReturnType="String"
			Description="Obtains the 'name' for a OCS annotation item." >
			<Constructor>String _JBTEH_LBA_ocs_annotation_name()</Constructor>
			<Formula>
				function _JBTEH_LBA_ocs_annotation_name()
					local RelationName = "Er KL-annotering for kontaktledning"
					local r,n = RC__getCollectionOfRelatedObjects(RelationName)
					if Variant:match("felt") then 
						if n == 0 then 
							return "UNFINISHED - Relate OCS contact wire change annotation to its two catenary wire alignments with '"..RelationName.."'."
						elseif n == 1 then
							return "UNFINISHED - Relate OCS contact wire change annotation for contact wire '"
								..r[0].code.."' to one more catenary wire alignment with '"..RelationName.."'."
						elseif n == 2 then
							-- NB! The user should use the ManageProperties Relations tab and just drag-and-drop relations in 
							-- the datagrid to modify the sequence of relations (which modifies the text shown in modelspace).
							local a = r[0]
							local b = r[1]
							if (Variant == "Vekslingsfelt annotering") then 
								return "VEKSLINGSFELT".." L"..a.code.." / L"..b.code
							elseif (Variant == "Seksjonsfelt annotering") then 
								return "SEKSJONSFELT".." L"..a.code.." / L"..b.code
							elseif (Variant == "Sugefelt annotering") then 
								return "SUGEFELT".." L"..a.code.." / L"..b.code
							end
						else 
							return _warning, "Too many ["..n.."] related items - relate OCS contact wire change annotation to exactly two catenary wire alignments with '"
								..RelationName.."', or adjust stage settings using layer names."
						end
					elseif Variant:lower():match("fritekst") then 
						if code and code ~= "" then 
							return code
						else
							if n == 0 then 
								return "UNFINISHED - Relate OCS annotation with variant '"..Variant.."' to its items with '"
									..RelationName.."' and define the 'code' or 'name' property."
							else
								local s,i
								s = RC__identify(r[0])
								for i = 1, n-1 do
									s = s..", "..RC__identify(r[i])
								end
								return "UNFINISHED - Define the 'code' property or change the 'name' property to annotate related items ["..s.."]."
							end
						end
					else
						return _error, "Unrecognized variant ["..Variant.."] - cannot annotate items"
					end
				end
			</Formula>
		</LuaFunction>

		<!-- Snap to any type of alignment: -->
		<InsertPointObject VariantName="Vekslingsfelt annotering" DisplayBlockName="NO-BN-2D-JBTFE_TXT-ANNOTERINGSTEKST-{{SymbolMode}}" 
				DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="0" SnapSensitivityDistance="3" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
		</InsertPointObject>      

		<InsertPointObject VariantName="Seksjonsfelt annotering" DisplayBlockName="NO-BN-2D-JBTFE_TXT-ANNOTERINGSTEKST-{{SymbolMode}}" 
				DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="0" SnapSensitivityDistance="3" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
		</InsertPointObject>      

		<InsertPointObject VariantName="Sugefelt annotering" DisplayBlockName="NO-BN-2D-JBTFE_TXT-ANNOTERINGSTEKST-{{SymbolMode}}" 
				DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="0" SnapSensitivityDistance="3" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
		</InsertPointObject>      

		<InsertPointObject VariantName="Fritekst annotering" DisplayBlockName="NO-BN-2D-JBTFE_TXT-ANNOTERINGSTEKST-{{SymbolMode}}" 
				DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="0" SnapSensitivityDistance="3" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
		</InsertPointObject>      

		<SymbolDefinition AllowSymbolMove="true" DefaultBlockName="" >
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}" />	
			<BlockNameFormat JoinBy="-" >
				NO-BN-2D-JBTFE_TXT
				ANNOTERINGSTEKST
				{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>
		
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />

	</ObjectType>



<!-- ========================================================================================================
	HIGH VOLTAGE
	OVERHEAD CATENARY SYSTEM - CONTACT WIRE ALIGNMENT
 =========================================================================================================-->
	<LuaFunction Name="NOBN_ocs_getWireMaterialTable()" 
		ReturnType="Table[5*Double]"
		Description="Returns a table with standard contact / messenger / tensioning / midpoint anchor / guy wire values, indexed as follows:
			\n
			\n[cwMat] = Contact wire material
			\n[mwMat] = Messenger wire material
			\n[twMat] = Tensioning wire material
			\n[awMat] = Midpoint anchoring line (wire) material
			\n[gwMat] = Guywire material
			\n" >
		<Constructor>Table[5*Double] NOBN_ocs_getWireMaterialTable(OcsSystem os)</Constructor>
		<Formula>
			--This function is declared as global in the DNA, accessible from all object types.
			function NOBN_ocs_getWireMaterialTable(os)
				os = os or OcsSystem
				local ContactWireValues = {
					--Note: Siemens' catenary wire clamp is about 12 cm high (117mm), above the upper tube
					["Unknown"]  = {cwMat="",        mwMat="",            twMat="",            awMat="",            gwMat=""           },
					["S25"]      = {cwMat="RiS 120", mwMat="Bz II 70/19", twMat="Bz II 70/19", awMat="Bz II 70/19", gwMat="Bz II 70/19"},
					["S20A"]     = {cwMat="RiS 100", mwMat="Bz II 50/19", twMat="Bz II 50/19", awMat="Bz II 50/19", gwMat="Bz II 50/19"},
					["S20AR"]    = {cwMat="RiS 100", mwMat="Bz II 50/19", twMat="Bz II 50/19", awMat="Bz II 50/19", gwMat="Bz II 50/19"},
					["S20B"]     = {cwMat="RiS 100", mwMat="Bz II 50/19", twMat="Bz II 50/19", awMat="Bz II 50/19", gwMat="Bz II 50/19"},
					["S20BR"]    = {cwMat="RiS 100", mwMat="Bz II 50/19", twMat="Bz II 50/19", awMat="Bz II 50/19", gwMat="Bz II 50/19"},
					["S20C1"]    = {cwMat="RiS 100", mwMat="Bz II 50/19", twMat="Bz II 50/19", awMat="Bz II 50/19", gwMat="Bz II 50/19"},
					["S20C2"]    = {cwMat="RiS 100", mwMat="Bz II 50/19", twMat="Bz II 50/19", awMat="Bz II 50/19", gwMat="Bz II 50/19"},
					["S35"]      = {cwMat="RiS 100", mwMat="Bz II 50/19", twMat="Bz II 50/19", awMat="Bz II 50/19", gwMat="Bz II 50/19"},
					["S35MS"]    = {cwMat="RiS 100", mwMat="Bz II 50/19", twMat="Bz II 50/19", awMat="Bz II 50/19", gwMat="Bz II 50/19"},
					["Cariboni"] = {cwMat="RiS 100", mwMat="Bz II 50/19", twMat="Bz II 50/19", awMat="Bz II 50/19", gwMat="Bz II 50/19"},
					["TET08"]    = {cwMat="RiS 100", mwMat="Bz II 50/19", twMat="Bz II 50/19", awMat="Bz II 50/19", gwMat="Bz II 50/19"}
				}
				if ContactWireValues[os] then
					return ContactWireValues[os]
				else
					return ContactWireValues["Unknown"],_warning, _info("Unknown OCS System for contact wire ["..os.."]. ")
				end
			end 
		</Formula>
	</LuaFunction>
		


	<ObjectType DataType="tElementWithAlignment" Class="RailwayAlignment" Name="JBTEH_KTL Kontaktledning"
				Layer="JBTEH_KTL" Color="ByLayer"
				Group="Kontaktledning/Kontaktledning"
				>
		
		<RelationSpace>kontaktledning</RelationSpace>

		<AlignmentSystems DefaultSystemName="Kontaktledning" >
			<AlignmentSystem Name="Kontaktledning"
				CantGauge="0.010"
				AlignmentGauge="0.010"
				QuickMode3DLiftWithCant="true"
			 />
		</AlignmentSystems>

		<xpp:expand select="NOBN_com_DEROGATION" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_EH_KTL" />

		<Variants DefaultValue="Kontaktledning, kjørbar" >
			<Variant Name="Kontaktledning, kjørbar" /> 
			<Variant Name="Kontaktledning, ikke kjørbar" /> 
			<Variant Name="Kontaktledning, avspenningsline" /> 
		</Variants>
		
		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="SweptModel3D">
				<SetValue Key="CustomTransformation" Value="False"/>
		</SetDynamicProperty>

		<LuaExpression Name="name" ><Formula>_JBTEH_KTL_name()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_name()" ReturnType="String"
			Description="Obtains the overhead catenary system wire's name, deduced from its code, which is expected to end with a single letter from a to e.
			\n
			\nThe wire 'code' is expected to conform to the following pattern, where an asterisk means 'zero or more occurrences':
			\n
			\n    &lt;whitespace&gt;* &lt;NUMBER&gt;{&lt;dash&gt;&lt;number&gt;}* &lt;letter&gt;* &lt;whitespace&gt;*
			\n
			\nWire code  ==> Wire name
			\n30-397a     ==> L30-397
			\n10-2-27b   ==> L10-2-27
			\n3f                ==> 3
			\n
			\nIt is assumed that the five natural parts of a contact wire have 'code' properties as follows:
			\n
			\na - Suspension wire (Avspenningsline)
			\nMulti-stranded steel wire(s) from the start Wire Tension Balancer (for 1 or 2 wires) to the first Line Isolator(s)
			\n
			\nb	- Lifted contact wire (Ikke kjørbar KL)
			\nLifted grooved contact wire (and messenger wire) from the first Line Isolator(s) to the first wire switch-over position
			\n
			\nc	- Contact wire (Kjørbar KL)
			\nGrooved contact wire (and messenger wire) between the first and the second wire switch-over positions
			\n
			\nd	- Lifted contact wire (Ikke kjørbar KL)
			\nLifted grooved CW (and messenger wire) from the second wire switch-over position to the second Line Isolator(s)
			\n
			\ne - Suspension wire (Avspenningsline)
			\nMulti-stranded steel wire(s) from the second Line Isolator(s) to the end Wire Tension Balancer (for 1 or 2 wires)
			\n" >
			<Constructor>String _JBTEH_KTL_name()</Constructor>
			<Formula>
				function _JBTEH_KTL_name()
					local pattern = "^%s-([%d%-]+)%a-"
					if tostring(code):match(pattern) then
						return "L"..(tostring(code):match(pattern))
					else
						return "("..code..")",_info("Wire code &lt;digits\\&gt;[&lt;dash\\&gt;&lt;digits\\&gt;]* was expected")
					end
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="Enumeration" Name="OcsSystem" DisplayName="KL-system" DefaultValue="S20A"
			Description="The OCS System is one of [Unknown | S25 | S20A | S20AR | S20B | S20BR | S20C1 | S20C2 | S35 | S35MS | Cariboni | TET08]." >
			<Values>
				<Value>Unknown</Value>
				<Value>S25</Value>
				<Value>S20A</Value>
				<Value>S20AR</Value>
				<Value>S20B</Value>
				<Value>S20BR</Value>
				<Value>S20C1</Value>
				<Value>S20C2</Value>
				<Value>S35</Value>
				<Value>S35MS</Value>
				<Value>Cariboni</Value>
				<Value>TET08</Value>
			</Values>
		</CustomAttribute>
		<LuaExpression Name="OcsSystem" ><Formula>_JBTEH_KTL_OcsSystem()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_OcsSystem()" 
			ReturnType="Enumeration"
			Description="Flags the attribute as 'Unknown' if the OCS system has not yet been selected. Click F4 to change selection." >
			<Constructor>Enumeration _JBTEH_KTL_OcsSystem()</Constructor>
			<Formula>
				function _JBTEH_KTL_OcsSystem()
					os = getPropertyValue("OcsSystem")
					if os == "Unknown" then
						return os,_unfinished,_info("UNFINISHED - Press F4 to select OCS System.")
					else
						return os
					end
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="Enumeration" Name="ContactWireMaterial" DisplayName="Kontaktledning materiale" DefaultValue=""
			Description="The overhead catenary system (OCS) contact wire material." 
		>
			<!-- Ref section 3.2 in https://trv.banenor.no/ts/Kontaktledning/Liner,_tr%C3%A5d,_ledning_og_kabel#Hard_drawn_bronze_conductors_.28KHF.29 -->
			<Values Variant="Kontaktledning, kjørbar" >
				<Value Description="EN50149 - AC-100 – Cu-ETP" >Ri 100</Value>
				<Value Description="EN 50149 – AC-100 – CuAg0,1 ">RiS 100</Value>
				<Value Description="EN 50149 – AC-120 – Cu-ETP" >Ri 120</Value>
				<Value Description= "EN 50149 – AC-120 – CuAg0,1" >RiS 120</Value>
			</Values>
			<Values Variant="Kontaktledning, ikke kjørbar" >
				<Value Description="EN50149 - AC-100 – Cu-ETP" >Ri 100</Value>
				<Value Description="EN 50149 – AC-100 – CuAg0,1 ">RiS 100</Value>
				<Value Description="EN 50149 – AC-120 – Cu-ETP" >Ri 120</Value>
				<Value Description= "EN 50149 – AC-120 – CuAg0,1" >RiS 120</Value>
			</Values>
			<Values Variant="Kontaktledning, avspenningsline" >
				<Value>N/A</Value>
			</Values>
		</CustomAttribute>
		<LuaExpression Name="ContactWireMaterial" ><Formula>_JBTEH_KTL_ContactWireMaterial()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_ContactWireMaterial()" ReturnType="String"
			Description="Obtains the standard contact wire material according to OCS system." >
			<Constructor>String _JBTEH_KTL_ContactWireMaterial()</Constructor>
			<Formula>
				function _JBTEH_KTL_ContactWireMaterial()
					return NOBN_ocs_getWireMaterialTable()["cwMat"]
				end
			</Formula>
		</LuaFunction>
		
		<CustomAttribute DataType="Enumeration" Name="MessengerWireMaterial" DisplayName="Bæreline materiale" DefaultValue=""
			Description="The overhead catenary system (OCS) messenger wire material." 
		>
			<Values Variant="Kontaktledning, kjørbar" >
				<Value>Bz II 50/19</Value>
				<Value>Bz II 50/19 isolert</Value>
				<Value>Bz II 70/19</Value>
			</Values>
			<Values Variant="Kontaktledning, ikke kjørbar" >
				<Value Description="EN50149 - AC-100 – Cu-ETP" >Ri 100</Value>
				<Value Description="EN 50149 – AC-100 – CuAg0,1 ">RiS 100</Value>
				<Value Description="EN 50149 – AC-120 – Cu-ETP" >Ri 120</Value>
				<Value Description= "EN 50149 – AC-120 – CuAg0,1" >RiS 120</Value>
			</Values>
			<Values Variant="Kontaktledning, avspenningsline" >
				<Value>N/A</Value>
			</Values>
		</CustomAttribute>
		<LuaExpression Name="MessengerWireMaterial" ><Formula>_JBTEH_KTL_MessengerWireMaterial()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_MessengerWireMaterial()" ReturnType="String"
			Description="Obtains the standard contact wire material according to OCS system." >
			<Constructor>String _JBTEH_KTL_MessengerWireMaterial()</Constructor>
			<Formula>
				function _JBTEH_KTL_MessengerWireMaterial()
					return NOBN_ocs_getWireMaterialTable()["mwMat"]
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="Enumeration" Name="TensioningWireMaterial" DisplayName="Avspenningsline materiale" DefaultValue=""
			Description="The overhead catenary system (OCS) tensioning wire material." 
		>
			<Values Variant="Kontaktledning, kjørbar" >
				<Value>N/A</Value>
			</Values>
			<Values Variant="Kontaktledning, ikke kjørbar" >
				<Value>N/A</Value>
			</Values>
			<Values Variant="Kontaktledning, avspenningsline" >
				<!-- Steel wires - Ref. 3.8 in https://trv.banenor.no/ts/Kontaktledning/Liner,_tr%C3%A5d,_ledning_og_kabel#Hard_drawn_bronze_conductors_.28KHF.29 -->
				<Value>50/175 w/bitumen</Value>
				<Value>60/222 w/bitumen</Value>
				<Value>16/133</Value>
				<Value>30/7</Value>
				<Value>50/19 KHF</Value>
				<Value>70/19 KHF</Value>
				<Value>50/19 KHF isolert</Value>
				<Value>50/19</Value>
				<Value>70/19</Value>
				<Value>80/19</Value>
				<Value>95/19</Value>
			</Values>
		</CustomAttribute>
		<LuaExpression Name="TensioningWireMaterial" ><Formula>_JBTEH_KTL_TensioningWireMaterial()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_TensioningWireMaterial()" ReturnType="String"
			Description="Obtains the standard tensioning wire material according to OCS system." >
			<Constructor>String _JBTEH_KTL_TensioningWireMaterial()</Constructor>
			<Formula>
				function _JBTEH_KTL_TensioningWireMaterial()
					return NOBN_ocs_getWireMaterialTable()["twMat"]
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="Enumeration" Name="Wire2dColor" DisplayName="Ledningsfarge i 2D" DefaultValue=""
			Description="The overhead catenary system (OCS) wire's color when displayed as a polyline in the CAD program." 
		>
			<Values Variant="Kontaktledning, kjørbar" >
				<Value>Sort</Value>
				<Value>Blå</Value>
				<Value>Lilla</Value>
				<Value>Rød</Value>
				<Value>Brun</Value>
				<Value>Oransje</Value>
				<Value>Grønn</Value>
			</Values>
			<Values Variant="Kontaktledning, ikke kjørbar" >
				<Value>Sort</Value>
				<Value>Blå</Value>
				<Value>Lilla</Value>
				<Value>Rød</Value>
				<Value>Brun</Value>
				<Value>Oransje</Value>
				<Value>Grønn</Value>
			</Values>
			<Values Variant="Kontaktledning, avspenningsline" >
				<Value>Gul</Value>
			</Values>
		</CustomAttribute>
		<LuaExpression Name="Wire2dColor" ><Formula>_JBTEH_KTL_Wire2dColor()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_Wire2dColor()" ReturnType="String"
			Description="Obtains the CAD system layer name for the catenary wire, based on its Variant." >
			<Constructor>String _JBTEH_KTL_Wire2dColor()</Constructor>
						<!-- --TODO: Make a fancy algorithm, picking best color choice based on not re-using nearby colors: -->
						<!-- w = getClosestAlignments(RcType) -->
						<!-- wColors = {"Sort", "Blå", "Lilla", "Rød", "Brun", "Oransje", "Grønn"} -->
						<!-- wUsed = {} -->
						<!-- for i = 0,w.count do -->
							<!-- if RC_isw[0].Wire2dColor -->
							<!-- --etc -->
						<!-- end -->
			<Formula>
				function _JBTEH_KTL_Wire2dColor()
					if Variant == "Kontaktledning, kjørbar" or Variant == "Kontaktledning, ikke kjørbar" then
						return "Sort"
					elseif Variant == "Kontaktledning, avspenningsline" then
						return "Gul"
					else
						return "Bad Variant ["..Variant.."]."
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="Linetype" ><Formula>_JBTEH_KTL_Linetype()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_Linetype()" ReturnType="String"
			Description="Obtains the CAD system linetype (continuous / dashed) for the catenary wire, based on its Variant." >
			<Constructor>String _JBTEH_KTL_Linetype()</Constructor>
			<Formula>
				function _JBTEH_KTL_Linetype()
					if Variant == "Kontaktledning, kjørbar" then
						return "Continuous"
					elseif Variant == "Kontaktledning, ikke kjørbar" then
						return "RC-DASHED"
					elseif Variant == "Kontaktledning, avspenningsline" then
						return "RC-DASHED"
					else
						return "Continuous" --Cannot return text string here
					end
				end
			</Formula>
		</LuaFunction>

		<!-- Colors according to Bane NOR TRV, Contact wire symbols: -->
		<LuaExpression Name="Color" ><Formula>_JBTEH_KTL_Color()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_Color()" ReturnType="String"
			Description="Obtains the CAD system's polyline color, based on the wire's Wire2dColor property." >
			<Constructor>String _JBTEH_KTL_Color()</Constructor>
			<Formula>
				function _JBTEH_KTL_Color()
					if     Wire2dColor == "Sort" then return 7 --Displays as white
					elseif Wire2dColor == "Blå" then return "30,144,255"
					elseif Wire2dColor == "Lilla" then return "148,0,211"
					elseif Wire2dColor == "Rød" then return "252,10,28"
					elseif Wire2dColor == "Brun" then return "139,69,19"
					elseif Wire2dColor == "Oransje" then return "255,140,0"
					elseif Wire2dColor == "Grønn" then return "50,205,50"
					elseif Wire2dColor == "Gul" then return 2
					else return 7 --white
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="Lineweight" ><Formula>_JBTEH_KTL_Lineweight()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_Lineweight()" ReturnType="Double"
			Description="Obtains the CAD system lineweight (line width in print) for the catenary wire, based on its Variant." >
			<Constructor>Double _JBTEH_KTL_Lineweight()</Constructor>
			<Formula>
				--AutoCAD needs lineweights to be of the form "LineWeight035" for "0.35 mm" (only predefined Values according to AutoCAD enum):
				function _JBTEH_KTL_Lineweight()
					if Wire2dColor == "Sort" then
						return "LineWeight035"
					else
						return "LineWeight040"
					end
				end
			</Formula>
		</LuaFunction>

		<!-- RailCOMPLETE provides the '_position' reserved identifier, sampled along the alignment, to be used in e.g. getAlignmentInfo() etc. -->
		<LuaExpression Name="SweptModel3D_0.Rotation3D.X" ><Formula>NOBN_trk_getPitchFromGradient(_position)</Formula></LuaExpression>
		<LuaExpression Name="SweptModel3D_0.Rotation3D.Y" ><Formula>NOBN_com_getRollFromCantInterpretedAsDecimalDegrees(_position)</Formula></LuaExpression>
		<LuaExpression Name="SweptModel3D_0.Rotation3D.Z" ><Formula>0.0</Formula></LuaExpression>
		

		<!-- The 2D Sweep profile: -->
		<!-- See chapter 3.8 Steel wires in https://trv.banenor.no/ts/Kontaktledning/Liner,_tr%C3%A5d,_ledning_og_kabel#Steel_wires -->
		<LuaExpression Name="SweptModel3D_0.SweepProfile" ><Formula>_JBTEH_KTL_Model3dName()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_Model3dName()" ReturnType="Double"
			Description="Obtains the wire's 3D model name, based on its Variant and material." >
			<Constructor>Double _JBTEH_KTL_Model3dName()</Constructor>
			<Formula>
				function _JBTEH_KTL_Model3dName()
					if Variant == "Kontaktledning, kjørbar" or Variant == "Kontaktledning, ikke kjørbar" then
						return "NO-BN-SWEEP-EH-KTL-KONTAKTTRÅD-"..Material:gsub(" ","-")
					elseif Variant == "Kontaktledning, avspenningsline" then
						t = "NO-BN-SWEEP-FE-WIR-WIRE-"
						if     Material:match("50/175 w/bitumen") then return t.."SVART-DIAMETER-013"
						elseif Material:match("60/222 w/bitumen") then return t.."SVART-DIAMETER-014"
						elseif Material:match("16/133") then return t.."-006"
						elseif Material:match("30/7") then return t.."GRÅ-DIAMETER-007"
						elseif Material:match("50/19") then return t.."GRÅ-DIAMETER-009"
						elseif Material:match("70/19") then return t.."GRÅ-DIAMETER-011"
						elseif Material:match("80/19") then return t.."GRÅ-DIAMETER-012" --11.5mm
						elseif Material:match("95/19") then return t.."GRÅ-DIAMETER-013"
						end
					else 
						return "Bad Variant ["..Variant.."]."
					end
				end
			</Formula>
		</LuaFunction>
		
		<CustomAttribute DataType="String" Name="mc_OtherObjectsToBeModelchecked" ReadOnly="true" Category="Model check"
			DisplayName="Andre objekter som modelsjekkes" 
			Description="When this contact wire is refreshed, then all point objects in 2D closer than 0.1 m from the alignment are modelchecked as well."
		 />
		<LuaExpression Name="mc_OtherObjectsToBeModelchecked" IsModelCheck="true" ><Formula>_JBTEH_KTL_otherObjectsToModelcheck()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_otherObjectsToModelcheck()" ReturnType="String"
			Description = "Returns the number of other items to modelcheck, and a table with references to them." >
			<Constructor>_JBTEH_KTL_otherObjectsToModelcheck()</Constructor>
			<Formula>
				function _JBTEH_KTL_otherObjectsToModelcheck()
					t = getNearbyPointObjects2D(0.10)
					n = t.Count
					return n,t,_info(n.." objects close to this contact wire have been modelchecked.")
				end
			</Formula>
		</LuaFunction> 

		<PropertyPrompt Key="code" DefaultValue="Kontaktledning" AcceptEmptyValue="false" />

		<InsertAlignment VariantName="Kontaktledning, kjørbar" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KONTAKTTRAAD-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="Kontaktledning, ikke kjørbar" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KONTAKTTRAAD-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="Kontaktledning, avspenningsline" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
		</InsertAlignment>

	</ObjectType>

		
<!-- ========================================================================================================
	HIGH VOLTAGE
	OVERHEAD CATENARY SYSTEM - CONDUCTOR (CABLE) ALIGNMENT
 =========================================================================================================-->
	<ObjectType DataType="tElementWithAlignment" Class="RailwayAlignment" Name="JBTEH_LED Ledning"
				Layer="JBTEH_LED" Color="ByLayer"
				Group="Kontaktledning/Ledning"
				>
		
		<RelationSpace>høyspentledning</RelationSpace>

		<AlignmentSystems DefaultSystemName="Høyspentledning" >
			<AlignmentSystem Name="Høyspentledning"
				CantGauge="0.010"
				AlignmentGauge="0.010"
				QuickMode3DLiftWithCant="true"
			 />
		</AlignmentSystems>

		<xpp:expand select="NOBN_com_DEROGATION" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_EH_LED" />
		
		<Variants DefaultValue="AT-line" >
			<Variant Name="AT-line (PL)" /> 
			<Variant Name="AT-kabel (PL)" /> 
			<Variant Name="AT-line (NL)" /> 
			<Variant Name="AT-kabel (NL)" /> 
			<Variant Name="Fjernline" /> 
			<Variant Name="Fjernkabel" /> 
			<Variant Name="Forbigangsline" />
			<Variant Name="Forbigangskabel" />
			<Variant Name="Forsterkningsline" />
			<Variant Name="Forsterkningskabel" />
			<Variant Name="Mateline" /> 
			<Variant Name="Matekabel" />
			<Variant Name="Returline" /> 
			<Variant Name="Returkabel" />
		</Variants>

		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="SweptModel3D">
				<SetValue Key="CustomTransformation" Value="False"/>
		</SetDynamicProperty>

		<LuaExpression Name="Linetype" ><Formula>_JBTEH_LED_Linetype()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_LED_Linetype()" ReturnType="String"
			Description="Obtains the CAD system linetype (continuous / dashed) for the wire, based on its Variant." >
			<Constructor>String _JBTEH_LED_Linetype()</Constructor>
			<Formula>
				function _JBTEH_LED_Linetype()
					if Variant == "AT-line (PL)" then
						return "RC-EH_LINJE"
					elseif Variant == "AT-kabel (PL)" then
						return "RC-EH_KABEL"
					elseif Variant == "AT-line (NL)" then
						return "RC-EH_LINJE"
					elseif Variant == "AT-kabel (NL)" then
						return "RC-EH_KABEL"
					elseif Variant == "Fjernline" then
						return "RC-EH_LINJE"
					elseif Variant == "Fjernkabel" then
						return "RC-EH_KABEL"
					elseif Variant == "Forbigangsline" then
						return "RC-EH_LINJE"
					elseif Variant == "Forbigangskabel" then
						return "RC-EH_KABEL"
					elseif Variant == "Forsterkningsline" then
						return "RC-EH_LINJE"
					elseif Variant == "Forsterkningskabel" then
						return "RC-EH_KABEL"
					elseif Variant == "Mateline" then
						return "RC-EH_LINJE"
					elseif Variant == "Matekabel" then
						return "RC-EH_KABEL"
					elseif Variant == "Returline" then
						return "RC-EH_RETURLEDNING"
					elseif Variant == "Returkabel" then
						return "RC-EH_RETURKABEL"
					else
						return "Continuous" --Cannot return text string here
					end
				end
			</Formula>
		</LuaFunction>
		

		<CustomAttribute DataType="Enumeration" Name="WireType" DisplayName="Ledningstype" DefaultValue="tsli - al - 24 kv - 3x1x95"
			Description="the overhead catenary system (ocs) physical wire type." 
		>
			<Values>
				<Value>axcesq-al-36 kv 1x400/35</Value>
				<Value>axlj - al - 24 kv - 1x240/25</Value>
				<Value>bsfi - cu - 1 kv - 3x10</Value>
				<Value>bsfi - cu - 1 kv - 3x16</Value>
				<Value>bsfi - cu - 1 kv - 3x2,5</Value>
				<Value>bsfi - cu - 1 kv - 3x25</Value>
				<Value>bsfi - cu - 1 kv - 3x50</Value>
				<Value>bsfi - cu - 1 kv - 3x6</Value>
				<Value>bv-axces - al - 36 kv - 1x240/35</Value>
				<Value>bv-axcesq - al - 36 kv - 1x240/35</Value>
				<Value>blank - al - 1x240/19</Value>
				<Value>blank - al - 1x240/37</Value>
				<Value>blank - al - 1x400/61</Value>
				<Value>blank - al - 1x240/61</Value>
				<Value>blank - cu - 1x150/37</Value>
				<Value>blank - cu - 1x95/1x50</Value>
				<Value>ex - al - 1 kv - 3x95</Value>
				<Value>ex - al - 1x240/19</Value>
				<Value>ex - al - 1x240/61</Value>
				<Value>ifsi - cu - 1 kv - 1x25/16</Value>
				<Value>ifsi - cu - 1 kv - 1x4/4 </Value>
				<Value>ix - 4x95 - cu</Value>
				<Value>ix - al - 1x240/19</Value>
				<Value>ix - al - 1x240/37</Value>
				<Value>ix - al - 1x240/61</Value>
				<Value>ixxi - 2x240 - al </Value>
				<Value>ixxi - al - 1 kv - 1x240</Value>
				<Value>ixxi - al - 1x240/37</Value>
				<Value>ixxi - al - 1x240/19</Value>
				<Value>ixxi - al - 1x240/61</Value>
				<Value>radox 4 gkw-x - cu - 1,8/3kv - 95</Value>
				<Value>tfxp - al - 1 kv - 1x240</Value>
				<Value>tsle - al - 36 kv - 1x240/61</Value>
				<Value>tsle - al - 36 kv - 1x400/35</Value>
				<Value>tsle - al- 24kv - 1x50/16</Value>
				<Value>tsle - al- 36kv - 1x150/35</Value>
				<Value>tsle - cu - 36 kv - 1x150</Value>
				<Value>tslf - al - 24 kv - 1x400</Value>
				<Value>tsli - al - 24 kv - 3x150</Value>
				<Value>tsli - al - 24 kv - 3x1x240</Value>
				<Value>tsli - al - 24 kv - 3x1x50</Value>
				<Value>tsli - al - 24 kv - 3x1x95</Value>
				<Value>tsli - al - 36 kv - 1x150</Value>
				<Value>tsli - al - 36 kv - 1x240</Value>
				<Value>tsli - al - 36 kv - 1x400/35</Value>
				<Value>tx - al - 1x240/37</Value>
				<Value>txse - al - 1 kv - 1x150</Value>
				<Value>txse - al - 1 kv - 1x240</Value>
				<Value>txse - al - 1 kv - 1x400</Value>
				<Value>txse - al - 1 kv - 1x50</Value>
				<Value>txse - al - 36kv - 1x400/35</Value>
				<Value>txse al. 24 kv</Value>
				<Value>txsi - al - 36 kv - 1x400</Value>
				<Value>txsi - cu - 24 kv - 1x25/16</Value>
				<Value>txsp - cu - 24 kv - 1x25</Value>
				<Value>txxi - al - 1kv - 1x1x240</Value>
				<Value>txxi - al - 1kv - 1x1x400</Value>
				<Value>txxi - al - 1kv - 2x1x240</Value>
				<Value>txxi - al - 1kv - 2x1x400</Value>
				<Value>txxi - cu - 1kv - 1x1x95</Value>
				<Value>txxi - cu - 1kv - 3x1x95</Value>
				<Value>txxp - al - 1 kv - 1x150/19</Value>
				<Value>txxp - al - 1 kv - 1x240</Value>
				<Value>txxp - al - 1 kv - 1x240/37</Value>
				<Value>txxp - al - 1 kv - 1x300/61</Value>
				<Value>txxp - cu - 1 kv - 1x150</Value>
				<Value>txxp - cu - 1 kv - 1x300</Value>
			</Values>
		</CustomAttribute>
		
		<CustomAttribute DataType="Enumeration" Name="Material" DisplayName="Ledningsmateriale"
			Description="the overhead catenary system (ocs) physical wire material." 
		>
			<Values >
				<Value>aluminium</Value>
				<Value>kobber</Value>
			</Values>
		</CustomAttribute>
		<LuaExpression Name="Material" ><Formula>_JBTEH_LED_TypeToPropertyAnalysis()["material"]</Formula></LuaExpression>
		
		<CustomAttribute DataType="Enumeration" Name="InsulationGroup" DisplayName="Isolasjonsgruppe"
			Description="the overhead catenary system (ocs) physical wire insulation group in kV." 
		>
			<Values >
				<Value>1</Value>
				<Value>24</Value>
				<Value>36</Value>
			</Values>
		</CustomAttribute>		
		<LuaExpression Name="InsulationGroup" ><Formula>_JBTEH_LED_TypeToPropertyAnalysis()["insulation"]</Formula></LuaExpression>
		
		<CustomAttribute DataType="UInt32" Name="CrossSection" DisplayName="Nominellt tverrsnitt"
			Description="the overhead catenary system (ocs) physical wire nominal cross section in mm^2." 
		/>
		<LuaExpression Name="CrossSection" ><Formula>_JBTEH_LED_TypeToPropertyAnalysis()["cross_section"]</Formula></LuaExpression>

		<CustomAttribute DataType="UInt32" Name="Strands" DisplayName="Antall tråder"
			Description="the number of strands in the physical overhead catenary system (ocs) wire." 
		/>
		<LuaExpression Name="Strands" ><Formula>_JBTEH_LED_TypeToPropertyAnalysis()["strands"]</Formula></LuaExpression>

		<LuaExpression Name="SweptModel3D_0.Roll" ><Formula>NOBN_com_getRollFromCantInterpretedAsDecimalDegrees(_position)</Formula></LuaExpression>
		
		<!-- TODO 2022-02-21 knhel:Add support for different materials -->
		<!-- The 2D Sweep profile: -->
		<LuaExpression Name="SweptModel3D_0.SweepProfile" ><Formula>_JBTEH_LED_Model3dName()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_LED_Model3dName()" ReturnType="Double"
			Description="Obtains the wire's 3D model name, based on its Variant and material." >
			<Constructor>Double _JBTEH_LED_Model3dName()</Constructor>
			<Formula>
				function _JBTEH_LED_Model3dName()
					return "NO-BN-SWEEP-FE-WIR-WIRE-BLANK-KOBBER-95-MM2-DIAMETER-013"
				end
			</Formula>
		</LuaFunction>
		
		<!-- 2022-02-16 CLFEY/JOSJO - ta vare på dette, til JBTEH_LED: -->
		<!-- t = "NO-BN-SWEEP-FE-WIR-WIRE-BLANK-KOBBER-" -->
		<!-- if     Material:match("50/19 KHF isolert") then return "NO-BN-SWEEP-FE-WIR-WIRE-GRÅ-DIAMETER-013" -->
		<!-- elseif Material:match("70/19 KHF isolert") then return "NO-BN-SWEEP-FE-WIR-WIRE-GRÅ-DIAMETER-013" -->
		<!-- elseif Material:match("10/49") then return t.."10-MM2-DIAMETER-004" -->
		<!-- elseif Material:match("25/19") then return t.."25-MM2-DIAMETER-006" -->
		<!-- elseif Material:match("35/19") then return t.."35-MM2-DIAMETER-008" -->
		<!-- elseif Material:match("50/19") then return t.."50-MM2-DIAMETER-009" -->
		<!-- elseif Material:match("70/19") then return t.."70-MM2-DIAMETER-011" -->
		<!-- elseif Material:match("95/19") then return t.."95-MM2-DIAMETER-013" -->
		<!-- elseif Material:match("150/37") then return t.. "150-MM2-DIAMETER-016" -->
		<!-- end -->

		<LuaExpression Name="name" ><Formula>"L"..code</Formula></LuaExpression>
		<PropertyPrompt Key="code" DefaultValue="Høyspentledning" AcceptEmptyValue="false" />
		
		<InsertAlignment VariantName="AT-line (PL)" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="AT-kabel (PL)" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="AT-line (NL)" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="AT-kabel (NL)" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>
		
		<InsertAlignment VariantName="Fjernline" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="Fjernkabel" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>
		
		<InsertAlignment VariantName="Forbigangsline" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="Forbigangskabel" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="Forsterkningsline" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="Forsterkningskabel" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>
		
		<InsertAlignment VariantName="Mateline" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="Matekabel" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="Returline" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

		<InsertAlignment VariantName="Returkabel" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KABELFOERING-TREKKEROER-Schematic" DefaultToTangentContinuity="false" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

	</ObjectType>
	
	<!-- TODO 2022-02-21 knhel: Lage funksjon for ledningmateriale standardverdier (vekt, max strekkraft)  -->
	<!-- TODO: (use Cantilever/WTB standard value functions as an example): <LuaFunction Name="_JBTEH_LED_StandardValues() etc..."  -->
	
	<LuaFunction Name="_JBTEH_LED_TypeToPropertyAnalysis()" 
		ReturnType="Table[6*Double]"
		Description="Returns standard wire Values table: [material]=wire material, [insulation]=wire insulation group in kV, [cross_section]= wire nominal cross section in mm^2, [strands] = number of strands in the wire" >
		<Constructor>Table[6*Double] _JBTEH_LED_TypeToPropertyAnalysis(String type)</Constructor>
		<Formula>
			function _JBTEH_LED_TypeToPropertyAnalysis(type)
				if type == nil then type = WireType end
				Types = {
					"axcesq-al-36 kv 1x400/35",
					"axlj - al - 24 kv - 1x240/25",
					"bsfi - cu - 1 kv - 3x10",
					"bsfi - cu - 1 kv - 3x16",
					"bsfi - cu - 1 kv - 3x2,5",
					"bsfi - cu - 1 kv - 3x25",
					"bsfi - cu - 1 kv - 3x50",
					"bsfi - cu - 1 kv - 3x6",
					"bv-axces - al - 36 kv - 1x240/35",
					"bv-axcesq - al - 36 kv - 1x240/35",
					"blank - al - 1x240/19",
					"blank - al - 1x240/37",
					"blank - al - 1x400/61",
					"blank - al - 1x240/61",
					"blank - cu - 1x150/37",
					"blank - cu - 1x95/1x50",
					"ex - al - 1 kv - 3x95",
					"ex - al - 1x240/19",
					"ex - al - 1x240/61",
					"ifsi - cu - 1 kv - 1x25/16",
					"ifsi - cu - 1 kv - 1x4/4 ",
					"ix - 4x95 - cu",
					"ix - al - 1x240/19",
					"ix - al - 1x240/37",
					"ix - al - 1x240/61",
					"ixxi - 2x240 - al ",
					"ixxi - al - 1 kv - 1x240",
					"ixxi - al - 1x240/37",
					"ixxi - al - 1x240/19",
					"ixxi - al - 1x240/61",
					"radox 4 gkw-x - cu - 1,8/3kv - 95",
					"tfxp - al - 1 kv - 1x240",
					"tsle - al - 36 kv - 1x240/61",
					"tsle - al - 36 kv - 1x400/35",
					"tsle - al- 24kv - 1x50/16",
					"tsle - al- 36kv - 1x150/35",
					"tsle - cu - 36 kv - 1x150",
					"tslf - al - 24 kv - 1x400",
					"tsli - al - 24 kv - 3x150",
					"tsli - al - 24 kv - 3x1x240",
					"tsli - al - 24 kv - 3x1x50",
					"tsli - al - 24 kv - 3x1x95",
					"tsli - al - 36 kv - 1x150",
					"tsli - al - 36 kv - 1x240",
					"tsli - al - 36 kv - 1x400/35",
					"tx - al - 1x240/37",
					"txse - al - 1 kv - 1x150",
					"txse - al - 1 kv - 1x240",
					"txse - al - 1 kv - 1x400",
					"txse - al - 1 kv - 1x50",
					"txse - al - 36kv - 1x400/35",
					"txse al. 24 kv",
					"txsi - al - 36 kv - 1x400",
					"txsi - cu - 24 kv - 1x25/16",
					"txsp - cu - 24 kv - 1x25",
					"txxi - al - 1kv - 1x1x240",
					"txxi - al - 1kv - 1x1x400",
					"txxi - al - 1kv - 2x1x240",
					"txxi - al - 1kv - 2x1x400",
					"txxi - cu - 1kv - 1x1x95",
					"txxi - cu - 1kv - 3x1x95",
					"txxp - al - 1 kv - 1x150/19",
					"txxp - al - 1 kv - 1x240",
					"txxp - al - 1 kv - 1x240/37",
					"txxp - al - 1 kv - 1x300/61",
					"txxp - cu - 1 kv - 1x150",
					"txxp - cu - 1 kv - 1x300"
					}
				if not RC__isMemberOf(Types, type) then 
					return 0,_warning, _info("Bad wire type ["..type.."]. ")
				end
				t = {
					["axcesq-al-36 kv 1x400/35"] = {material= "aluminium", insulation=36 , cross_section=400, strands=35 },
					["axlj - al - 24 kv - 1x240/25"] = {material= "aluminium", insulation=24, cross_section=240, strands=25 },
					["bsfi - cu - 1 kv - 3x10"] = {material= "kobber", insulation= 1},
					["bsfi - cu - 1 kv - 3x16"] = {material= "kobber", insulation= 1},
					["bsfi - cu - 1 kv - 3x2,5"] = {material= "kobber", insulation= 1},
					["bsfi - cu - 1 kv - 3x25"] = {material= "kobber", insulation= 1},
					["bsfi - cu - 1 kv - 3x50"] = {material= "kobber", insulation= 1},
					["bsfi - cu - 1 kv - 3x6"] = {material= "kobber", insulation= 1},
					["bv-axces - al - 36 kv - 1x240/35"] = {material= "aluminium", insulation= 36, cross_section=240, strands=35 },
					["bv-axcesq - al - 36 kv - 1x240/35"] = {material= "aluminium", insulation= 36, cross_section=240, strands=35 },
					["blank - al - 1x240/19"] = {material= "aluminium", cross_section=240, strands=19 },
					["blank - al - 1x240/37"] = {material= "aluminium", cross_section=240, strands=37 },
					["blank - al - 1x400/61"] = {material= "aluminium", cross_section=400, strands=61 },
					["blank - al - 1x240/61"] = {material= "aluminium", cross_section=240, strands=61 },
					["blank - cu - 1x150/37"] = {material= "kobber", cross_section=150, strands=37 },
					["blank - cu - 1x95/1x50"] = {material= "kobber"},
					["ex - al - 1 kv - 3x95"] = {material= "aluminium", insulation= 1, cross_section=95 },
					["ex - al - 1x240/19"] = {material= "aluminium",cross_section=240, strands=19},
					["ex - al - 1x240/61"] = {material= "aluminium", cross_section=240, strands=61 },
					["ifsi - cu - 1 kv - 1x25/16"] = {material= "kobber", insulation= 1, cross_section=25, strands=16 },
					["ifsi - cu - 1 kv - 1x4/4 "] = {material= "kobber", insulation= 1, cross_section=4, strands=4 },
					["ix - 4x95 - cu"] = {material= "kobber", cross_section=95 },
					["ix - al - 1x240/19"] = {material= "aluminium", cross_section=240, strands=19 },
					["ix - al - 1x240/37"] = {material= "aluminium", cross_section=240, strands=37 },
					["ix - al - 1x240/61"] = {material= "aluminium", cross_section=240, strands=61 },
					["ixxi - 2x240 - al "] = {material= "aluminium", cross_section=240 },
					["ixxi - al - 1 kv - 1x240"] = {material= "aluminium", insulation= 1, cross_section=240 },
					["ixxi - al - 1x240/37"] = {material= "aluminium", cross_section=240, strands=37 },
					["ixxi - al - 1x240/19"] = {material= "aluminium", cross_section=240, strands=19 },
					["ixxi - al - 1x240/61"] = {material= "aluminium", cross_section=240, strands=61 },
					["radox 4 gkw-x - cu - 1,8/3kv - 95"] = {material= "kobber", cross_section=95 },
					["tfxp - al - 1 kv - 1x240"] = {material= "aluminium", insulation= 1, cross_section=240 },
					["tsle - al - 36 kv - 1x240/61"] = {material= "aluminium", insulation= 36, cross_section=240, strands=61 },
					["tsle - al - 36 kv - 1x400/35"] = {material= "aluminium", insulation= 36, cross_section=400, strands=35 },
					["tsle - al- 24kv - 1x50/16"] = {material= "aluminium", insulation= 24, cross_section=50, strands=16 },
					["tsle - al- 36kv - 1x150/35"] = {material= "aluminium", insulation= 36, cross_section=150, strands=35 },
					["tsle - cu - 36 kv - 1x150"] = {material= "kobber", insulation= 36, cross_section=150 },
					["tslf - al - 24 kv - 1x400"] = {material= "aluminium", insulation= 24, cross_section=400 },
					["tsli - al - 24 kv - 3x150"] = {material= "aluminium", insulation= 24, cross_section=150 },
					["tsli - al - 24 kv - 3x1x240"] = {material= "aluminium", insulation= 24, cross_section=240 },
					["tsli - al - 24 kv - 3x1x50"] = {material= "aluminium", insulation= 24, cross_section=50 },
					["tsli - al - 24 kv - 3x1x95"] = {material= "aluminium", insulation= 24, cross_section=95 },
					["tsli - al - 36 kv - 1x150"] = {material= "aluminium", insulation= 36, cross_section=150 },
					["tsli - al - 36 kv - 1x240"] = {material= "aluminium", insulation= 36, cross_section=240 },
					["tsli - al - 36 kv - 1x400/35"] = {material= "aluminium", insulation= 36, cross_section=400, strands=35 },
					["tx - al - 1x240/37"] = {material= "aluminium", cross_section=240, strands=37 },
					["txse - al - 1 kv - 1x150"] = {material= "aluminium", insulation=1, cross_section=150 },
					["txse - al - 1 kv - 1x240"] = {material= "aluminium", insulation=1, cross_section=240 },
					["txse - al - 1 kv - 1x400"] = {material= "aluminium", insulation=1, cross_section=400 },
					["txse - al - 1 kv - 1x50"] = {material= "aluminium", insulation= 1, cross_section=50 },
					["txse - al - 36kv - 1x400/35"] = {material= "aluminium", insulation= 36, cross_section=400, strands=35 },
					["txse al. 24 kv"] = {material= "aluminium", insulation= 24},
					["txsi - al - 36 kv - 1x400"] = {material= "aluminium", insulation= 36, cross_section=400},
					["txsi - cu - 24 kv - 1x25/16"] = {material= "kobber", insulation= 24, cross_section=25, strands=16 },
					["txsp - cu - 24 kv - 1x25"] = {material= "kobber", insulation= 24, cross_section=25 },
					["txxi - al - 1kv - 1x1x240"] = {material= "aluminium", insulation= 1, cross_section=240 },
					["txxi - al - 1kv - 1x1x400"] = {material= "aluminium", insulation= 1, cross_section=400 },
					["txxi - al - 1kv - 2x1x240"] = {material= "aluminium", insulation= 1, cross_section=240 },
					["txxi - al - 1kv - 2x1x400"] = {material= "aluminium", insulation= 1, cross_section=400 },
					["txxi - cu - 1kv - 1x1x95"] = {material= "kobber", insulation= 1, cross_section=95 },
					["txxi - cu - 1kv - 3x1x95"] = {material= "kobber", insulation= 1, cross_section=95 },
					["txxp - al - 1 kv - 1x150/19"] = {material= "aluminium", insulation= 1, cross_section=150, strands=19 },
					["txxp - al - 1 kv - 1x240"] = {material= "aluminium", insulation= 1, cross_section=240 },
					["txxp - al - 1 kv - 1x240/37"] = {material= "aluminium", insulation= 1, cross_section=240, strands=37 },
					["txxp - al - 1 kv - 1x300/61"] = {material= "aluminium", insulation= 1, cross_section=300, strands=61 },
					["txxp - cu - 1 kv - 1x150"] = {material= "kobber", insulation= 1, cross_section=150 },
					["txxp - cu - 1 kv - 1x300"] = {material= "kobber", insulation= 1, cross_section=300 }
				}
				return t[type]
			end 
		</Formula>
	</LuaFunction>



<!-- ========================================================================================================
	HIGH VOLTAGE
	MIDPOINT ANCHOR LINE
	Comment: Object type is not known to Bane NOR's Banedata. The FIXLINE appears only as Pset Values to
	the contact wire EH-KTL object in Banedata.
 =========================================================================================================-->
	<ObjectType DataType="tElementWithAlignment" Class="RailwayAlignment" Name="JBTEH_FIL Fixline"
				Layer="JBTEH_FIL" Color="ByLayer"
				Group="Kontaktledning/Fixline"
				>
		
		<RelationSpace>fixline</RelationSpace>
		
		<xpp:expand select="NOBN_com_DEROGATION" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<!-- This object does not have its own Banedata code ==> omit specialized Pset for fixlines -->

		<Variants DefaultValue="Fixline" >
			<Variant Name="Fixline" >
			</Variant>
		</Variants>
		
		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="SweptModel3D">
			<SetValue Key="CustomTransformation" Value="False"/>
		</SetDynamicProperty>

		<CustomAttribute DataType="Enumeration" Name="OcsSystem" DisplayName="KL-system" DefaultValue="S20A"
			Description="The OCS System is one of [Unknown | S25 | S20A | S20AR | S20B | S20BR | S20C1 | S20C2 | S35 | S35MS | Cariboni | TET08]." >
			<Values>
				<Value>Unknown</Value>
				<Value>S25</Value>
				<Value>S20A</Value>
				<Value>S20AR</Value>
				<Value>S20B</Value>
				<Value>S20BR</Value>
				<Value>S20C1</Value>
				<Value>S20C2</Value>
				<Value>S35</Value>
				<Value>S35MS</Value>
				<Value>Cariboni</Value>
				<Value>TET08</Value>
			</Values>
		</CustomAttribute>
		<LuaExpression Name="OcsSystem" ><Formula>_JBTEH_FIL_OcsSystem()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_FIL_OcsSystem()" 
			ReturnType="Enumeration"
			Description="Flags the attribute as 'Unknown' if the OCS system has not yet been selected. Click F4 to change selection." >
			<Constructor>Enumeration _JBTEH_FIL_OcsSystem()</Constructor>
			<Formula>
				function _JBTEH_FIL_OcsSystem()
					os = getPropertyValue("OcsSystem")
					if os == "Unknown" then
						return os,_unfinished,_info("UNFINISHED - Press F4 to select OCS System.")
					else
						return os
					end
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="Enumeration" Name="AnchoringLineMaterial" DisplayName="Fixline materiale" DefaultValue="Bz II 50/19" 
			Description="The overhead catenary system (OCS) midpoint anchoring line material [Bz II 50/19 | Bz II 70/19 | Bz II 50/19 isolert]." >
			<!-- Fixline materials: See https://trv.banenor.no/app/kg7u5e4fv/67vku51/EH-707195-000_004_002.PDF -->
			<Value>Bz II 50/19</Value>
			<Value>Bz II 50/19 isolert</Value>
			<Value>Bz II 70/19</Value>
		</CustomAttribute>
		<LuaExpression Name="AnchoringLineMaterial" ><Formula>_JBTEH_FIL_AnchoringLineMaterial()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_FIL_AnchoringLineMaterial()" ReturnType="String"
			Description="Obtains the standard anchoring line (wire) material according to OCS system." >
			<Constructor>String _JBTEH_FIL_AnchoringLineMaterial()</Constructor>
			<Formula>
				function _JBTEH_FIL_AnchoringLineMaterial()
					return NOBN_ocs_getWireMaterialTable()["awMat"]
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="code" ><Formula>_JBTEH_FIL_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_FIL_code()" ReturnType="String"
			Description="Obtains the code for the contact wire midpoint anchoring line, inherited from the associated contact wire." >
			<Constructor>String _JBTEH_FIL_code()</Constructor>
			<Formula>
				function _JBTEH_FIL_code()
					sMal = "Fixline avspenner fixpunkt"
					rMal,nMal = RC__getCollectionOfRelatedObjects(sMal)
					if nMal == 0 then
						return "UNFINISHED - Relate contact wire midpoint anchoring line with '"..sMal.."' to its midpoint anchor object."
					elseif nMal == 1 then
						mal = rMal[0]
						sCow = "Fikserer kontaktledning"
						rCow,nCow = RC__getCollectionOfRelatedObjects(sCow,mal)
						if nCow == 1 then
							return rCow[0].code,_info("Midpoint anchoring line code was deduced from its midpoint-&gt;cantilever-&gt;contact wire, related with '"..sMal.."'.")
						else
							return "UNFINISHED - Related fixpoint "..RC__identify(mal).." is missing relation '"..sCow.."' to its contact wire - cannot deduce midpoint anchoring line's code."
						end
					else
						return _error,"ERROR - Midpoint anchoring line shall relate to just one contact wire midpoint with '"..sMal.."' ("..nMal.." were found)."
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="name" ><Formula>"Fl."..code</Formula></LuaExpression>

		<!-- TODO Lage modelchecks: Check that the fixpoint actually sits at the middle of the entire contat wire (with continuations at one or both ends) -->

		<!-- 2022-02-16 TODO - it is no longer necessary to make the step size fit exactly (RC takes "the last step" for you) -->
		<!-- The Model3DSeparation is needed during sweep in order to sweep the entire length of the underlying alignment 2D length -->
		<!-- <LuaExpression Name="Model3DSeparation" IsModelCheck="false" ><Formula>RC__getNearest3DStep(1.0)</Formula></LuaExpression> -->
		<!-- <SetValue Key="Model3DOffset" Value="0.0" /> -->
		
		<InsertAlignment VariantName="Fixline" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KONTAKTLEDNINGSOPPHENG-Schematic" DefaultToTangentContinuity="false" > 
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<SetValue Key="Linetype" Value="RC-DASHED" />
			<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-FE-WIR-WIRE-GRÅ-DIAMETER-010" />
		</InsertAlignment>

	</ObjectType>



<!-- ========================================================================================================
	HIGH VOLTAGE
	GUYWIRE ALIGNMENT
 =========================================================================================================-->
	<ObjectType DataType="tElementWithAlignment" Class="RailwayAlignment" Name="JBTEH_BAR Bardun"
				Layer="JBTEH_BAR" Color="ByLayer"
				Group="Kontaktledning/Bardun og strever"
				>
		
		<RelationSpace>kl-bardun</RelationSpace>
		
		<xpp:expand select="NOBN_com_DEROGATION" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<!-- This object does not have its own Banedata code: -->
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_EH_BAR" />

		<Variants DefaultValue="Bardun" >
			<Variant Name="Bardun" >
				<SetValue Key="Material" Value="Stålwire 50mm2" />
			</Variant>
		</Variants>

		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="SweptModel3D">
				<SetValue Key="CustomTransformation" Value="True"/>
		</SetDynamicProperty>

		<SetValue Key="GlobalWidth" Value="0.020" />

		<LuaExpression Name="code" ><Formula>_JBTEH_BAR_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_BAR_code()" ReturnType="String"
			Description="Obtains the code for the OCS catenary wire guywire component, inherited from the associated contact wire, through the 'Er bardun for kontaktledning' relation." >
			<Constructor>String _JBTEH_BAR_code()</Constructor>
			<Formula>
				function _JBTEH_BAR_code()
					local t = "-B"
					local s = "Har kraftoverføringskonsoll"
					local r,n = RC__getCollectionOfRelatedObjects(s)
					if n == 0 then 
						return "UNFINISHED - No force relay console found at start of guywire alignment - cannot deduce guywire's code."
					elseif n == 1 then 
						local s1 = "Er kraftoverføringskonsoll på kl-mast"
						local r1,n1 = RC__getCollectionOfRelatedObjects(s1,r[0])
						return r1[0].code..t
					else -- Two or more mast consoles were found
						--TODO 2021-11-22: Accept 2 if they are located at each end of wire???
						return r[0].code..t, _info("WARNING - Multiple OCS pole consoles related to guywire alignment, cannot deduce guywire's code.")
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="name" ><Formula>_JBTEH_BAR_name()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_BAR_name()" ReturnType="String"
				HideFromUser="false"
				Description="Obtains the name for the OCS catenary wire guywire, derived from its code." >
			<Constructor>String _JBTEH_BAR_name()</Constructor>
			<Formula>
				function _JBTEH_BAR_name()
					return "Bar."..code
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="Enumeration" Name="OcsSystem" DisplayName="KL-system" DefaultValue="S20A"
			Description="The OCS System is one of [Unknown | S25 | S20A | S20AR | S20B | S20BR | S20C1 | S20C2 | S35 | S35MS | Cariboni | TET08]." >
			<Values>
				<Value>Unknown</Value>
				<Value>S25</Value>
				<Value>S20A</Value>
				<Value>S20AR</Value>
				<Value>S20B</Value>
				<Value>S20BR</Value>
				<Value>S20C1</Value>
				<Value>S20C2</Value>
				<Value>S35</Value>
				<Value>S35MS</Value>
				<Value>Cariboni</Value>
				<Value>TET08</Value>
			</Values>
		</CustomAttribute>
		<LuaExpression Name="OcsSystem" ><Formula>_JBTEH_KTL_OcsSystem()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTL_OcsSystem()" 
			ReturnType="Enumeration"
			Description="Flags the attribute as 'Unknown' if the OCS system has not yet been selected. Click F4 to change selection." >
			<Constructor>Enumeration _JBTEH_KTL_OcsSystem()</Constructor>
			<Formula>
				function _JBTEH_KTL_OcsSystem()
					os = getPropertyValue("OcsSystem")
					if os == "Unknown" then
						return os,_unfinished,_info("UNFINISHED - Press F4 to select OCS System.")
					else
						return os
					end
				end
			</Formula>
		</LuaFunction>

		<!-- Dimensjon på firkantstål i strevere: Se EH.800240, HUP120x120x6,3 -->
		<!-- https://trv.banenor.no/ts/Kontaktledning/Liner,_tr%C3%A5d,_ledning_og_kabel#EN_50149 -->
		<CustomAttribute DataType="Enumeration" Name="GuyWireMaterial" DisplayName="Bardun materiale" DefaultValue="Bz II 50/19" 
			Description="The overhead catenary system (OCS) guywire material [Bz II 50/19 | Bz II 70/19 | Bz II 50/19 isolert]." >
			<Value>Bz II 50/19</Value>
			<Value>Bz II 50/19 isolert</Value>
			<Value>Bz II 70/19</Value>
		</CustomAttribute>
		<LuaExpression Name="GuyWireMaterial" ><Formula>_JBTEH_BAR_GuyWireMaterial()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_BAR_GuyWireMaterial()" ReturnType="String"
			Description="Obtains the standard guywire material according to OCS system." >
			<Constructor>String _JBTEH_BAR_GuyWireMaterial()</Constructor>
			<Formula>
				function _JBTEH_BAR_GuyWireMaterial()
					return NOBN_ocs_getWireMaterialTable()["gwMat"]
				end
			</Formula>
		</LuaFunction>

		<!-- Guywire: See EH-707162. Angle should be 40-50 Decimal Degrees relative to horizon. -->
		<CustomAttribute DataType="String" ReadOnly="true" Category="Model check" Name="mc_JBTEH_BAR_GuyWireAngle" DisplayName="Bardun tegneretning" 
			Description="Checking that a guywire alignment shall start at its connection to thw wire or object it relieves, and extend to the guywire's base plate or fixation." />
		<LuaExpression Name="mc_JBTEH_BAR_GuyWireAngle" IsModelCheck="true" ><Formula>_JBTEH_BAR_chkGuyWireAngle()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_BAR_chkGuyWireAngle()" ReturnType="String"
			Description = "Checking that a guywire or spanner alignment shall start at an OCS pole's insertion point and extend to the guywire's / spanner's base plate." >
			<Constructor>String _JBTEH_BAR_chkGuyWireAngle()</Constructor>
			<Formula>
				function _JBTEH_BAR_chkGuyWireAngle()
					if true then -- 2021-03-30 TODO - XXXXXXXXXXXXXXXXXXXXXXXXXXXX code must be written--
						return "SORRY - Model check for _JBTEH_BAR_chkGuyWireAngle has not been written yet.",_warning
					end
				end
			</Formula>
		</LuaFunction> 
			
		<!-- Asks for relation to its corresponding contact wire, and derives it code from it. -->
		<PropertyPrompt Key="code" DefaultValue="Bardun" AcceptEmptyValue="false" /> 		

		<!-- RailCOMPLETE provides the '_position' reserved identifier, sampled along the alignment, to be used in e.g. getAlignmentInfo() etc. -->
	
		<LuaExpression Name="SweptModel3D_0.Roll" ><Formula>NOBN_com_getRollFromCantInterpretedAsDecimalDegrees(_position)</Formula></LuaExpression>
		
		<!-- 2022-02-16 TODO - it is no longer necessary to make the step size fit exactly (RC takes "the last step" for you) -->
		<!-- The Model3DSeparation is needed during sweep in order to sweep the entire length of the underlying alignment 2D length -->
		<!-- <LuaExpression Name="Model3DSeparation" IsModelCheck="false" ><Formula>RC__getNearest3DStep(1.0)</Formula></LuaExpression> -->
		<!-- <SetValue Key="Model3DOffset" Value="0.0" /> -->
		
		<InsertAlignment VariantName="Bardun" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KONTAKTLEDNINGSOPPHENG-Schematic" DefaultToTangentContinuity="false" > 
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-FE-WIR-WIRE-GRÅ-DIAMETER-010" />
		</InsertAlignment>

	</ObjectType>



<!-- ========================================================================================================
	HIGH VOLTAGE
	SPANNER ALIGNMENT
 =========================================================================================================-->
	<ObjectType DataType="tElementWithAlignment" Class="RailwayAlignment" Name="JBTEH_STR Strever"
				Layer="JBTEH_STR" Color="ByLayer"
				Group="Kontaktledning/Bardun og strever"
				>
		
		<RelationSpace>kl-strever</RelationSpace>
		
		<xpp:expand select="NOBN_com_DEROGATION" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<!-- This object does not have its own Banedata code: -->
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_EH_BAR" />

		<Variants DefaultValue="Strever" >
			<Variant Name="Strever" >
				<SetValue Key="Material" Value="Stålstag" />
			</Variant>
		</Variants>
		
		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="SweptModel3D">
			<SetValue Key="CustomTransformation" Value="True"/>
		</SetDynamicProperty>

		<SetValue Key="GlobalWidth" Value="0.020" />

		<!-- Dimensjon på firkantstål i strevere: Se EH.800240, HUP120x120x6,3 -->
		<!-- https://trv.banenor.no/ts/Kontaktledning/Liner,_tr%C3%A5d,_ledning_og_kabel#EN_50149 -->
		<CustomAttribute DataType="Enumeration" Name="Material" DisplayName="Strevermateriale" DefaultValue="Firkantstål HUP120x120" 
			Description="The overhead catenary system (OCS) spanner beam type." >
			<Value>Firkantstål HUP120x120</Value>
		</CustomAttribute>

		<LuaExpression Name="code" ><Formula>_JBTEH_STR_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_STR_code()" ReturnType="String"
			Description="Obtains the code for the OCS catenary wire spanner component, inherited from the associated contact wire, through the 'Er strever for kontaktledning' relation." >
			<Constructor>String _JBTEH_STR_code()</Constructor>
			<Formula>
				function _JBTEH_STR_code()
					local s = "Har kraftoverføringskonsoll"
					local r,n = RC__getCollectionOfRelatedObjects(s)
					if n == 0 then 
						return "UNFINISHED - No force relay console found at start of spanner alignment - cannot deduce spanner's code."
					elseif n == 1 then 
						local s1 = "Er kraftoverføringskonsoll på kl-mast"
						local r1,n1 = RC__getCollectionOfRelatedObjects(s1,r[0])
						return r1[0].code
					else
						-- Two or more OCS pole force relay consoles were found:
						--TODO 2021-11-22: Accept 2 if they are located at each end of guywire???
						return r1[0].code, _info("WARNING - Multiple OCS pole consoles related to spanner alignment, cannot deduce spanner's code.")
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="name" ><Formula>_JBTEH_STR_name()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_STR_name()" ReturnType="String"
				HideFromUser="false"
				Description="Obtains the name for the OCS catenary wire spanner component, derived from its code." >
			<Constructor>String _JBTEH_STR_name()</Constructor>
			<Formula>
				function _JBTEH_STR_name()
					return "Str."..code
				end
			</Formula>
		</LuaFunction>

		<!-- TODO Lage modelchecks. -->
			
		<!-- Asks for relation to its corresponding contact wire, and derives it code from it. -->
		<PropertyPrompt Key="code" DefaultValue="Strever" AcceptEmptyValue="false" /> 		

		<!-- RailCOMPLETE provides the '_position' reserved identifier, sampled along the alignment, to be used in e.g. getAlignmentInfo() etc. -->
		<LuaExpression Name="SweptModel3D_0.Roll" ><Formula>NOBN_com_getRollFromCantInterpretedAsDecimalDegrees(_position)</Formula></LuaExpression>
		
		<InsertAlignment VariantName="Strever" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-KONTAKTLEDNINGSOPPHENG-Schematic" DefaultToTangentContinuity="false" > 
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-FE-DIV-STEEL-BEAM-HUP-120-120" />
		</InsertAlignment>

	</ObjectType>



<!--========================================================================================================
	HIGH VOLTAGE
	GUY WIRE ANCHORING

	NB! Covers both guywire anchoring and spanner anchoring, as well as ready-made spanners for attachment to 
	tunnel roofs, for Ø120 suspension masts. These are the end points for guywires and spanners, these are Note
	the alignment objects themselves. They are also the attachment point for guywire / spanner.
	
	To be inserted with a guywire alignment object as 'own alignment'.
	
	Note: An OCS pole may have from 0 to 4 guywires, but never more than 2 for the same force relay console.
	Note: This is just the 2D symbol - the guywire must be created as separate alignment object.
	
	For NO-BN / Bane NOR:
	See EH-707162 Bardunering, EH-800262 / EH-800263 fotplate for bardunfeste. 
=========================================================================================================-->
	<ObjectType DataType="tOrientedElement" Class="RailwayPlacedObject" Name="JBTEH_BAF Bardunfeste"
				Layer="JBTEH_BAF" Color="ByLayer"
				Group="Kontaktledning/Forankring"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<RelationSpace>forankring</RelationSpace>

		<!-- <xpp:expand select="NOBN_xxx_DEPRECATED_MACRO___TO_BE_REMOVED" /> -->
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<!-- Alternative:  <xpp:expand select="NOBN_com_STD_TEXATTRIBUTES___VERTICAL_AND_FAR___OCS" /> -->
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___VERTICAL_AND_STACKED___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<!-- <xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" /> -->
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___WAYSIDE_GENERAL_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<!-- This object does not have its own Banedata code: -->
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_EH_BAR" />

		<Variants DefaultValue="Bardunfeste fotplate, enkel" >
			<Variant Name="Bardunfeste fotplate, enkel" >
			</Variant>
			<Variant Name="Bardunfeste fotplate, dobbel" >
			</Variant>
		</Variants>

		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="Model3D"/>
		
        <LuaExpression Name="Model3D_0.Model3DName" ><Formula>_JBTEH_BAF_Model3DName()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_BAF_Model3DName()" 
			ReturnType="String"
			Description="Obtains the Model 3D Name for this guywire anchoring base." >
			<Constructor>String _JBTEH_BAF_Model3DName()</Constructor>
			<Formula>
				function _JBTEH_BAF_Model3DName()
					--Look for mast near start of associated wire (alignment).
					tol = 0.5 --[m]
					local t
					if Variant:match("Bardunfeste fotplate, enkel") then 
						t = "NO-BN-3D-EH-BAF-BARDUNFESTE-FOTPLATE-191x374xM36"
						
					elseif Variant:match("Bardunfeste fotplate, dobbel") then
						t = "NO-BN-3D-EH-BAF-BARDUNFESTE-FOTPLATE-191x374xM36"
						
					else 
						return "Bad guywire anchoring baseplate Variant ["..Variant.."]."
					end
					return t
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="code" ><Formula>_JBTEH_BAF_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_BAF_code()" 
			ReturnType="String"
			Description="Obtains the code for this guywire anchoring object, deduced from the OCS pole at the start of its guywire alignment." >
			<Constructor>String _JBTEH_BAF_code()</Constructor>
			<Formula>
				function _JBTEH_BAF_code()
					if Alignment == nil or Alignment.RcType ~= "JBTEH_BAR Bardun" then
						return "UNFINISHED - Own alignment for guywire anchoring baseplate must be of type 'JBTEH_BAR Bardun'."
					end
					local t = "-B"
					local s = "Har kraftoverføringskonsoll"
					local r,n = RC__getCollectionOfRelatedObjects(s,Alignment)
					if n == 0 then 
						return "UNFINISHED - No force relay console found at start of guywire alignment - cannot deduce guywire's code."
					elseif n == 1 then 
						local s1 = "Er kraftoverføringskonsoll på kl-mast"
						local r1,n1 = RC__getCollectionOfRelatedObjects(s1,r[0])
						return r1[0].code..t
					else -- Two or more mast consoles were found
						return r[0].code..t, _info("WARNING - Multiple OCS pole consoles found at start of guywire alignment, cannot deduce guywire's code uniquely.")
					end
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="name" ><Formula>_JBTEH_BAF_name()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_BAF_name()" 
			ReturnType="Double"
			Description="Returns the name for this guywire anchoring baseplate object." >
			<Constructor>String _JBTEH_BAF_name()</Constructor>
			<Formula>
				function _JBTEH_BAF_name()
					return code
					--OTHER POSSIBILITY: return tostring(code):upper():match("UNFINISHED") and code or ""
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="Mileage" ><Formula>_JBTEH_BAF_Mileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_BAF_Mileage()" 
			ReturnType="Double"
			Description="Returns mileage for this guywire anchoring baseplate. Snaps to the ground-level extremity of the associated guywire alignment." >
			<Constructor>Double _JBTEH_BAF_Mileage()</Constructor>
			<Formula>
				function _JBTEH_BAF_Mileage()
					--Assume it runs from 0 (at mast) to L (at anchorage object)
					return Alignment.RcAlignment.HorizontalProfile.Length
				end
			</Formula>
		</LuaFunction>

		<!-- Guy wires' dir = down, spanner's dir = down, assuming the guywire / spanner has been drawn from mast to the force relief's foundation -->
		<LuaExpression Name="dir" ><Formula>"down"</Formula></LuaExpression>
		<LuaExpression Name="DistanceToAlignment" ><Formula>RightSided and 4e-4 or -4e-4</Formula></LuaExpression>

		<LuaExpression Name="RelativeElevation" ><Formula>_JBTEH_BAF_RelativeElevation()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_BAF_RelativeElevation()" 
			ReturnType="Double"
			Description="Returns the releative elevation for this guywire anchoring baseplate object." >
			<Constructor>Double _JBTEH_BAF_RelativeElevation()</Constructor>
			<Formula>
				function _JBTEH_BAF_RelativeElevation()
					local Pe = Alignment.RcAlignment.EndPoint
					local t = getClosestTracks(Pe.X,Pe.Y)
					local e = getAlignmentInfo(t[0].id,Pe.X,Pe.Y).Point.Z --absolute elevation
					return e - getAlignmentInfo().Point.Z --Elevation relative to own alignment's elevation here.
				end
			</Formula>
		</LuaFunction>

		<InsertPointObject VariantName="Bardunfeste fotplate, enkel" DisplayBlockName="NO-BN-2D-JBTEH_BAF-BARDUNFESTE-FOTPLATE-ENKEL-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kl-bardun</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
																				
		<InsertPointObject VariantName="Bardunfeste fotplate, dobbel" DisplayBlockName="NO-BN-2D-JBTEH_BAF-BARDUNFESTE-FOTPLATE-DOBBEL-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kl-bardun</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<SymbolDefinition AllowSymbolMove="true" DefaultBlockName="" >
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}" />	
			<BlockNameFormat JoinBy="-" >
				NO-BN-2D-JBTEH_BAF-BARDUNFESTE
				{% if Variant == 'Bardunfeste fotplate, enkel' %}FOTPLATE-ENKEL
				{% elsif Variant == 'Bardunfeste fotplate, dobbel' %}FOTPLATE-DOBBEL
				{% else %}BAD_Variant_{{Variant}}
				{% endif %}
				{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>
		
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />

		<DockPointDefinitions>
			<SnapPoints>
				<SnapPoint X="0.0" Y="0.0" TargetSpace="kl-fundament" />
			</SnapPoints>
			<SnapPoints>
				<SnapPoint X="0.0" Y="0.0" TargetSpace="tunnelfeste" />
			</SnapPoints>
		</DockPointDefinitions>

	</ObjectType>


<!--========================================================================================================
	HIGH VOLTAGE
	SPANNER ANHCORING

	NB! Covers both guywire anchoring and spanner anchoring, as well as ready-made spanners for attachment to 
	tunnel roofs, for Ø120 suspension masts. These are the end points for guywires and spanners, these are
	the alignment objects themselves.
	
	To be inserted with a spanner alignment object as its own alignment.
	
	Note: An OCS pole may have up to 2 spanners, but never more than 1 for the same force relay console.
	Note: This is just the 2D symbol - the spanner rod must be created as a separate alignment object.
	
	For NO-BN / Bane NOR:
	See EH-800257 mastefundament / EH-800258 Streverfundament / EH-800242 Strevere (deprecated?). 
=========================================================================================================-->
	<ObjectType DataType="tOrientedElement" Class="RailwayPlacedObject" Name="JBTEH_STF Streverfeste"
				Layer="JBTEH_STF" Color="ByLayer"
				Group="Kontaktledning/Forankring"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<RelationSpace>forankring</RelationSpace>

		<!-- <xpp:expand select="NOBN_xxx_DEPRECATED_MACRO___TO_BE_REMOVED" /> -->
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<xpp:expand select="NOBN_com_STD_TEXATTRIBUTES___VERTICAL_AND_FAR___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<!-- <xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" /> -->
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___WAYSIDE_GENERAL_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<!-- This object does not have its own Banedata code: -->
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_EH_BAR" />

		<Variants DefaultValue="Streverfeste fotplate (uten streveren)" >
			<Variant Name="Streverfeste fotplate (uten streveren)" >
			</Variant>
			<Variant Name="Streverfeste fotplate og strever, 2.08m fra sidekant KL-mast" >
			</Variant>
			<Variant Name="Streverfeste fotplate og strever for Ø120 hengemast for bru og tunnel" >
			</Variant>
		</Variants>

		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="Model3D"/>

        <LuaExpression Name="Model3D_0.Model3DName" ><Formula>_JBTEH_STF_Model3DName()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_STF_Model3DName()" 
			ReturnType="String"
			Description="Obtains the Model 3D Name for this spanner anchoring baseplate object, deducing its dimensions from its associated OCS pole." >
			<Constructor>String _JBTEH_STF_Model3DName()</Constructor>
			<Formula>
				function _JBTEH_STF_Model3DName()
					--Look for mast near start of associated wire alignment.
					tol = 0.5 --[m]
					local t
					if Variant == "Streverfeste fotplate (uten streveren)" then
						t = "NO-BN-3D-EH-STF-STREVERFESTE-FOTPLATE-525x350-191x374xM36"
						
					elseif Variant:match("Streverfeste fotplate og strever, 2.08m fra sidekant KL-mast") then 
						t = "NO-BN-3D-EH-STF-STREVERFESTE-FOTPLATE-MED-STREVER-FOR-BJELKEMAST-L7000-D2080-H6654"
						
					elseif Variant:match("Streverfeste fotplate og strever for Ø120 hengemast for bru og tunnel") then
						local m = getNearbyPointObjects2D(tol,"JBTEH_MAS Hengemast for bru og tunnel")
						local n = getCollectionLength(m)
						if n &gt; 0 then 
							-- Assume spanner 3D models exist in steps of 500 mm range 500..2500.
							-- Let default spanner choice be half the height of the supported OCS suspension mast.
							local h = (math.floor((250 + (OcsMastHeight/2)) / 500)) * 500
							h = (h &lt; 500) and 500 or h -- At least 500
							h = (h &gt; 2500) and 2500 or h -- No more than 2500
							t = "NO-BN-3D-EH-STF-STREVERFESTE-FOTPLATE-MED-STREVER-FOR-BRU-OG-TUNNEL-Ø120-H"..string.format("%03d",h)
						else
							t = "UNIFINSHED: No OCS suspension mast found near spanner, cannot deduce spanner's 3D model name."
						end

					else 
						return "Bad spanner fastening Variant ["..Variant.."]."
					end
					return t
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="code" ><Formula>_JBTEH_STF_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_STF_code()" 
			ReturnType="String"
			Description="Obtains the code for this spanner anchoring baseplate object, deduced from the OCS pole at its start." >
			<Constructor>String _JBTEH_STF_code()</Constructor>
			<Formula>
				function _JBTEH_STF_code()
					--Look for mast near start of associated wire (alignment).
					--Spanner rod / guywire alignments always start at high elevation (top of OCS pole) and extend down to the ground, where the anchoring baseplate is.
					--Both guywires and spanners require an OCS pole at the START of the wire / the rod. 
					local tol = 0.25 
					local t = "-S"
					if Alignment == nil or Alignment.RcType ~= "JBTEH_STR Strever" then
						return "UNFINISHED - Attach spanner anchoring baseplate to an alignment of type 'JBTEH_STR Strever'."
					end
					local m = getNearbyPointObjects2D(tol,"JBTEH_MAS KL-mast",Alignment.RcAlignment.StartPoint)
					local n = getCollectionLength(m)
					if n == 0 then 
						return "UNFINISHED - No OCS pole found at start of spanner alignment - cannot deduce spanner's code."
					elseif n == 1 then 
						return m[0].code..t
					else -- Two or more masts were found
						return m[0].code..t, _info("WARNING - Multiple OCS poles found at start of spanner rod alignment.")
					end
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="name" ><Formula>_JBTEH_STF_name()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_STF_name()" 
			ReturnType="String"
			Description="Returns the name for this OCS contact wire spanner fastening object." >
			<Constructor>String _JBTEH_STF_name()</Constructor>
			<Formula>
				function _JBTEH_STF_name()
					return tostring(code):upper():match("UNFINISHED") and code or ""
				end
			</Formula>
		</LuaFunction>


		<LuaExpression Name="Mileage" ><Formula>_JBTEH_STF_Mileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_STF_Mileage()" 
			ReturnType="Double"
			Description="Returns mileage for this spanner anchoring baseplate. Snaps to the ground-level extremity of the associated spanner alignment." >
			<Constructor>Double _JBTEH_STF_Mileage()</Constructor>
			<Formula>
				function _JBTEH_STF_Mileage()
					--Assume it runs from 0 (at mast) to L (at anchorage object)
					return Alignment.RcAlignment.HorizontalProfile.Length
				end
			</Formula>
		</LuaFunction>

		<!-- Guy wires' dir = down, spanner's dir = down, assuming the guywire / spanner has been drawn from mast to the force relief baseplate's foundation -->
		<LuaExpression Name="dir" ><Formula>"down"</Formula></LuaExpression>
		<LuaExpression Name="DistanceToAlignment" ><Formula>RightSided and 4e-4 or -4e-4</Formula></LuaExpression>

		<LuaExpression Name="RelativeElevation" ><Formula>_JBTEH_STF_RelativeElevation()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_STF_RelativeElevation()" 
			ReturnType="Double"
			Description="Returns the releative elevation for this OCS contact wire spanner fastening object." >
			<Constructor>Double _JBTEH_STF_RelativeElevation()</Constructor>
			<Formula>
				function _JBTEH_STF_RelativeElevation()
					tol = 0.5 --[m]
					local Pe = Alignment.RcAlignment.EndPoint
					local f = getNearbyPointObjects2D(tol,"JBTEH_FUN KL-fundament",Pe)
					local e --absolute elevation
					if getCollectionLength(f) == 0 then
						--Use nearest track's elevation when no foundation is present:
						local t = getClosestTracks(Pe.X,Pe.Y)
						e = getAlignmentInfo(t[0].id,Pe.X,Pe.Y).Point.Z
					else
						--Foundation is present:
						e = f[0].geoCoord.Z + 0.085 --Start a little above foundation
					end
					return e - getAlignmentInfo().Point.Z --Elevation relative to own alignment's elevation here.
				end
			</Formula>
		</LuaFunction>

		<InsertPointObject VariantName="Streverfeste fotplate (uten streveren)"
				DisplayBlockName="NO-BN-2D-JBTEH_STF-STREVERFESTE-FOTPLATE-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kl-strever</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<InsertPointObject VariantName="Streverfeste fotplate og strever, 2.08m fra sidekant KL-mast"
				DisplayBlockName="NO-BN-2D-JBTEH_STF-STREVERFESTE-FOTPLATE-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kl-strever</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<InsertPointObject VariantName="Streverfeste fotplate og strever for Ø120 hengemast for bru og tunnel"
				DisplayBlockName="NO-BN-2D-JBTEH_STF-STREVERFESTE-FOTPLATE-OG-STREVER-FOR-BRU-OG-TUNNEL-120-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kl-strever</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>

		<SymbolDefinition AllowSymbolMove="true" DefaultBlockName="" >
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}" />	
			<BlockNameFormat JoinBy="-" >
				NO-BN-2D-JBTEH_STF-STREVERFESTE
				{% if Variant == 'Streverfeste fotplate (uten streveren)' %}FOTPLATE
				{% elsif Variant == 'Streverfeste fotplate og strever, 2.08m fra sidekant KL-mast' %}FOTPLATE
				{% elsif Variant == 'Streverfeste fotplate og strever for Ø120 hengemast for bru og tunnel' %}FOTPLATE-OG-STREVER-FOR-BRU-OG-TUNNEL-120
				{% else %}BAD_Variant_{{Variant}}
				{% endif %}
				{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>
		
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />

		<DockPointDefinitions>
			<SnapPoints>
				<SnapPoint X="0.0" Y="0.0" TargetSpace="kl-fundament" />
			</SnapPoints>
			<SnapPoints>
				<SnapPoint X="0.0" Y="0.0" TargetSpace="tunnelfeste" />
			</SnapPoints>
		</DockPointDefinitions>

	</ObjectType>


<!--========================================================================================================
	HIGH VOLTAGE
	ANCHORING OF GUY WIRES OR WIRES / CABLES TO TUNNEL WALL
=========================================================================================================-->
	<!-- Et fast punkt på tunnelvegg - typisk til å feste en fix-line. -->
	<!-- TODO Be Bane NOR akseptere ny kategori "kontaktledningsoppheng", EH-KLO. -->
	<!-- Merk: Dette er ikke et fundament. En 'JBTEH_TUF Tunnelfeste' trenger en passende boltegruppe som gyses -->
	<!-- inn i fjell eller i en armert betongblokk mot fjell. -->
	<ObjectType DataType="tOrientedElement" Class="RailwayPlacedObject" Name="JBTEH_TUF Tunnelfeste"
				Layer="JBTEH_TUF" Color="ByLayer"
				Group="Kontaktledning/Forankring"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<RelationSpace>forankring</RelationSpace>

		<!-- <xpp:expand select="NOBN_xxx_DEPRECATED_MACRO___TO_BE_REMOVED" /> -->
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_MEDIUM_CLOSE___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___WAYSIDE_GENERAL_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_RAIL" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<!-- This object does not have its own Banedata code: -->
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_EH_BAR" />

		<Variants DefaultValue="Veggfeste for KL-avspenning i tunnel" >
			<Variant Name="Veggfeste for KL-avspenning i tunnel" >
			</Variant>
		</Variants>

		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="Model3D"/>

		<LuaExpression Name="dir" ><Formula>"both"</Formula></LuaExpression>
		<LuaExpression Name="RelativeElevation" ><Formula>6.0</Formula></LuaExpression>

		<!-- TODO Create 3D-object from EH drawing. -->
		<!-- For now, just use guywire anchoring baseplate: -->
		<SetValue Key="Model3D_0.Model3DName" Value="NO-BN-3D-EH-BAF-BARDUNFESTE-FOTPLATE-191x374xM36" />
		<SetValue Key="name" Value="KL tunnelfeste" />
		
		<!-- Use a guywire baseplate for , turn it to fit against wall and serve the incoming wire: -->
		<!-- <LuaExpression Name="Rotation3D.Z" ><Formula>dir == 'up' and 0 or 180</Formula></LuaExpression> NOT NEEDED - the Bane NOR anchoring baseplate is symmetrical -->
		<LuaExpression Name="Model3D_0.Rotation3D.Y" ><Formula>LeftSided and 90 or -90'</Formula></LuaExpression>
		
		<InsertPointObject VariantName="Veggfeste for KL-avspenning i tunnel" DisplayBlockName="NO-BN-2D-JBTEH_TUF-TUNNELFESTE-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4.0" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="0" EnableDirectionSetting="false" RotateIfRightSideOfAlignment="true" />
		</InsertPointObject>

		<SymbolDefinition AllowSymbolMove="true" DefaultBlockName="" >
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}" />	
			<BlockNameFormat JoinBy="-" >
				NO-BN-2D-JBTEH_TUF
				{% if Variant == 'Veggfeste for KL-avspenning i tunnel' %}TUNNELFESTE
				{% else %}BAD_Variant_{{Variant}}
				{% endif %}
				{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>
		
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />
		
		<!-- Snapper ikke til noe spesielt - dette er litt som et boret fundament for barduner i friluft -->
	
	</ObjectType>



<!--========================================================================================================
	HIGH VOLTAGE
	FORCE RELAY
	GUYWIRE/TENSIONING WIRE FASTENING TO OCS POLE

	Relays force from a contact wire (or messenger wire or cable) attached using a suitable bracket to
	a location somewhere around the top of that OCS-pole, towards a guywire which ends up in an anchoring
	baseplate at ground level.

	For NO-BN / Bane NOR:
	See EH-701742 Festejern for fast-, fjær- og loddavspenning på stålmaster
	TODO: See EX-XXXXXX <festejern for barduner mot KL-mast>
=========================================================================================================-->
	<ObjectType DataType="tOrientedElement" Class="RailwayPlacedObject" Name="JBTEH_KPM Kraftoverføringskonsoll på mast"
				Layer="JBTEH_KPM" Color="ByLayer"
				Group="Kontaktledning/Konsoller"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<RelationSpace>kraftoverføringskonsoll</RelationSpace>
		<!-- <AttachmentCategory Name="kraftoverføring" PassAttachmentToTarget="true" /> -->
		<!-- <AttachTo Category="kl-mast" DrawTail="false" /> -->

		<!-- <xpp:expand select="NOBN_xxx_DEPRECATED_MACRO___TO_BE_REMOVED" /> -->
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<!-- <xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_VERY_CLOSE___OCS" /> -->
		<xpp:expand select="NOBN_com_STD_TEXATTRIBUTES___VERTICAL_AND_VERY_FAR___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<!-- <xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" /> -->
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___WAYSIDE_GENERAL_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<!-- This object does not have a specific Banedata Pset. -->
		
		<Variants DefaultValue="Konsoll på mast for avspenning" >
			<Variant Name="Konsoll på mast for avspenning" >
			</Variant>
			<Variant Name="Konsoll på mast for kurvebardun" >
			</Variant>
			<Variant Name="Konsoll på mast for strever" >
			</Variant>
		</Variants>
		
		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="Model3D"/>

        <LuaExpression Name="mileage" ><Formula>_JBTEH_KPM_mileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KPM_mileage()" 
			ReturnType="String"
			Description="Returns the dir for this force relay console, deduced from its related OCS pole." >
			<Constructor>String _JBTEH_KPM_mileage()</Constructor>
			<Formula>
				function _JBTEH_KPM_mileage()
					local s = "Er kraftoverføringskonsoll på kl-mast"
					local r,n = RC__getCollectionOfRelatedObjects(s)
					if n == 0 then 
						return getPropertyValue("mileage"),
							_info("No related OCS pole, cannot adapt mileage.")
					elseif n == 1 then 
						return r[0].mileage
					else 
						-- Two or more masts were found:
						return r[0].mileage,
							_info("WARNING - Multiple OCS poles found, console uses closest pole's mileage.")
					end
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="DistanceToAlignment" ><Formula>_JBTEH_KPM_DistanceToAlignment()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KPM_DistanceToAlignment()" 
			ReturnType="String"
			Description="Returns the DistanceToAlignment for this force relay console, deduced from its related OCS pole." >
			<Constructor>String _JBTEH_KPM_DistanceToAlignment()</Constructor>
			<Formula>
				function _JBTEH_KPM_DistanceToAlignment()
					local s = "Er kraftoverføringskonsoll på kl-mast"
					local r,n = RC__getCollectionOfRelatedObjects(s)
					if n == 0 then 
						return getPropertyValue("DistanceToAlignment"),
							_info("No related OCS pole, cannot deduce DistanceToAlignment.")
					elseif n == 1 then 
						return r[0].DistanceToAlignment
					else
						-- Two or more masts were found:
						return r[0].DistanceToAlignment,
							_warning,_info("WARNING - Multiple OCS poles found, console uses closest pole's DistanceToAlignment.")
					end
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="code" ><Formula>_JBTEH_KPM_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KPM_code()" 
			ReturnType="String"
			Description="Obtains the code for this force relay console, deduced from its related OCS pole." >
			<Constructor>String _JBTEH_KPM_code()</Constructor>
			<Formula>
				function _JBTEH_KPM_code()
					local s = "Er kraftoverføringskonsoll på kl-mast"
					local r,n = RC__getCollectionOfRelatedObjects(s)
					local s1 = "Er kraftoverføringskonsoll for avspenning/kl-bardun/kl-strever"
					local r1,n1 = RC__getCollectionOfRelatedObjects(s1)
					
					if n == 0 then 
						return "UNFINISHED - Relate force relay console to its OCS pole with "..s.."."
					
					elseif n == 1 then 
						if n1 == 0 then
							return "UNFINISHED - No incoming or outgoing WTB, guywire or spanner - relate with "..s1.."."
						elseif n1 == 1 then
							return "Konsoll "..r[0].code.." : ["..r1[0].name.."]"
						else
							return "Konsoll "..r[0].code.." : ["..r1[0].name.."] &lt;-&gt; ["..r1[1].name.."]"
						end

					else
						-- Two or more OCS poles were found:
						return _warning,"WARNING - Multiple OCS poles found."
					end
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="name" ><Formula>_JBTEH_KPM_name()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KPM_name()" 
			ReturnType="String"
			Description="Returns the name for this force relay console, deduced from its related OCS pole." >
			<Constructor>String _JBTEH_KPM_name()</Constructor>
			<Formula>
				function _JBTEH_KPM_name()
					return code
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="dir" ><Formula>_JBTEH_KPM_dir()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KPM_dir()" 
			ReturnType="LaxDirection"
			Description="Returns the dir for this force relay console, deduced from its related OCS pole." >
			<Constructor>String _JBTEH_KPM_dir()</Constructor>
			<Formula>
				function _JBTEH_KPM_dir()
					local s = "Er kraftoverføringskonsoll på kl-mast"
					local r,n = RC__getCollectionOfRelatedObjects(s)
					if n == 0 then 
						return getPropertyValue("dir"),
							_info("No related OCS pole, cannot deduce 'dir'.")
					elseif n == 1 then 
						return r[0].dir
					else
						-- Two or more masts were found:
						return r[0].dir, _warning,_info("WARNING - Multiple OCS poles found.")
					end
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="Double" Name="ConsoleHeight" DisplayName="Konsollhøyde over mast innsettingspunkt" DefaultValue="7.1"
			Description="The console's height [m] above its OCS pole's insertion point." >
		</CustomAttribute>
        <LuaExpression Name="ConsoleHeight" ><Formula>_JBTEH_KPM_ConsoleHeight()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KPM_ConsoleHeight()" 
			ReturnType="Double"
			Description="Returns the force relay console's height above its associated OCS pole's insertion point elevation, deduced from its related OCS pole and its elevation relative to TOR." >
			<Constructor>Double _JBTEH_KPM_ConsoleHeight()</Constructor>
			<Formula>
				function _JBTEH_KPM_ConsoleHeight()
					local s = "Er kraftoverføringskonsoll på kl-mast"
					r,n = RC__getCollectionOfRelatedObjects(s)
					if n == 0 then
						return 0,_unfinished,_info("UNFINISHED - relate with '"..s.."'.")
					elseif n == 1 then 
						mas = r[0] --OCS pole (mast)
						return this.RelativeElevation - mas.RelativeElevation,
							_info("Console's mounting height on OCS pole "..RC__identify(mas))
					else
						-- Two or more OCS poles were found:
						return this.RelativeElevation - r[0].RelativeElevation, _warning,
							_info("WARNING - Multiple OCS poles found (we are using just the first related OCS pole).")
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="RelativeElevation" ><Formula>_JBTEH_KPM_RelativeElevation()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KPM_RelativeElevation()" 
			ReturnType="Double"
			Description="Returns the relative elevation for this force relay console, deduced from its related OCS pole." >
			<Constructor>Double _JBTEH_KPM_RelativeElevation()</Constructor>
			<Formula>
				function _JBTEH_KPM_RelativeElevation()
					s = "Er kraftoverføringskonsoll for avspenning/kl-bardun/kl-strever"
					r,n = RC__getCollectionOfRelatedObjects(s) --all visible related objects...
					wtb = r:getNearbyPointObjects2D("JBTEH_AEH Avspenning") --WTBs, sorted by proximity...
					nWtb = getCollectionLength(wtb)
					if nWtb == 0 then
						if n == 0 then
							return 0,_info("UNFINISHED - Relate with '"..s.."'.")
						else
							--The related items must be guywire(s) or strecher(s):
							return 6.5,
								_info("(estimated value) TODO: The n related items must be guywire(s) or strecher(s) - deduce from cantilever elevation on same OCS pole.")
						end
				
					elseif nWtb == 1 or nWtb == 2 then
						--The first related WTB (of max 2) is considered the leading one, determining the force relay console's elevation.
						w = wtb[0]
						if w.mileage &lt; w.Alignment.RcAlignment.HorizontalProfile.Length/2 then
							--WTB positioned at start of a tensioned wire, look for next (lifted) cantilever:
							sCnt = "Neste utligger/avspenning"
						elseif w.mileage &gt;= w.Alignment.RcAlignment.HorizontalProfile.Length/2 then
							--WTB at end of wire, look for previous (lifted) cantilever:
							sCnt = "Forrige utligger/avspenning"
						else
							--NaN, probably:
							return 0,_unfinished,
								_info("UNFINISHED - No mileage found for WTB "..RC__identify(w)..
								" - move it until it has a normal projection onto its alignment (its wire).")
						end
						cnt,nCnt = RC__getCollectionOfRelatedObjects(sCnt,w)
						if nCnt == 0 then
							return 0,_unfinished,
								_info("UNFINISHED - WTB "..RC__identify(w).." is missing a relation to its closest lifted cantilever, relate them with '"..sCnt.."'.")
						else
							--Ref Bane NOR Elkraftportalen, EH-707469 (S20) or EH-707487 (S25). 
							--Standard for weighted WTB: 0.235m  = 0.150 + 0.85 (from force relay console's mounting on 
							--the OCS pole down to the center of the pulley wheel, minus 0.85 radius of small pulley wheel).
							--Note: The standard pulley wheel has 3:1 gearing. Other gearing numbers are allowed at Bane NOR,
							--but only subject to derogation acceptance.
							if w.Variant:match("Lodd") then
								offset = 0.235
							elseif w.Variant:match("Fjær") then
								--TODO: To be verified, that spring WTB shall be mounted on the OCS pole at the same elevation as its tensioned wire:
								offset = 0.0
							elseif w.Variant:match("Fast") then
								--Applies to midpoint anchor lines, single contact wire or messenger wire, suspended cable
								offset = 0.0
							end
							wcvo = cnt[0].WireClampVerticalOffset
							return RC__round(wcvo + offset,2),
								_info("Deduced from the contact wire clamp relative elevation "..RC__round(wcvo,2).." at cantilever "..RC__identify(cnt[0])..".")
						end
				
					else --nWtb &gt; 2...
						return 0,_warning,_info("WARNING - Too many WTBs ("..nWtb..") related to this force relay console.")
					end
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="Model3D_0.Model3DName" ><Formula>_JBTEH_KPM_Model3DName()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KPM_Model3DName()" 
			ReturnType="String"
			Description="Obtains the Model 3D Name for this force relay console, deduced from its related OCS pole" >
			<Constructor>String _JBTEH_KPM_Model3DName()</Constructor>
			<Formula>
				function _JBTEH_KPM_Model3DName()
					--TODO: Model real console in various sizes depending on the type of mast it is mounted on:
					local s = "Er kraftoverføringskonsoll på kl-mast"
					local r,n = RC__getCollectionOfRelatedObjects(s)
					local a
					if n == 0 then 
						return "UNIFINSHED: No OCS pole found, cannot deduce console's 3D model name."
					else
						a = r[0].OcsMastProfile:match("[HM]EB(%d%d%d)") --'HEB220' etc: Capture three digits.
						a = a or "240" --Default size if not a HEB or MEB mast...
						if Variant == "Konsoll på mast for avspenning" then
							--TODO: Make model depend on OCS pole type and WTB type
							return "NO-BN-3D-EH-KPM-KONSOLL-PÅ-MAST-FOR-AVSPENNING"
						elseif Variant == "Konsoll på mast for kurvebardun" then
							--TODO: Make model depend on OCS pole type
							return "NO-BN-3D-EH-KPM-KONSOLL-PÅ-MAST-FOR-KURVEBARDUN"
						elseif Variant == "Konsoll på mast for strever" then 
							return "NO-BN-3D-EH-STF-STREVERFESTE-KONSOLL-400x300-FOR-HEB"..a
						else
							return "Unknown Variant ["..Variant.."]."
						end
					end
				end
			</Formula>
		</LuaFunction>

		<InsertPointObject VariantName="Konsoll på mast for avspenning" DisplayBlockName="NO-BN-2D-JBTEH_KPM-KONSOLL-PAA-MAST-FOR-AVSPENNING-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" AskForAttachment="true" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
		</InsertPointObject>
		
		<InsertPointObject VariantName="Konsoll på mast for kurvebardun" DisplayBlockName="NO-BN-2D-JBTEH_KPM-KONSOLL-PAA-MAST-FOR-BARDUN-ELLER-STREVER-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" AskForAttachment="true" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
		</InsertPointObject>
		
		<InsertPointObject VariantName="Konsoll på mast for strever" DisplayBlockName="NO-BN-2D-JBTEH_KPM-KONSOLL-PAA-MAST-FOR-BARDUN-ELLER-STREVER-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" AskForAttachment="true" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
		</InsertPointObject>
		
		<SymbolDefinition AllowSymbolMove="true" DefaultBlockName="" >
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}" />	
			<BlockNameFormat JoinBy="-" >
				NO-BN-2D-JBTEH_KPM-KONSOLL-PAA-MAST-FOR
				{% if Variant == 'Konsoll på mast for avspenning' %}AVSPENNING
				{% elsif Variant == 'Konsoll på mast for kurvebardun' %}BARDUN-ELLER-STREVER
				{% elsif Variant == 'Konsoll på mast for strever' %}BARDUN-ELLER-STREVER
				{% else %}BAD_VARIANT
				{% endif %}
				{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>
		
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />

		<DockPointDefinitions>
			<SnapPoints>
				<SnapPoint X="0.0" Y="0.0" TargetSpace="kl-mast" />
			</SnapPoints>
		</DockPointDefinitions>

	</ObjectType>



<!--========================================================================================================
	HIGH VOLTAGE
	WIRE TENSION BALANCER (WTB)
=========================================================================================================-->
	<LuaFunction Name="NOBN_ocs_getWiretTensioningDataTable()" 
		ReturnType="Table[4*Double]"
		Description="Returns a table with standard tensioning force (tf) values, indexed as follows:
		\n
		\n[cwtf] Contact wire tensioning force
		\n[mwtf] Messenger wire tensioning force
		\n[swtf] Stitch wire tensioning force
		\n[awtf] Midpoint anchor line (wire) tensioning force
		\n" >
		<Constructor>Table[4*Double] NOBN_ocs_getWiretTensioningDataTable(OcsSystem os = OcsSystem)</Constructor>
		<Formula>
			function NOBN_ocs_getWiretTensioningDataTable(os)
				os = os or OcsSystem
				local TensioningForces = {
					["Unknown"] = {cwtf=0, 		mwtf=0.0, 	swtf=0,		awtf=0 },
					["S25"]		= {cwtf=15,		mwtf=15,	swtf=2.8, 	awtf=10},
					["S20A"]	= {cwtf=10, 	mwtf=10,	swtf=2.3,	awtf=10},
					["S20AR"]	= {cwtf=7.06,	mwtf=7.06,	swtf=2.3, 	awtf=10},
					["S20B"]	= {cwtf=10,		mwtf=10,	swtf=0, 	awtf=10},
					["S20BR"]	= {cwtf=7.06,	mwtf=7.06,	swtf=0, 	awtf=10},
					["S20C1"]	= {cwtf=13,		mwtf=13,	swtf=2.3, 	awtf=10},
					["S20C2"]	= {cwtf=13,		mwtf=13,	swtf=2.3, 	awtf=10},
					["S35"]		= {cwtf=7.06,	mwtf=7.06,	swtf=0, 	awtf=10},
					["S35MS"]	= {cwtf=7.06,	mwtf=7.06,	swtf=0, 	awtf=10},
					["Cariboni"]= {cwtf=13,		mwtf=13,	swtf=0, 	awtf=13},
					["TET08"]	= {cwtf=13,		mwtf=13,	swtf=0, 	awtf=13}
				}
				if TensioningForces[os] then
					return TensioningForces[os]
				else
					--A table with the expected four indices is returned, but with zero values:
					return TensioningForces["Unknown"],_warning, _info("Unknown OCS System for wire tensioning balancer ["..os.."]. ")
				end
			end 
		</Formula>
	</LuaFunction>

	<ObjectType DataType="tOrientedElement" Class="RailwayPlacedObject" Name="JBTEH_AEH Avspenning"
				Layer="JBTEH_AEH" Color="ByLayer"
				Group="Kontaktledning/Avspenning"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<RelationSpace>avspenning</RelationSpace>

		<!-- <xpp:expand select="NOBN_xxx_DEPRECATED_MACRO___TO_BE_REMOVED" /> -->
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_MEDIUM_CLOSE___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___WAYSIDE_GENERAL_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_EH_AEH" />

		<Variants DefaultValue="Loddavspenning, dobbel" >
			<Variant Name="Fastavspenning, enkel" />
			<Variant Name="Fastavspenning, dobbel" />
			<Variant Name="Loddavspenning, enkel" />
			<Variant Name="Loddavspenning, dobbel" />
			<Variant Name="Fjæravspenning, enkel" />
			<Variant Name="Fjæravspenning, dobbel" />
		</Variants>
		
		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="Model3D"/>
		
		<!-- Text attribute positions are stated in ACS for the 1:1 drawing scale: -->
		<TextPositionLuaExpression Name="OBJEKTNAVN" ><Formula>RC__getTextAttributePositionWcsFromAcs(1,dir == "up" and 16 or -16)</Formula></TextPositionLuaExpression>
		<TextPositionLuaExpression Name="STREKKRAFT" ><Formula>RC__getTextAttributePositionWcsFromAcs(3,dir == "up" and 16 or -16)</Formula></TextPositionLuaExpression>
		<TextPositionLuaExpression Name="OBJEKTID" ><Formula>RC__getTextAttributePositionWcsFromAcs(5,dir == "up" and 16 or -16)</Formula></TextPositionLuaExpression>
		<TextPositionLuaExpression Name="OBJEKTBESKRIVELSE" ><Formula>RC__getTextAttributePositionWcsFromAcs(7,dir == "up" and 16 or -16)</Formula></TextPositionLuaExpression>

        <LuaExpression Name="DistanceToAlignment" ><Formula>RightSided and 4e-4 or -4e-4</Formula></LuaExpression>

        <LuaExpression Name="dir" ><Formula>_JBTEH_AEH_dir()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_AEH_dir()" 
			ReturnType="String"
			Description="Obtains the 'dir' for this OCS tensioning device, related to its alignment's direction." >
			<Constructor>String _JBTEH_AEH_dir()</Constructor>
			<Formula>
				function _JBTEH_AEH_dir()
					if Alignment == nil then
						return "unknown", _info("UNFINISHED: Own Alignment (contact wire) undefined for OCS tensioning device.")
					else
						return RC__getDistance2D(Alignment.RcAlignment.StartPoint) &lt; RC__getDistance2D(Alignment.RcAlignment.EndPoint) and "up" or "down"
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="code" ><Formula>_JBTEH_AEH_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_AEH_code()" 
			ReturnType="String"
			Description="Obtains the 'code' for this OCS tensioning device, deduced from its own alignment (its contact wire or its midpoint anchoring line) and its position (start/end)." >
			<Constructor>String _JBTEH_AEH_code()</Constructor>
			<Formula>
				function _JBTEH_AEH_code()
					if OcsSystem == "Unknown" then 
						return _warning, "UNFINISHED: Unknown Contact Wire System - make selection."
					else
						if Alignment then
							if mileage &lt; Alignment.RcAlignment.HorizontalProfile.Length/2 then
								return Alignment.code.."-start"
							else
								return Alignment.code.."-end"
							end
						else
							return _warning, "UNFINISHED: WTB must have a catenary wire object as own alignment."
						end
					end
				end
			</Formula>
		</LuaFunction>
	
		<LuaExpression Name="name" ><Formula>_JBTEH_AEH_name()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_AEH_name()" 
			ReturnType="String"
			Description="Obtains the 'name' for this OCS tensioning device, deduced from its own alignment (its contact wire)." >
			<Constructor>String _JBTEH_AEH_name()</Constructor>
			<Formula>
				function _JBTEH_AEH_name()
					if     Variant:match("Fjær") then return Alignment.name .. " - [FJ]"
					elseif Variant:match("Fast") then return Alignment.name .. " - [F]"
					elseif Variant:match("Lodd") then return Alignment.name .. " - [L]"
					else return "Bad tensioning device variant ["..Variant.."].",_warning
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="Mileage" ><Formula>_JBTEH_AEH_Mileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_AEH_Mileage()" 
			ReturnType="Double"
			Description="Returns mileage for this wire tension balancer. Snaps to the extremity of its associated wire alignment." >
			<Constructor>Double _JBTEH_AEH_Mileage()</Constructor>
			<Formula>
				function _JBTEH_AEH_Mileage()
					--Assume it runs from 0 (at mast or continuation) to L (at mast or continuation)
					ai = getAlignmentInfo() --Own alignment is a contact wire object type
					if RC__isNan(ai.RelativePosition) then
						return nil, _info("Position not found - move object inside the extent of its own alignment.")
					end
					return ai.RelativePosition &lt; (Alignment.RcAlignment.HorizontalProfile.Length - ai.RelativePosition) and Alignment.RcAlignment.StartMileage or Alignment.RcAlignment.EndMileage
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="RelativeElevation" ><Formula>_JBTEH_AEH_RelativeElevation()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_AEH_RelativeElevation()" 
			ReturnType="String"
			Description="Obtains the relative elevation above the wire that will be tensioned. Fixed WTBs and spring WTBs are located at the same zero relative elevation (same height). Weighted WTBs will vary with design. The default Bane NOR weighted WTB has its force relay console insertion point located at 0.235 m above its wire. If the WTB is tensioning two wires (a double WTB), then the wires' default separation is 0.70 m. The reference elevation is the elevation of the contact wire - the messenger wire will be deduced from surrounding object's parameters." >
			<Constructor>String _JBTEH_AEH_RelativeElevation()</Constructor>
			<Formula>
				function _JBTEH_AEH_RelativeElevation()
					if OcsSystem == "Unknown" then return 0,_info("?/? kN (UNFINISHED - unknown OcsSystem).") end
					if Variant == "Fjæravspenning, enkel" or Variant == "Fjæravspenning, dobbel" or Variant == "Fastavspenning, enkel" or Variant == "Fastavspenning, dobbel" then
						return 0
					elseif Variant == "Loddavspenning, enkel" or Variant == "Loddavspenning, dobbel" then
						--Compute the default Bane NOR force relay console's insertion point on OCS pole for weighted WTB, relative to its (main) wire:
						--See standard mechanical solution as per Bane NOR drawing EH-707469 (S20) or EH-707487 (S25):
						--Force attack is 0.235 = 0.150 + 0.085 above the wire, which enters at the lower side of the small pulley wheel.
						--If two wires are tensioned, then their standard vertical separation is 0.70 m.
						--An alternative is 0.065 = 0.150 - 0.085 (wire entering above pulley wheel) - but the corresponding Bane NOR drawing 
						--number E7254 (EH-707254) hasn't been updated since 1995, so it is probably not relevant anymore.
						return 0.235
					end
					return _info("Bad tensioning device variant ["..Variant.."].")
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="Enumeration" Name="OcsSystem" DisplayName="KL-system" DefaultValue="S20A"
			Description="The OCS System is one of [Unknown | S25 | S20A | S20AR | S20B | S20BR | S20C1 | S20C2 | S35 | S35MS | Cariboni | TET08]." >
			<Values>
				<Value>Unknown</Value>
				<Value>S25</Value>
				<Value>S20A</Value>
				<Value>S20AR</Value>
				<Value>S20B</Value>
				<Value>S20BR</Value>
				<Value>S20C1</Value>
				<Value>S20C2</Value>
				<Value>S35</Value>
				<Value>S35MS</Value>
				<Value>Cariboni</Value>
				<Value>TET08</Value>
			</Values>
		</CustomAttribute>
		<LuaExpression Name="OcsSystem" ><Formula>_JBTEH_AEH_OcsSystem()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_AEH_OcsSystem()" 
			ReturnType="Enumeration"
			Description="Flags the attribute as 'Unknown' if the OCS system has not yet been selected. Click F4 to change selection." >
			<Constructor>Enumeration _JBTEH_AEH_OcsSystem()</Constructor>
			<Formula>
				function _JBTEH_AEH_OcsSystem()
					os = getPropertyValue("OcsSystem")
					if os == "Unknown" then
						return os,_unfinished,_info("UNFINISHED - Press F4 to select OCS System.")
					else
						return os
					end
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="String" Name="PrimaryTensioningForce" DisplayName="Primær strekkraft"
			Description="The contact wire (or midpoint anchor line) tensioning force [kN]." />
		<LuaExpression Name="PrimaryTensioningForce" ><Formula>_JBTEH_AEH_PrimaryTensioningForce(OcsSystem)</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_AEH_PrimaryTensioningForce()" 
			ReturnType="String"
			Description="Obtains the primary tensioning force for this OCS tensioning device (contact wire t.f. or midpoint anchor line t.f.)." >
			<Constructor>String _JBTEH_AEH_PrimaryTensioningForce()</Constructor>
			<Formula>
				function _JBTEH_AEH_PrimaryTensioningForce()
					if Variant == "Fastavspenning, enkel" then
						--Assume that this is a midpoint anchor wire (though it MIGHT be a single, short cw in a tunnel where you would split the WTB into two wall mounts):
						return NOBN_ocs_getWiretTensioningDataTable(OcsSystem).awtf
					else
						--Assume that this is the contact wire:
						return NOBN_ocs_getWiretTensioningDataTable(OcsSystem).cwtf
					end
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="String" Name="SecondaryTensioningForce" DisplayName="Sekundær strekkraft"
			Description="The messenger wire tensioning force [kN]." />
		<LuaExpression Name="SecondaryTensioningForce" ><Formula>_JBTEH_AEH_SecondaryTensioningForce(OcsSystem)</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_AEH_SecondaryTensioningForce()" 
			ReturnType="String"
			Description="Obtains the secondary tensioning force for this OCS tensioning device (messenger wire t.f., if present)." >
			<Constructor>String _JBTEH_AEH_SecondaryTensioningForce()</Constructor>
			<Formula>
				function _JBTEH_AEH_SecondaryTensioningForce()
					if Variant == "Fastavspenning, enkel" or Variant == "Loddavspenning, enkel" or Variant == "Færavspenning, enkel" then
						return 0,_info("No messenger wire present with "..Variant..".")
					else
						--Assume that this is a messenger wire:
						return NOBN_ocs_getWiretTensioningDataTable(OcsSystem).mwtf
					end
				end
			</Formula>
		</LuaFunction>

		<CustomAttribute DataType="String" Name="TensioningForceDisplay" DisplayName="Strekkraft visning" DefaultValue="" 
			Description="The tensioning force Value, as shown close to the tensioning device [kN]." />
		<TextAttribute Annotative="true" BindingProperty="TensioningForceDisplay" CadAttributeTag="STREKKRAFT" 
			X="0" Y="20" 
			Layer="JBTEH@STREKKRAFT" Justify="MiddleCenter" Height="0.9" Width="0" Color="ByBlock"
			Rotation="0" ObliqueAngle="0" Constant="false" Invisible="false" Lock="false" MText="false" />  
		<LuaExpression Name="TensioningForceDisplay" ><Formula>_JBTEH_AEH_TensioningForceDisplay(OcsSystem)</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_AEH_TensioningForceDisplay()" 
			ReturnType="String"
			Description="Obtains the tensioning forces for this OCS tensioning device, depending on the selected OcsSystem." >
			<Constructor>String _JBTEH_AEH_TensioningForceDisplay()</Constructor>
			<Formula>
				function _JBTEH_AEH_TensioningForceDisplay()
					if OcsSystem == "Unknown" then
						return "?/? kN",_info("OcsSystem has not been selected")
					end
					tf = NOBN_ocs_getWiretTensioningDataTable(OcsSystem)
					if Variant == "Fastavspenning, enkel" then
						 --Assume that this is an anchoring wire, for the midpoint anchor (but it MIGHT be a CW or MW in a narrow tunnel):
						return tf.awtf.." kN (fix)",_info("Midpoint anchor wire")
					else
						if Variant == "Fjæravspenning, dobbel"
						or Variant == "Loddavspenning, dobbel"
						or Variant == "Fastavspenning, dobbel"
						then
							return tf.cwtf.."/"..tf.mwtf.." kN",_info("Contact wire / messenger wire")
						elseif Variant == "Fjæravspenning, enkel"
						or Variant == "Loddavspenning, enkel"
						then
							return tf.cwtf.." kN",_info("Contact wire")
						end
					end
					return _info("Bad tensioning device variant ["..Variant.."].")
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="Model3D_0.Model3DNameName" ><Formula>_JBTEH_AEH_Model3DName()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_AEH_Model3DName()" 
			ReturnType="String"
			Description="Obtains the 3D Model Name for this OCS tensioning device." >
			<Constructor>String _JBTEH_AEH_Model3DName()</Constructor>
			<Formula>
				function _JBTEH_AEH_Model3DName()
					t = "NO-BN-3D-EH-AEH-AVSPENNING"
					if Variant:match("Fjær") then
						t = t.."-FJÆR"
					elseif Variant:match("Fast") then
						t = t.."-FAST"
					elseif Variant:match("Lodd") then
						t = t.."-LODD"
					end
					if Variant:match("enkel") then
						return t.."-ENKEL"
					elseif Variant:match("dobbel") then
						return t.."-DOBBEL"
					end
					return _info("Bad tensioning device variant ["..Variant.."].")
				end
	--TODO: Include console for fastening to mast as well:
	--elseif Variant == "Konsoll på mast for avspenning" then return "NO-BN-3D-EH-KPM-KONSOLL-FOR-FAST-FJÆR-OG-LODDAVSPENNING-PÅ-STÅLMAST-E2103-I"
			</Formula>
		</LuaFunction>
		
		<!-- Note: They snap to the contact wire or midpoint anchor line alignment object even if they might actually work on the messenger wire inn the case of a tunnel installation where the "loddsats" are separated -->
		<InsertPointObject VariantName="Fastavspenning, enkel" DisplayBlockName="NO-BN-2D-JBTEH_AEH-AVSPENNING-FAST-ENKEL-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kontaktledning</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>fixline</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>høyspentledning</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<InsertPointObject VariantName="Fastavspenning, dobbel" DisplayBlockName="NO-BN-2D-JBTEH_AEH-AVSPENNING-FAST-DOBBEL-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kontaktledning</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>fixline</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>høyspentledning</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<InsertPointObject VariantName="Loddavspenning, enkel" DisplayBlockName="NO-BN-2D-JBTEH_AEH-AVSPENNING-LODD-ENKEL-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kontaktledning</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>fixline</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>høyspentledning</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<InsertPointObject VariantName="Loddavspenning, dobbel" DisplayBlockName="NO-BN-2D-JBTEH_AEH-AVSPENNING-LODD-DOBBEL-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kontaktledning</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>fixline</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>høyspentledning</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<InsertPointObject VariantName="Fjæravspenning, enkel" DisplayBlockName="NO-BN-2D-JBTEH_AEH-AVSPENNING-FJAER-ENKEL-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kontaktledning</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>fixline</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>høyspentledning</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<InsertPointObject VariantName="Fjæravspenning, dobbel" DisplayBlockName="NO-BN-2D-JBTEH_AEH-AVSPENNING-FJAER-DOBBEL-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kontaktledning</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>fixline</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>høyspentledning</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="0" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<SymbolDefinition AllowSymbolMove="true" DefaultBlockName="NO-BN-2D-JBTEH_AEH-AVSPENNING-LODD-DOBBEL-{{SymbolMode}}" >
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}" />	
			<BlockNameFormat JoinBy="-" >
				NO-BN-2D-JBTEH_AEH
				AVSPENNING
				{% if    Variant == 'Fastavspenning, enkel' %}FAST-ENKEL
				{% elsif Variant == 'Fastavspenning, dobbel' %}FAST-DOBBEL
				{% elsif Variant == 'Loddavspenning, enkel' %}LODD-ENKEL
				{% elsif Variant == 'Loddavspenning, dobbel' %}LODD-DOBBEL
				{% elsif Variant == 'Fjæravspenning, enkel' %}FJAER-ENKEL
				{% elsif Variant == 'Fjæravspenning, dobbel' %}FJAER-DOBBEL
				{% else %}BAD_Variant_{{Variant}}
				{% endif %}
				{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>
		
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />

		<!-- TODO: Kan avspenningene være snappepunkt for ALIGNMENT av type Wire? -->
		<!-- <DockPointDefinitions> -->
			<!-- <SnapPoints> -->
				<!-- <SnapPoint X="0.0" Y="0.0" TargetSpace="bardunfeste" /> -->
				<!-- <SnapPoint X="0.0" Y="0.0" TargetSpace="Streverfeste fotplate (uten streveren)" /> -->
			<!-- </SnapPoints> -->
		<!-- </DockPointDefinitions> -->

	</ObjectType>



<!--========================================================================================================
	HIGH VOLTAGE
	MIDPOINT ANCHOR - 'FIXPOINT'
=========================================================================================================-->
	<ObjectType DataType="tOrientedElement" Class="RailwayPlacedObject" Name="JBTEH_FIX Fixpunkt"
				Layer="JBTEH_AEH" Color="ByLayer"
				Group="Kontaktledning/Avspenning"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<RelationSpace>fixpunkt</RelationSpace>

		<!-- <xpp:expand select="NOBN_xxx_DEPRECATED_MACRO___TO_BE_REMOVED" /> -->
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_MEDIUM_CLOSE___OCS" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___WAYSIDE_GENERAL_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<!-- (No specific Pset is available from Bane NOR for Fixpoint) -->

		<Variants DefaultValue="Fixpunkt" >
			<Variant Name="Fixpunkt" />
		</Variants>
		
		<LuaExpression Name="code" ><Formula>_JBTEH_FIX_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_FIX_code()" 
			ReturnType="String"
			Description="Obtains the 'code' for this fixpoint, deduced from its own alignment (its contact wire)." >
			<Constructor>String _JBTEH_FIX_code()</Constructor>
			<Formula>
				function _JBTEH_FIX_code()
					sCnt = "Låser utligger"
					rCnt,nCnt = RC__getCollectionOfRelatedObjects(sCnt)
					if nCnt == 0 then
						return _unfinished,"UNFINISHED - Relate midpoint anchor to its cantilever with '"..sCnt.."'."
					elseif nCnt == 1 then
						cnt = rCnt[0]
						sCow = "Fikserer kontaktledning"
						rCow,nCow = RC__getCollectionOfRelatedObjects(sCow)
						if nCow == 0 then
							return _unfinished,"UNFINISHED - Relate midpoint anchor to its contact wire with '" ..sCow.."'."
						elseif nCow == 1 then
							cow = rCow[0]
							return cow.code,_info("Code was deduced from related contact wire "..RC__identify(cow)..".")
						else
							return _error,"ERROR - Midpoint anchor is related to more than one visible contact wire."
						end
					else
						return _error,"ERROR - Midpoint anchor is related to more than one visible cantilever."
					end
				end
			</Formula>
		</LuaFunction>
	
		<LuaExpression Name="name" ><Formula>_JBTEH_FIX_name()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_FIX_name()" 
			ReturnType="String"
			Description="Obtains the 'name' for this fixpoint, obtained from its code." >
			<Constructor>String _JBTEH_FIX_name()</Constructor>
			<Formula>
				function _JBTEH_FIX_name()
					return "L"..code .. " - [FIX]"
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="ReferenceMileage" ><Formula>_JBTEH_FIX_ReferenceMileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_FIX_ReferenceMileage()" 
			ReturnType="String"
			Description="Obtains the reference mileage value for this fixpoint, obtained from its related cantilever. NB! This function assumes that the contact wire has a defined relationship to the local ReferenceAlignment, use RC-AlignmentManager to define this." >
			<Constructor>String _JBTEH_FIX_ReferenceMileage()</Constructor>
			<Formula>
				function _JBTEH_FIX_ReferenceMileage()
					s = "Låser utligger"
					r,n = RC__getCollectionOfRelatedObjects(s)
					if n == 0 then
						return getPropertyValue("ReferenceMileage"),_warning,_info("UNFINISHED - Relate fixpoint to its cantilever with '"..s.."'.")
					elseif n == 1 then
						return r[0].ReferenceMileage, _info("UNFINISHED - Relate fixpoint to its cantilever with '"..s.."'.")
					else
						return getPropertyValue("ReferenceMileage"),_error,_info("ERROR - Fixpoint should fix just one cantilever (per construction phase).")
					end
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="DistanceToAlignment" ><Formula>_JBTEH_FIX_DistanceToAlignment()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_FIX_DistanceToAlignment()" 
			ReturnType="String"
			Description="Obtains the DistanceToAlignment for this midpoint anchor, deduced from its cantilever." >
			<Constructor>String _JBTEH_FIX_DistanceToAlignment()</Constructor>
			<Formula>
				function _JBTEH_FIX_DistanceToAlignment()
					sCnt = "Låser utligger"
					rCnt,nCnt = RC__getCollectionOfRelatedObjects(sCnt)
					if nCnt == 0 then
						return _unfinished,"UNFINISHED - Relate midpoint anchor to its cantilever with '"..sCnt.."'."
					elseif nCnt == 1 then
						cnt = rCnt[0]
						return cnt.Stagger,_info("Distance to alignment was copied from the stagger of related cantilever "..RC__identify(cnt)..".")
					else
						return _error,"ERROR - Midpoint anchor has zero or more than one related contact wire."
					end
				end
			</Formula>
		</LuaFunction>

        <LuaExpression Name="dir" ><Formula>"both"</Formula></LuaExpression>

		<!-- Model check: That FIX point is as close to the CW midpoint as possible and that is actually needed: -->
						<!-- if Variant:lower():match("fix") then -->
							<!-- local RelationName = "Avspenner kontaktledning" -->
							<!-- local r,n = RC__getCollectionOfRelatedObjects(RelationName) -->
							<!-- if n == 0 then  -->
								<!-- return "UNFINISHED - Relate fixpoint tensioning device with its catenary wire alignments with '"..RelationName.."'." -->
							<!-- else -->
								<!-- return r[0].code -->
							<!-- end -->
						<!-- else -->

		
		<!-- TODO: Insert 3D alignment generation to draw the Z wires from fixed cantilever's fix line wire clamp to the contact wire to both sides of the cantilever. -->
		
		<InsertPointObject VariantName="Fixpunkt" DisplayBlockName="NO-BN-2D-JBTEH_AEH-AVSPENNING-FIXPUNKT-{{SymbolMode}}" 
				DefaultSnapMode="Point" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<SymbolDefinition AllowSymbolMove="true" DefaultBlockName="NO-BN-2D-JBTEH_AEH-AVSPENNING-FIXPUNKT-{{SymbolMode}}" >
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}" />	
		</SymbolDefinition>
		
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />

	</ObjectType>



<!--========================================================================================================
	OcsWireSystem
	OCS CONDUCTOR ALIGNMENT CONTINUATIONS
	Objects that allows algorithms to graph-search from the end of one alignment and onwards in the next.
=========================================================================================================-->
	<!-- NB: 'EH_LEF' (Sporfortsettelser) er p.t. ikke en gyldig Banedata kode, men en vi 'fant på selv'. -->
	<ObjectType DataType="RailCOMPLETEContinuation" Class="RailwayPlacedObject" Name="JBTEH_LEF Ledningfortsettelse"
				Layer="JBTEH_LEF" Color="ByLayer"
				Group="Kontaktledning/Forbindelser"
				>
				
		<RelationSpace>ledningsfortsettelse</RelationSpace>

		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />		
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="NOBN_ocs_STD_LUAEXPRESSIONS___OVERHEADLINEBOUND_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		
		<!-- Model checks Continuation -->
		<xpp:expand select="NOBN_com_CHK_CONNECTION___CONTINUATION" />
		
		<!-- Psets -->
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Ledningfortsettelse" >
			<Variant Name="Ledningfortsettelse" >
			</Variant>
		</Variants>
		
		<SetValue Key="ConnectedAlignmentType" Value="JBTEH_LED Ledning" />

		<LuaExpression Name="code" ><Formula>_JBTEH_LEF_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_LEF_code()" ReturnType="String"
			Description="Returns a formated string containing the code properties '[Code1] --- [Code2]' for the two wires that meet in a wire continuation." >
			<Constructor>String _JBTEH_LEF_code()</Constructor>
			<Formula>
				function _JBTEH_LEF_code()
					local first,second
					if RcType ~= "JBTEH_LEF Ledningfortsettelse" then
						return _error, "Bad object type ["..RcType.."] - 'JBTEH_LEF Ledningfortsettelse' was expected"
					else
						first = Alignment
						if first == nil then
							return "Bad or missing alignment reference",_warning
						elseif Alignment.RcType ~= "JBTEH_LED Ledning" then
							return "Cannot connect to alignments of type '"..Alignment.RcType.."'.",_warning
						end
						second = TargetAlignment
						if second == nil then
							return "Bad or missing continuing alignment reference",_warning
						elseif TargetAlignment.RcType ~= "JBTEH_LED Ledning" then
							return "Cannot connect to alignments of type '"..Alignment.RcType.."'.",_warning
						end
						if first.id == second.id then
							return _error, "Own alignment and continuing alignment cannot be the same ["..first.Code.."]"
						end
						return "["..first.Code.."] ==> ["..second.Code.."]"
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="name" ><Formula>code</Formula></LuaExpression>
					
		<LuaExpression Name="Mileage" ><Formula>_JBTEH_LEF_mileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_LEF_mileage()" ReturnType="Double"
				Description="Obtains the mileage from its alignment." >
			<Constructor>Double _JBTEH_LEF_mileage()</Constructor>
			<Formula>
				function _JBTEH_LEF_mileage()
					ai = getAlignmentInfo()
					if RC__isNan(ai.RelativePosition) then return nil, _info("Position not found.") end
					return ai.RelativePosition &lt; (Alignment.RcAlignment.HorizontalProfile.Length - ai.RelativePosition)
							and Alignment.RcAlignment.StartMileage or Alignment.RcAlignment.EndMileage
				end
			</Formula>
		</LuaFunction>
						
		<LuaExpression Name="TargetAlignment" ><Formula>_JBTEH_LEF_TargetAlignment()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_LEF_TargetAlignment()" ReturnType="Double"
				Description="Obtains the target alignment, as long as its snaps to own alignment close to this continuation object." >
			<Constructor>Double _JBTEH_LEF_TargetAlignment()</Constructor>
			<Formula>
				function _JBTEH_LEF_TargetAlignment()
					return getClosestAlignments(Alignment.RcType):filter(function (x) return x.id ~= Alignment.id end)[0]
				end
			</Formula>
		</LuaFunction>
						
		<InsertPointObject VariantName="Ledningfortsettelse" DisplayBlockName="NO-BN-2D-JBTEH_LEF-LEDNINGFORTSETTELSE-0-0-{{SymbolMode}}" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>høyspentledning</OwnAlignmentTargetSpace>
		</InsertPointObject>
				
		<SymbolDefinition DefaultBlockName="" AllowSymbolMove="false" Layer="JBTEH$KFO"
				Color="ByBlock" LineType="ByBlock" LineWeight="ByBlock" Transparency="ByBlock" 
			>
			<Rotation Add180DegreesIfDirIsDown="true" />
			<BlockNameFormat JoinBy="-" >
				NO-BN-2D-JBTEH_LEF-LEDNINGFORTSETTELSE
				{% if ExtendingFromEnd == 'True' %}
					{% if ContinuingWithBegin == 'False' %}0-1{% else %}0-0{% endif %}
				{% else %}
					{% if ContinuingWithBegin == 'False' %}0-0{% else %}1-0{% endif %}
				{% endif %}
				{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />

	</ObjectType>


<!--========================================================================================================
	OcsWireSystem
	OCS CONTACT WIRE ALIGNMENT CONTINUATIONS
	Objects that allows algorithms to graph-search from the end of one alignment and onwards in the next.
=========================================================================================================-->
	<!-- NB: 'EH_KTF' (Sporfortsettelser) er p.t. ikke en gyldig Banedata kode, men en vi 'fant på selv'. -->
	<ObjectType DataType="RailCOMPLETEContinuation" Class="RailwayPlacedObject" Name="JBTEH_KTF Kontaktledningfortsettelse"
				Layer="JBTEH_KTF" Color="ByLayer"
				Group="Kontaktledning/Forbindelser"
				>
				
		<RelationSpace>kontaktledningsfortsettelse</RelationSpace>

		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />		
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT" />
		<xpp:expand select="NOBN_com_DISCIPLINE___OCS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="NOBN_ocs_STD_LUAEXPRESSIONS___OVERHEADLINEBOUND_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		
		<!-- Model checks Continuation -->
		<xpp:expand select="NOBN_com_CHK_CONNECTION___CONTINUATION" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<Variants DefaultValue="Kontaktledningfortsettelse" >
			<Variant Name="Kontaktledningfortsettelse" >
			</Variant>
		</Variants>
		
		<SetValue Key="ConnectedAlignmentType" Value="JBTEH_KTL Kontaktledning" />

		<LuaExpression Name="code" ><Formula>_JBTEH_KTF_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTF_code()" ReturnType="String"
			Description="Returns a formated string containing the code properties '[Code1] --- [Code2]' for the two wires that meet in a wire continuation." >
			<Constructor>String _JBTEH_KTF_code()</Constructor>
			<Formula>
				function _JBTEH_KTF_code()
					local first,second
					if RcType ~= "JBTEH_KTF Kontaktledningfortsettelse" then
						return _error, "Bad object type ["..RcType.."] - 'JBTEH_KTF Kontaktledningfortsettelse' was expected"
					else
						first = Alignment
						if first == nil then
							return "Bad or missing alignment reference",_warning
						elseif Alignment.RcType ~= "JBTEH_KTL Kontaktledning" then
							return "Cannot connect to alignments of type '"..Alignment.RcType.."'.",_warning
						end
						second = TargetAlignment
						if second == nil then
							return "Bad or missing continuing alignment reference",_warning
						elseif TargetAlignment.RcType ~= "JBTEH_KTL Kontaktledning" then
							return "Cannot connect to alignments of type '"..Alignment.RcType.."'.",_warning
						end
						if first.id == second.id then
							return _error, "Own alignment and continuing alignment cannot be the same ["..first.Code.."]"
						end
						return "["..first.Code.."] ==> ["..second.Code.."]"
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="name" ><Formula>code</Formula></LuaExpression>
					
		<LuaExpression Name="Mileage" ><Formula>_JBTEH_KTF_mileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTF_mileage()" ReturnType="Double"
				Description="Obtains the mileage from its alignment." >
			<Constructor>Double _JBTEH_KTF_mileage()</Constructor>
			<Formula>
				function _JBTEH_KTF_mileage()
					ai = getAlignmentInfo()
					if RC__isNan(ai.RelativePosition) then return nil, _info("Position not found.") end
					return ai.RelativePosition &lt; (Alignment.RcAlignment.HorizontalProfile.Length - ai.RelativePosition)
							and Alignment.RcAlignment.StartMileage or Alignment.RcAlignment.EndMileage
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="Alignment" ><Formula>_JBTEH_KTF_Alignment()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTF_Alignment()" ReturnType="ObjRef"
				Description="Obtains the mileage from its alignment." >
			<Constructor>ObjRef _JBTEH_KTF_Alignment()</Constructor>
			<Formula>
				function _JBTEH_KTF_Alignment()
					return getClosestAlignments():filter(function (x) return x.RcType == "JBTEH_KTL Kontaktledning" end)[0]
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="TargetAlignment" ><Formula>_JBTEH_KTF_TargetAlignment()</Formula></LuaExpression>
		<LuaFunction Name="_JBTEH_KTF_TargetAlignment()" ReturnType="ObjRef"
				Description="Obtains the target alignment, as long as it has a start or an end close to own alignment and close to this continuation object. The continuation object is supposed to connect a contact wire alignment of any variant with a contact wire alignment of any variant, but no other alignment types." >
			<Constructor>ObjRef _JBTEH_KTF_TargetAlignment()</Constructor>
			<Formula>
				function _JBTEH_KTF_TargetAlignment()
					tol = 1 --[m]
					ta = getClosestAlignments("JBTEH_KTL Kontaktledning"):filter(function (x) return x.id ~= Alignment.id end)[0]
					d1 = RC__getDistance2D(this,ta.RcAlignment.StartPoint)
					d2 = RC__getDistance2D(this,ta.RcAlignment.EndPoint)
					if math.min(d1,d2) &lt; tol then
						return ta,_info("Target alignment is the closest alignment with a start or end point within "..tol.." m from this contact wire continuation.")
					else
						return nil,_info("No contact wire target alignment found where its start or end is within tolerance "..tol.." m.")
					end
				end
			</Formula>
		</LuaFunction>
						
		<InsertPointObject VariantName="Kontaktledningfortsettelse" DisplayBlockName="NO-BN-2D-JBTEH_KTF-KONTAKTLEDNING-FORTSETTELSE-0-0-{{SymbolMode}}" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>kontaktledning</OwnAlignmentTargetSpace>
		</InsertPointObject>
				
		<!-- TODO 2022-02-22 CLFEY - provide same symbol as JBTKO_SPF, but with symbol name "JBTEH_KTF FORTSETTELSE FOR KONTAKTLEDNING" -->
		<SymbolDefinition DefaultBlockName="" AllowSymbolMove="false" Layer="JBTEH$KFO"
				Color="ByBlock" LineType="ByBlock" LineWeight="ByBlock" Transparency="ByBlock"
			>
			<Rotation Add180DegreesIfDirIsDown="true" />
			<BlockNameFormat JoinBy="-" >
				NO-BN-2D-JBTEH_KTF-KONTAKTLEDNING-FORTSETTELSE
				{% if ExtendingFromEnd == 'True' %}
					{% if ContinuingWithBegin == 'False' %}0-1{% else %}0-0{% endif %}
				{% else %}
					{% if ContinuingWithBegin == 'False' %}0-0{% else %}1-0{% endif %}
				{% endif %}
				{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />

	</ObjectType>

<!--========================================================================================================
    End of file 
=========================================================================================================-->
</xpp:bloc>
