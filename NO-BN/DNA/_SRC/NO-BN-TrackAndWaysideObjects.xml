<!--========================================================================================================

    NO-BN-TrackAndWaysideObjects.xml
	
	Include in DNA file using XPPq XML preprocessor directive <xpp:expand href="fileName.xml" />.

	(c) Railcomplete AS, Norway, 2015-2021. All rights reserved.
	
=========================================================================================================-->
<xpp:bloc>



<!--========================================================================================================
	Global Lua
=========================================================================================================-->
	<!-- (Nothing) -->


<!--========================================================================================================
	TRACK AND EMBANKMENT
	OBJECTS RELATED TO TURNOUTS
=========================================================================================================-->
	<!--TODO Modellere ulike typer tungeruller, glideskoplater, osv??  -->
	<!--TODO Modellere ulike typer skinner, sviller og skinnebefestigelser -->



<!--========================================================================================================
	TRACK AND EMBANKMENT
	LABEL
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETELabel" Class="RailwayPlacedObject" LuaName="rctype_LabelForSwitch" Name="JBTFE_DIV Etikett for sporveksel"
				Layer="JBTFE_ETIKETTER" Color="ByLayer"
				Group="Overbygning/Etiketter"
				>

		<RelationSpace>etikett</RelationSpace>
		
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT" /> 
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		
		<Variants DefaultValue="D-1-2-HRB-025-018-SPV" >
			<Variant Name="D-1-2-HLB-025-018-SPV" />
			<Variant Name="D-1-2-HRB-025-018-SPV" />
		</Variants>

		<LuaExpression Name="RelativeElevation" ><Formula>0</Formula></LuaExpression>
		<LuaExpression Name="DistanceToAlignment" ><Formula>RC__getSnapped(getPropertyValue("DistanceToAlignment"),5)</Formula></LuaExpression>
		<LuaExpression Name="ReferenceMileage" >
			<Formula>
				r = getRelatedObjects("Er etikett for anything")
				return r[0] and r[0].ReferenceMileage or getPropertyValue(ReferenceMileage)
			</Formula>
		</LuaExpression>
		<LuaExpression Name="LabelItem1" ><Formula>NOBN_trk_getSwitchLabelItem1(KmStigerMotVenstre)</Formula></LuaExpression>
		<LuaExpression Name="LabelItem2" ><Formula>NOBN_trk_getSwitchLabelItem2(KmStigerMotVenstre)</Formula></LuaExpression>
        <LuaExpression Name="LabelItem3" ><Formula>NOBN_trk_getSwitchLabelItem3()</Formula></LuaExpression>

		<InsertPointObject DisplayName="Sporveksel SS/Mid (km-retn mot høyre)" VariantName="D-1-2-HRB-025-018-SPV" DisplayBlockName="NO-BN-2D-JBTFE_ETI-ETIKETT-D-1-2-HRB-025-018-{{SymbolMode}}" >
			<JigSymbolAppearance EnableDirectionSetting="true" />
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<SetValue Key="KmStigerMotVenstre" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}" />
			</InsertPointObject>

		<InsertPointObject DisplayName="Sporveksel SS/Mid (km-retn mot venstre)" VariantName="D-1-2-HLB-025-018-SPV" DisplayBlockName="NO-BN-2D-JBTFE_ETI-ETIKETT-D-1-2-HLB-025-018-{{SymbolMode}}" >
			<JigSymbolAppearance EnableDirectionSetting="true" />
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<SetValue Key="KmStigerMotVenstre" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}" />
		</InsertPointObject>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTFE_ETI-ETIKETT-D-1-2-HRB-025-018" AllowSymbolMove="true" >
			<Rotation Add180DegreesIfDirIsDown="true" AddAngle="{% if KmStigerMotVenstre %}180{% else %}0{% endif %}" />
			<BlockNameFormat JoinBy="-" >
				NO-BN-2D-JBTFE_ETI-ETIKETT
				{% if Variant == 'D-1-2-HLB-025-018-SPV' %}D-1-2-HLB-025-018
				{% elsif Variant == 'D-1-2-HRB-025-018-SPV' %}D-1-2-HRB-025-018
				{% endif %}
				{{SymbolMode}}
			</BlockNameFormat>

			<SymbolAttribute Tag="T01" >
				<Value>{{LabelItem1}}</Value>
			</SymbolAttribute>
			<SymbolAttribute Tag="T02" >
				<Value>{{LabelItem2}}</Value>
			</SymbolAttribute>
			<SymbolAttribute Tag="T03" >
				<Value>{{LabelItem3}}</Value>
			</SymbolAttribute>
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" ></SymbolDefinition>

	</ObjectType>



<!--========================================================================================================
	TRACK AND EMBANKMENT
	RAILWAY TRACK
=========================================================================================================-->
	<ObjectType DataType="eTrack" Class="RailwayAlignment" EulynxDataType="EULYNX.rsmCommon.LinearElementWithLength" LuaName="rctype_Track" Name="JBTKO_SPO Spor"
				Layer="JBTKO_SPO" Color="ByLayer"
				Group="Overbygning/Spor"
				>
				
		<RelationSpace>spor</RelationSpace>
		
		<xpp:expand select="NOBN_com_DEROGATION" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CENTERED___TRK" />
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_SPO" />

		<!-- TODO: Sjekk sporbredder for de som ikke er 1.500 de er tatt ut av lufta av CLFEY... -->
		<AlignmentSystems DefaultSystemName="Normalspor 1435 mm" >
			<!-- <AlignmentSystem Name="Smalspor 1067 mm" -->
				<!-- CantGauge="1.130" -->
				<!-- AlignmentGauge="1.067" -->
				<!-- QuickMode3DLiftWithCant="true" -->
			<!-- /> -->
			<AlignmentSystem Name="Normalspor 1435 mm"
				CantGauge="1.500"
				AlignmentGauge="1.435"
				QuickMode3DLiftWithCant="true"
			 />
			<!-- <AlignmentSystem Name="Bredspor 1524 mm" -->
				<!-- CantGauge="1.590" -->
				<!-- AlignmentGauge="1.524" -->
				<!-- QuickMode3DLiftWithCant="true" -->
			<!-- /> -->
			<!-- <AlignmentSystem Name="Bredspor 1674 mm" -->
				<!-- CantGauge="1.740" -->
				<!-- AlignmentGauge="1.674" -->
				<!-- QuickMode3DLiftWithCant="true" -->
			<!-- /> -->
		</AlignmentSystems>
				
		<!--Kategori "spor" er et geografisk spor med alignment data.-->
		<!--TODO 2019-09-01 CLFEY Definere en ny klasse for "skjematisk spor", som kan relatere seg til et geografisk spor -->

		<CustomAttribute DataType="Enumeration" Name="InclinedRailProfile" DisplayName="Skråstilt skinneprofil" DefaultValue="1:20"
			Description="Rails are either upright or inclined 1:20 [ Opprett | 1:20 ]." >
			<Values>
				<Value DisplayName="Opprett" >OPPRETT</Value>
				<Value DisplayName="1:30" >1_30</Value>
				<Value DisplayName="1:20" >1_20</Value>
				<Value DisplayName="1:40" >1_40</Value>
				<Value DisplayName="1:60" >1_60</Value>
				<Value DisplayName="Ukjent" >Unknown</Value>
			</Values>
		</CustomAttribute>
		
		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="SweptModel3D" >
			<SetValue Key="CustomTransformation" Value="False"/>
		</SetDynamicProperty>
		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="IteratedModel3D" >
			<SetValue Key="RotationBeforeOffset" Value="True"/>
			<SetValue Key="CustomTransformation" Value="False"/>
		</SetDynamicProperty>
		
		<Variants DefaultValue="Enkle skinner og sviller" >
			<Variant Name="Enkle skinner og sviller" >
				<SetValue Key="InclinedRailProfile" Value="Unknown"/>
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-ENKEL"/>
				<SetValue Key="IteratedModel3D_1.CustomTransformation" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value="NO-BN-3D-KO-SVI-SVILLE-JBV60-BETONG-232x300x2600-ENKEL"/>
			</Variant>
			<Variant Name="Enkle skinner og sviller med enkle ledeskinner" >
				<SetValue Key="InclinedRailProfile" Value="Unknown"/>
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-MED-CC536-LEDESKINNER-ENKEL"/>
				<SetValue Key="IteratedModel3D_1.CustomTransformation" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value="NO-BN-3D-KO-SVI-SVILLE-JBV60-BETONG-232x300x2600-ENKEL"/>
			</Variant>
			<Variant Name="Kjørekanter 1435 mm" >
				<SetValue Key="InclinedRailProfile" Value="Unknown"/>
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-KJØREKANTER"/>
				<SetValue Key="IteratedModel3D_1.CustomTransformation" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="True"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value=""/>
			</Variant>
			<Variant Name="60E1 1:20 skinner og enkle sviller" >
				<SetValue Key="InclinedRailProfile" Value="1:20" />
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-60E1-1_20"/>
				<SetValue Key="IteratedModel3D_1.CustomTransformation" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value="NO-BN-3D-KO-SVI-SVILLE-JBV60-BETONG-232x300x2600-ENKEL"/>
			</Variant>
			<Variant Name="60E1 1:20 skinner og enkle sviller med 54E3 ledeskinner" >
				<SetValue Key="InclinedRailProfile" Value="1:20" />
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-60E1-1_20-MED-LEDESKINNER-54E3"/>
				<SetValue Key="IteratedModel3D_1.CustomTransformation" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value="NO-BN-3D-KO-SVI-SVILLE-JBV60-BETONG-232x300x2600-ENKEL"/>
			</Variant>
			<Variant Name="60E1 1:20 skinnestrenger uten sviller" >
				<SetValue Key="InclinedRailProfile" Value="1_20" />
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-60E1-1_20"/>
				<SetValue Key="IteratedModel3D_1.CustomTransformation" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="True"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value=""/>
			</Variant>
			<Variant Name="60E1 1:20 med 54E3 ledeskinne skinnestrenger uten sviller" >
				<SetValue Key="InclinedRailProfile" Value="1_20" />
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-60E1-1_20-MED-LEDESKINNER-54E3"/>
				<SetValue Key="IteratedModel3D_1.CustomTransformation" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="True"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value=""/>
			</Variant>
			<Variant Name="54E3 ledeskinne skinnestrenger uten sviller" >
				<SetValue Key="InclinedRailProfile" Value="OPPRETT" />
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-CC536-LEDESKINNER-54E3"/>
				<SetValue Key="IteratedModel3D_1.CustomTransformation" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="True"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value=""/>
			</Variant>
			<Variant Name="54E3 1:20 skinnestrenger uten sviller" >
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-54E3-1_20"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="True"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value=""/>
			</Variant>
			<Variant Name="49E1 opprett skinnestrenger uten sviller" >
				<SetValue Key="InclinedRailProfile" Value="OPPRETT" />
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-49E1-OPPRETT"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="True"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value=""/>
			</Variant>
			<Variant Name="39 kg opprett skinnestrenger uten sviller" >
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-39KG-OPPRETT"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="True"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value=""/>
			</Variant>
			<Variant Name="60E1 1:20 skinner med JBV60 sviller - Detaljert 3D" >
				<SetValue Key="InclinedRailProfile" Value="1_20" />
				<SetValue Key="SweptModel3D_0.Frozen" Value="False"/>
				<SetValue Key="SweptModel3D_0.CustomTransformation" Value="False"/>
				<SetValue Key="SweptModel3D_0.SweepProfile" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-60E1-1_20"/>
				<SetValue Key="IteratedModel3D_1.CustomTransformation" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Frozen" Value="False"/>
				<SetValue Key="IteratedModel3D_1.Model3DName" Value="NO-BN-3D-KO-SVI-SVILLE-BETONG-JBV60-MED-FASTCLIP"/>
			</Variant>
		</Variants>
	
		<!-- TODO: Adjust GlobalWidth in schematic mode to reflect track usage (with train routes: Thicker line) -->
		<!-- Note: Plotting with Lineweight being 'Default' or 'ByLayer' or 'ByBlock' implies that GlobalWidth will be plotted. -->
		<LuaExpression Name="GlobalWidth" ><Formula>_JBTKO_SPO_GlobalWidth()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_SPO_GlobalWidth()" ReturnType="String"
			Description="Returns the CAD system Global Width (modelspace / paperspace line thickness) for railway track alignments." >
			<Constructor>_JBTKO_SPO_GlobalWidth()</Constructor>
			<Formula>
				function _JBTKO_SPO_GlobalWidth()
					if SymbolMode == 'Geographic' then
						return 0.00
					else
						--'Schematic': Railway track alignments' line weight depend on the track's usage:
						--For now, check railML attribute 'Type':
						--[ Main track | Secondary track | Connecting track | Station track | Siding track ]
						--TODO: Check on DNA's categories for railway track usage, when alignments in 2D are wrapped
						--inside a block with segmented view according to its linear event properties.
						if Type == "mainTrack" then return 0.70
						elseif Type == "secondaryTrack" then return 0.70
						elseif Type == "connectingTrack" then return 0.70
						elseif Type == "stationTrack" then return 0.70
						elseif Type == "sidingTrack" then return 0.00
						else return 0.00,_error --Shouldn't happen
						end
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="name" ><Formula>"["..code.."]"</Formula></LuaExpression>

		<!-- RailCOMPLETE provides the '_position' reserved identifier, sampled along the alignment, to be used in e.g. getAlignmentInfo() etc. -->
		<!--<LuaExpression Name="Rotation3D.X" ><Formula>NOBN_trk_getPitchFromGradient(_position)</Formula></LuaExpression>-->
		<LuaExpression Name="SweptModel3D_0.Roll" ><Formula>NOBN_trk_getRollFromCant(_position)</Formula></LuaExpression>
		<!--<LuaExpression Name="Rotation3D.Z" ><Formula>0</Formula></LuaExpression> -->
		<LuaExpression Name="SweptModel3D_0.Offset3D.Z" ><Formula>NOBN_trk_getLiftFromCant(_position)</Formula></LuaExpression>

		<!--<LuaExpression Name="Model3DSeparation" ><Formula>Sweep3D and RC__getNearest3DStep(8.0) or 0.60</Formula></LuaExpression>
		<LuaExpression Name="Model3DOffset" ><Formula>Sweep3D and 0 or Model3DSeparation/2</Formula></LuaExpression> -->

		<PropertyPrompt Key="code" DefaultValue="Spor" AcceptEmptyValue="false" />

		<InsertAlignment VariantName="Enkle skinner og sviller" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-JERNBANESPOR-Schematic" DefaultToTangentContinuity="true" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
			<IncludeSegmentType>Spiral</IncludeSegmentType>
			<SetValue Key="AlignmentSystem" Value="Normalspor 1435 mm" />
			<SetValue Key="HorizontalGeometryPointObjectTypeRef" Value="JBTKO_HOT Horisontalgeometripunkt" />
			<SetValue Key="VerticalGeometryPointObjectTypeRef" Value="JBTKO_VET Vertikalprofilpunkt" />
			<SetValue Key="HorizontalGeometrySectionObjectTypeRef" Value="JBTKO_HOS Horisontalgeometrisegment" />
			<SetValue Key="VerticalGeometrySectionObjectTypeRef" Value="JBTKO_VES Vertikalprofilsegment" />
		</InsertAlignment>

		<InsertAlignment VariantName="Enkle skinner og sviller med enkle ledeskinner" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-JERNBANESPOR-Schematic" DefaultToTangentContinuity="true" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
			<IncludeSegmentType>Spiral</IncludeSegmentType>
			<SetValue Key="AlignmentSystem" Value="Normalspor 1435 mm" />
			<SetValue Key="HorizontalGeometryPointObjectTypeRef" Value="JBTKO_HOT Horisontalgeometripunkt" />
			<SetValue Key="VerticalGeometryPointObjectTypeRef" Value="JBTKO_VET Vertikalprofilpunkt" />
			<SetValue Key="HorizontalGeometrySectionObjectTypeRef" Value="JBTKO_HOS Horisontalgeometrisegment" />
			<SetValue Key="VerticalGeometrySectionObjectTypeRef" Value="JBTKO_VES Vertikalprofilsegment" />
		</InsertAlignment>

		<InsertAlignment VariantName="Kjørekanter 1435 mm" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-JERNBANESPOR-Schematic" DefaultToTangentContinuity="true" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
			<IncludeSegmentType>Spiral</IncludeSegmentType>
			<SetValue Key="AlignmentSystem" Value="Normalspor 1435 mm" />
			<SetValue Key="HorizontalGeometryPointObjectTypeRef" Value="JBTKO_HOT Horisontalgeometripunkt" />
			<SetValue Key="VerticalGeometryPointObjectTypeRef" Value="JBTKO_VET Vertikalprofilpunkt" />
			<SetValue Key="HorizontalGeometrySectionObjectTypeRef" Value="JBTKO_HOS Horisontalgeometrisegment" />
			<SetValue Key="VerticalGeometrySectionObjectTypeRef" Value="JBTKO_VES Vertikalprofilsegment" />
		</InsertAlignment>

		<InsertAlignment VariantName="60E1 1:20 skinner og enkle sviller" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-JERNBANESPOR-Schematic" DefaultToTangentContinuity="true" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
			<IncludeSegmentType>Spiral</IncludeSegmentType>
			<SetValue Key="AlignmentSystem" Value="Normalspor 1435 mm" />
			<SetValue Key="HorizontalGeometryPointObjectTypeRef" Value="JBTKO_HOT Horisontalgeometripunkt" />
			<SetValue Key="VerticalGeometryPointObjectTypeRef" Value="JBTKO_VET Vertikalprofilpunkt" />
			<SetValue Key="HorizontalGeometrySectionObjectTypeRef" Value="JBTKO_HOS Horisontalgeometrisegment" />
			<SetValue Key="VerticalGeometrySectionObjectTypeRef" Value="JBTKO_VES Vertikalprofilsegment" />
		</InsertAlignment>

	</ObjectType>



<!--========================================================================================================
	OVERBYGNING
	SPOR
	JBTKO_KJK Kjørekant og skinneisolering
	To be used mainly for insulating rails, dealing with track circuits and return current.
	May be created through import av LandXML or DWG, converted fra 2D/3D polyline (or drawn from scratch), but
	will mainly be created as offsets with track gauge 1435/2 (0.717 m) from a track.
	Usage: 
	1) First place an isolated joint railML element ('JBTKO_SKJ Skinneskjøt') in the associated track
	2) Use RC-BreakAlignment and break rails according to the isolated joint objects in the assoc. track. 
	3) The rails will automatically search for insulation joint objects at their alignment start, and
	   will set their own code, color and linewidth to reflect the rail's insulation from that point an on,
	   the railML property 'insulatedRail' then being one of 'left', 'right', 'both' or 'none'. 
	   0.05/Red = Return current rail = either a dedicated earth rail, the other rail carrying only track
	              circuit currents (signal rail), OR both rails carry return current and signal currents,
				  the two currents being separated through suitable filters (impedances) connecting return
				  current rail(s) to return current rail(s), bridging over a double insulation.
	   0.20/Green = Track circuit (signal) rail. This rail's potential, within the operating frequency band 
				  for the track circuit, is allowed to oscillate freely. This means that the rail cannot be
				  connected directly to earth with a pure ohmic connection, but only through an impedance 
				  providing a closed circuit at 0 Hz (earthing) as well as at low frequencies (16 2/3 Hz in 
				  Norway) for return current, but acting as an open circuit (high impedance) at higher 
				  frequencies where the tack ciruit operates (typically 95 - 105 Hz in Norway).
	4) Subsequent use of the NOBN-provided earthing assistance functions will search for these rails and use 
	   their insulation status to decide where to get protective earth (when the object's EarthingMethod has 
	   been set to 'Rail'). 
	Note: 
	The 'JBTKO_KJK Kjørekant og skinneisolering' alignment type may also be used as a lateral reference for objects (as with
	the French SNCF).
=========================================================================================================-->
	<ObjectType DataType="tElementWithAlignment" Class="RailwayAlignment" Name="JBTKO_KJK Kjørekant og skinneisolering"
				Layer="JBTKO_KJK_isolasjon" Color="ByLayer"
				Group="Overbygning/Spor"
				>

		<RelationSpace>kjørekant_og_skinneisolering</RelationSpace>
		
		<xpp:expand select="NOBN_com_DEROGATION" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CENTERED___TRK" />
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_SKI" />

		<AlignmentSystems DefaultSystemName="Kjørekant og skinneisolering" >
			<AlignmentSystem Name="Kjørekant og skinneisolering"
				CantGauge="1.500"
				AlignmentGauge="1.435"
				QuickMode3DLiftWithCant="false"
		 />
		</AlignmentSystems>

		<Variants DefaultValue="Kjørekant og skinneisolering" >
			<Variant Name="Kjørekant og skinneisolering" >
			</Variant>
		</Variants>
		
		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="SweptModel3D" />

		<LuaExpression Name="SweptModel3D_0.Model3DName" >
			<Formula>
				local iso = getDownObject("JBTKO_SKJ Skinneskjøt")
				if not iso then
					--Unknown isolation state:
					return "NO-BN-SWEEP-FE-WIR-WIRE-GRÅ-DIAMETER-005"
				elseif Color:upper() == "RED" then
					--Visualize non-isolated (pure return current) rail:
					return "NO-BN-SWEEP-FE-WIR-WIRE-RØD-DIAMETER-050"
				elseif Color:upper() == "GREEN" then
					--Visualize isolated (signal) rail:
					return "NO-BN-SWEEP-FE-WIR-WIRE-GRØNN-DIAMETER-050"
				else
					--unknown color code:
					return "NO-BN-SWEEP-FE-WIR-WIRE-"..iso.color.."-DIAMETER-050"
				end
			</Formula>
		</LuaExpression>
		<!-- TODO 2020-03-22 CLFEY Include 3D formulae to place PoC line exactly in 3D-->

		<LuaExpression Name="name" ><Formula>"["..code.."]"</Formula></LuaExpression>

		<LuaExpression Name="code" ><Formula>_JBTKO_KJK_PointOfContact_code(nil)</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_KJK_PointOfContact_code()" ReturnType="String"
			Description="Obtains the code for a rail point-of-contact alignment, deduced from an insulation in the associated track at the rail's start point." >
			<Constructor>String _JBTKO_KJK_PointOfContact_code([AlignmentRef alg])</Constructor>
			<Formula>
				function _JBTKO_KJK_PointOfContact_code(alg)
					if alg == nil then alg = this end
					if alg.RcAlignment == nil then return "ERROR - Bad argument ["..RC__identify(alg).."] - has no RcAlignment." end
					local tol = 0.050 --[m]
					ps = alg.RcAlignment.StartPoint
					pe = alg.RcAlignment.EndPoint
					trackGauge = alg.AlignmentSystemAlignmentGauge
					--Get point near midpoint of rail:
					pm = getAlignmentInfo(alg.id,(ps.X+pe.X)/2.0,(ps.Y+pe.Y)/2.0).Point 
					--Note: If the rail alignment starts or ends in a connection element, then there may be several close candidates:
					ts = getClosestTracks(ps.X,ps.Y):
						filter(function (x)
								local d = getAlignmentInfo(x.id,ps.X,ps.Y).DistanceToAlignment
								return math.abs(math.abs(d) - trackGauge/2.0) &lt; tol
							end)
					n = getCollectionLength(ts)
					if n == 0  then
						return "UNFINISHED - Did not find a track associated with this rail."
					elseif n == 1  then
						ds = getAlignmentInfo(ts[0].id,ps.X,ps.Y).DistanceToAlignment
						return (ds &lt; 0 and "V. skinne " or "H. skinne ")..ts[0].code
					else
						--Switch, or continuation in a crossing - more than one
						--track lies exctly one half track cauge from start of rail.
						--Note: We cannot use start+end point, since the rail's associated 
						--track may deviate from the same track axis in both ends.
						for i=0,n-1 do
							ds = getAlignmentInfo(ts[i].id,ps.X,ps.Y).DistanceToAlignment
							dm = getAlignmentInfo(ts[i].id,pm.X,pm.Y).DistanceToAlignment
							if math.abs(ds-dm) &lt; tol then
								--We have probably found two parallel rails with suitable gauge distance:
								return (ds &lt; 0 and "V. skinne " or "H. skinne ")..ts[i].code
							end
						end
						return "UNFINISHED - Could not identify an associated track."
					end
				end
			</Formula>
		</LuaFunction>

		<!-- Not really needed - will be superseded by the code formula anyway: -->
		<PropertyPrompt Key="code" DefaultValue="Kjørekant og skinneisolering" AcceptEmptyValue="false" />

		<InsertAlignment VariantName="Kjørekant og skinneisolering" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-SKINNEPROFIL-Schematic" DefaultToTangentContinuity="true" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
			<IncludeSegmentType>Spiral</IncludeSegmentType>
			<SetValue Key="AlignmentSystem" Value="Kjørekant og skinneisolering" />
		</InsertAlignment>

	</ObjectType>



<!--========================================================================================================
	TRACK AND EMBANKMENT
	ALIGNMENT HORIZONTAL GEOMETRY CHARACTERISTIC POINT ANNOTATION
=========================================================================================================-->
	<ObjectType DataType="tDelimitedOrientedElement" Class="RailwayPlacedObject" Name="JBTKO_HOT Horisontalgeometripunkt"
				Layer="JBTKO_HOT" Color="ByLayer"
				Group="Overbygning/Karakteristiske trasépunkter"
				AttAddX="0"
				AttAddY="{% assign mitl = {{alignmentRotation | minus:ucsRotation | cosisnegative}} %}{% if mitl == 'True' %}180{% else %}0{% endif %}"
				>
				
		<RelationSpace>horisontaltrasépunkt</RelationSpace>
		
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_VERY_CLOSE___TRK" />
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_HOT" />
		
		<Variants>
			<Variant Name="(Linje start/slutt)" />
			<Variant Name="KP" />
			<Variant Name="FKP" />
			<Variant Name="OB" />
			<Variant Name="OE" />
			<Variant Name="FOB" />
			<Variant Name="FOE" />
			<Variant Name="RB" />
			<Variant Name="RE" />
			<Variant Name="REB" />
		</Variants>
		
		<LuaExpression Name="DistanceToAlignment" ><Formula>0</Formula></LuaExpression>

		<LuaExpression Name="Variant" ><Formula>_JBTKO_HOT_Variant()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_HOT_Variant()" ReturnType="String"
				Description="Analyzes local alignment geometry and cant and returns nearest vertex' Variant, i.e. type of geometric vertex/cant." >
			<Constructor>String _JBTKO_HOT_Variant()</Constructor>
			<Formula>
				function _JBTKO_HOT_Variant()
					alignmentInfo = getAlignmentInfo()
					nearest = alignmentInfo.NearestHorizontalVertex
					nearestCant = alignmentInfo.NearestCantVertex
					-- insert "RE,RB" if cant station is closest
					vertexMileage = nearest.Item1 and nearest.Item1.EndMileage or nearest.Item2.StartMileage
					if nearestCant ~= nil and math.abs(nearestCant.Mileage - alignmentInfo.Mileage) &lt; math.abs(vertexMileage - alignmentInfo.Mileage)
										and math.abs(vertexMileage - alignmentInfo.Mileage) &gt; 1 then
						if math.abs(nearestCant.GradientIn) &gt; 0 and math.abs(nearestCant.GradientOut) &gt; 0 then
							return "REB"
						elseif (nearestCant.GradientIn == nil or nearestCant.GradientIn == 0) and math.abs(nearestCant.GradientOut) &gt; 0 then
							return "RB"
						elseif (nearestCant.GradientOut == nil or nearestCant.GradientOut == 0) and math.abs(nearestCant.GradientIn) &gt; 0 then
							return "RE"
						end
					end
					if nearest == nil then return "" end
					if nearest.Item1 ~= nil and nearest.Item1.Type == "Curve" then
						if nearest.Item2 == nil or nearest.Item2.Type == "Straight" then return "KP" end
						if nearest.Item2.Type == "Curve" then return "FKP" end
					end
					if nearest.Item2 ~= nil and nearest.Item2.Type == "Curve" then
						if nearest.Item1 == nil or nearest.Item1.Type == "Straight" then return "KP" end
					end
					if nearest.Item1 ~= nil and nearest.Item1.Type == "Clothoid" then
						if nearest.Item2 ~= nil and nearest.Item2.Type == "Clothoid" then 
							if nearest.Item1.RadiusStart &lt; nearest.Item1.RadiusEnd then return "FOB" else return "FOE" end --(Note: "FOE" is not found in StyleDef, but is used)
						end
						if nearest.Item1.RadiusStart &lt; nearest.Item1.RadiusEnd then return "OB" else return "OE" end
					end
					if nearest.Item2 ~= nil and nearest.Item2.Type == "Clothoid" then 
						if nearest.Item2.RadiusEnd &lt; nearest.Item2.RadiusStart then return "OB" else return "OE" end
					end
					return "(Linje start/slutt)" --Track begin / end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="Mileage" ><Formula>_JBTKO_HOT_Mileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_HOT_Mileage()" ReturnType="Double"
				Description="Analyzes local alignment geometry and cant and returns nearest vertex' mileage." >
			<Constructor>Double _JBTKO_HOT_Mileage()</Constructor>
			<Formula>
			function _JBTKO_HOT_Mileage()
				alignmentInfo = getAlignmentInfo()
				nearest = alignmentInfo.NearestHorizontalVertex
				-- insert "RE,RB" if cant station is closest
				nearestCant = alignmentInfo.NearestCantVertex
				vertexMileage = nearest.Item1 and nearest.Item1.EndMileage or nearest.Item2.StartMileage
				if nearestCant ~= nil and math.abs(nearestCant.Mileage - alignmentInfo.Mileage) &lt; math.abs(vertexMileage - alignmentInfo.Mileage)
										and math.abs(vertexMileage - alignmentInfo.Mileage) &gt; 1 then
					return nearestCant.Mileage
				else
					if nearest.Item2 ~= nil then return nearest.Item2.StartMileage end
					if nearest.Item1 ~= nil then return nearest.Item1.EndMileage end
					return 0.0,error_info("Bad data for function _JBTKO_HOT_Mileage().")
				end
			end
			</Formula>
		</LuaFunction>
	
		<LuaExpression Name="code" ><Formula>Variant</Formula></LuaExpression>		
		<LuaExpression Name="name" ><Formula>code</Formula></LuaExpression>		

		<!-- Just one InsertPointObject is needed, the formula on Variant will change to the correct Variant for us -->
		<InsertPointObject VariantName="Horisontalt geometripunkt"
				DisplayBlockName="NO-BN-2D-JBTKO_DIV-KARAKTERISTISK-PUNKT-{{SymbolMode}}"
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>vei</OwnAlignmentTargetSpace>
			<SetValue Key="KmStigerMotVenstre" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}" />
		</InsertPointObject>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTKO_DIV-KARAKTERISTISK-PUNKT-{{SymbolMode}}" AllowSymbolMove="true" >
			<Rotation AddAngle="{% assign mitl = {{alignmentRotation | minus:ucsRotation | cosisnegative}} %}{% if mitl == 'True' %}180{% else %}0{% endif %}" />
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />

	</ObjectType>



<!--========================================================================================================
	TRACK AND EMBANKMENT
	ALIGNMENT VERTICAL PROFILE CHARACTERISTIC POINT ANNOTATION
=========================================================================================================-->
	<ObjectType DataType="tDelimitedOrientedElement" Class="RailwayPlacedObject" Name="JBTKO_VET Vertikalprofilpunkt"
				Layer="JBTKO_VET" Color="ByLayer"
				Group="Overbygning/Karakteristiske trasépunkter"
				AttAddX="0"
				AttAddY="{% assign bool = {{alignmentRotation | minus:ucsRotation | cosisnegative}} %}{% if bool == 'True' %}180{% else %}0{% endif %}"
				>
				
		<RelationSpace>vertikaltrasépunkt</RelationSpace>
		
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_VERY_CLOSE___TRK" />
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_VET" />
	
		<Variants>
			<Variant Name="_" />
			<Variant Name="HBP" />
			<Variant Name="LBP" />
			<Variant Name="SE1" />
			<Variant Name="SE2" />
			<Variant Name="(Linje start/slutt)" />
		</Variants>
		
		<LuaExpression Name="DistanceToAlignment" ><Formula>0</Formula></LuaExpression>

		<LuaExpression Name="Variant" ><Formula>_JBTKO_VET_Variant()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_VET_Variant()" ReturnType="String"
				Description="Analyzes local alignment profile and returns nearest segment delimiters or vertex' 'Variant', i.e. type of geometric vertex/cant." >
			<Constructor>String _JBTKO_VET_Variant()</Constructor>
      <Formula>
			function _JBTKO_VET_Variant()
				alignmentInfo = getAlignmentInfo()
				nearestDelimiter = alignmentInfo.NearestVerticalSegmentDelimiter
				if nearestDelimiter ~= nil then
					if nearestDelimiter.Type == "CurveStart" then return "SE1" end
					if nearestDelimiter.Type == "CurveEnd" then return "SE2" end
				end
				nearestVertex = alignmentInfo.NearestVerticalVertex
				if nearestVertex == nil then return "_" end
				if nearestVertex.Type == "Crest" then return "HBP" end
				if nearestVertex.Type == "Sag" then return "LBP" end
				if nearestVertex.Type == "None" then return "(Linje start/slutt)" end
			end
		</Formula>
		</LuaFunction>

		<CustomAttribute DataType="String" Name="PviInfo" DisplayName="PVI info" />
		<TextAttribute Annotative="true" BindingProperty="PviInfo" CadAttributeTag="PVI_INFO" X="0" Y="-4" Layer="JBTKO@OBJEKTBESKRIVELSE" Color="ByBlock" Justify="MiddleCenter" Height="0.9" MText="true" />
		<LuaExpression Name="PviInfo" ><Formula>_JBTKO_VET_PviInfo()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_VET_PviInfo()" ReturnType="String"
				Description="Returns vertical profile info for crests and sags." >
			<Constructor>String _JBTKO_VET_PviInfo()</Constructor>
		<Formula>
			function _JBTKO_VET_PviInfo()
				str = ""
				tNil			= "?"
				tR				= "R"
				tAxisStartEnd	= "(Linje start/slutt)"
				tMasl			= " m.o.h."	--meters above [mean] sea level
					
				alignmentInfo = getAlignmentInfo()					
				nearestDelimiter = alignmentInfo.NearestVerticalSegmentDelimiter
				nearestVertex = alignmentInfo.NearestVerticalVertex
					
				if nearestVertex == nil then return tNil end
				if nearestDelimiter ~= nil and nearestDelimiter.Type ~= "Pvi" then
					if nearestDelimiter.Type == "CurveStart" then str = "SE1" end
					if nearestDelimiter.Type == "CurveEnd" then str = "SE2" end
				else
					if nearestVertex.Radius &lt; 0 then str = tR..string.format("%.03f", nearestVertex.Radius) end
					if nearestVertex.Type == "None" then str = tAxisStartEnd end
				end
				return str.."\\P".."H="..string.format("%.3f", nearestDelimiter.Elevation)..tMasl
			end
		</Formula>
		</LuaFunction>
		
		<LuaExpression Name="Mileage" ><Formula>_JBTKO_VET_Mileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_VET_Mileage()" ReturnType="Double"
				Description="Analyzes local alignment profile and returns nearest vertex' mileage." >
			<Constructor>Double _JBTKO_VET_Mileage()</Constructor>
			<Formula>
				function _JBTKO_VET_Mileage()
					nearestDelimiter = getAlignmentInfo().NearestVerticalSegmentDelimiter
					return nearestDelimiter == nil and nil or nearestDelimiter.Mileage
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="code" ><Formula>_JBTKO_VET_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_VET_code()" ReturnType="String"
				Description= "Analyzes local alignment vertical profile and returns code for the nearest characteristic point." >
			<Constructor>String _JBTKO_VET_code()</Constructor>
		<Formula>
			function _JBTKO_VET_code()
				return Variant
			end
		</Formula>
		</LuaFunction>

		<LuaExpression Name="name" ><Formula>code</Formula></LuaExpression>
		
		<!-- Just one InsertPointObject is needed, the formula on Variant will change to the correct Variant for us -->
		<InsertPointObject VariantName="Vertikalt geometripunkt"
				DisplayBlockName="NO-BN-2D-JBTKO_DIV-KARAKTERISTISK-PUNKT-{{SymbolMode}}"
				DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>vei</OwnAlignmentTargetSpace>
			<SetValue Key="KmStigerMotVenstre" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}" />
		</InsertPointObject>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTKO_DIV-KARAKTERISTISK-PUNKT-{{SymbolMode}}" AllowSymbolMove="true" >
			<Rotation AddAngle="{% assign mitl = {{alignmentRotation | minus:ucsRotation | cosisnegative}} %}{% if mitl == 'True' %}180{% else %}0{% endif %}" />
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />
	
	</ObjectType> 

	
	
<!--========================================================================================================
	TRACK AND EMBANKMENT
	ALIGNMENT HORIZONTAL GEOMETRY SEGMENT ANNOTATION
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETESection" Class="RailwayPlacedObject" Name="JBTKO_HOS Horisontalgeometrisegment"
				Layer="JBTKO_HOS" Color="ByLayer"
				Group="Overbygning/Karakteristiske trasépunkter"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<!--Does not have a RelationSpace-->
	
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___TRK" />
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___ANNOTATIVE_DISTANCE_TO_ALIGNMENT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />

		<!-- NOTE!: Only multiline text / AttDef objects will interpret AutoCAD formatting characters such as newline or superscript. -->

		<!-- AutoCAD formatting codes: -->
		<!-- \P			Ends paragraph -->
		<!-- \Hvaluex;	Changes the text height to a multiple of the current text height	Example:	\H3x;RC					(shows 'RC' in three times normal text height) -->
		<!-- \S...^...;	Stacks the subsequent text at the /, #, or ^ symbol					Example:	1.000\S+0.010^-0.000;	(stacks +0.010 above -0.000) -->
		<!-- \Avalue;	Sets the alignment value; valid values: 0=bottom, 1=center, 2=top	Example:	\A1;1\S1/2				(prints 1 1/2 nicely) -->
		<!-- The complete code book is found here: -->
		<!-- https://knowledge.autodesk.com/support/autocad-lt/learn-explore/caas/CloudHelp/cloudhelp/2019/ENU/AutoCAD-LT/files/GUID-7D8BB40F-5C4E-4AE5-BD75-9ED7112E5967-htm.html -->
		<!-- Print '0/00' where the first zero is half size and alignent with top text, the second double-zero is also half size but aligned with bottom text: -->

		<Variants>
			<Variant Name="Rettlinje" >
				<LuaExpression Name="code" >
					<Formula>Variant.."\\P".."L="..string.format("%.3f",getAlignmentInfo().Segment.Length).."\\PRL"</Formula>
				</LuaExpression>
			</Variant>
			<Variant Name="Kurve" >
				<LuaExpression Name="code" >
					<Formula>Variant.."\\P".."L="..string.format("%.3f",getAlignmentInfo().Segment.Length).."\\P".. "R="..string.format("%.3f",getAlignmentInfo().Segment.RadiusStart)</Formula>
				</LuaExpression>
			</Variant>
			<Variant Name="Klotoide" >
				<LuaExpression Name="code" >
					<Formula>
						alignmentInfo = getAlignmentInfo()
						segment = alignmentInfo.Segment
						
						if segment.RadiusStart == math.huge  then 
							text1 = "RL"
						else
							text1 = "R"..string.format("%.3f",segment.RadiusStart)
						end
						
						if segment.RadiusEnd == math.huge then
							text2 = "RL"
						else
							text2 = "R"..string.format("%.3f",segment.RadiusEnd)
						end
						
						vector = alignmentInfo.Tangent
						TangentAngle2D = math.atan(vector.Y,vector.Z)
						if (math.cos(getUcsAngle() - TangentAngle2D) &lt; 0) then
							text = "&lt;"..text2.."-"..text1.."&gt;"
						else
							text = "&lt;"..text1.."-"..text2.."&gt;"
						end
						
						return Variant.."\\P".."L="..string.format("%.3f",getAlignmentInfo().Segment.Length).."\\P"..text
					</Formula>
				</LuaExpression>
			</Variant>
		</Variants>
		
		<LuaExpression Name="Variant" >		   
			<Formula>
				type = getAlignmentInfo().segment.Type
				if type == "Straight" then return "Rettlinje" end
				if type == "Curve" then return "Kurve" end
				if type == "Clothoid" then return "Klotoide" end
			</Formula>
		</LuaExpression>
		
		<!-- Just one InsertPointObject is needed, the formula on Variant will change to the correct Variant for us -->
		<InsertPointObject VariantName="Horisontalgeometrisegment"
				DisplayBlockName="NO-BN-2D-JBTRC_SEKSJON-INNSETTING-SYMBOL-Schematic" 
				DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>vei</OwnAlignmentTargetSpace>
			<SetValue Key="DelimiterType" Value="JBTKO_HOT Horisontalgeometripunkt" />
			<SetValue Key="KmStigerMotVenstre" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}" />
		</InsertPointObject>
		
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTFE_SEK-SEKSJON-{{SymbolMode}}" AllowSymbolMove="true" >
			<Rotation AddAngle="{% assign mitl = {{alignmentRotation | minus:ucsRotation | cosisnegative}} %}{% if mitl == 'True' %}180{% else %}0{% endif %}" />
			<SymbolAttribute Tag="W" ><Value>{{code}}</Value></SymbolAttribute>
		</SymbolDefinition>
	</ObjectType>


	
<!--========================================================================================================
	TRACK AND EMBANKMENT
	ALIGNMENT VERTICAL PROFILE SEGMENT ANNOTATION
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETESection" Class="RailwayPlacedObject" Name="JBTKO_VES Vertikalprofilsegment"
				Layer="JBTKO_VES" Color="ByLayer"
				Group="Overbygning/Karakteristiske trasépunkter"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
	>
		<!--Does not have a RelationSpace-->
	
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___TRK" />
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___ANNOTATIVE_DISTANCE_TO_ALIGNMENT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		
		<!-- NOTE!: Only multiline text / AttDef objects will interpret AutoCAD formatting characters such as newline or superscript. -->

		<!-- AutoCAD formatting codes: -->
		<!-- \P			Ends paragraph -->
		<!-- \Hvaluex;	Changes the text height to a multiple of the current text height	Example:	\H3x;RC					(shows 'RC' in three times normal text height) -->
		<!-- \S...^...;	Stacks the subsequent text at the /, #, or ^ symbol					Example:	1.000\S+0.010^-0.000;	(stacks +0.010 above -0.000) -->
		<!-- \Avalue;	Sets the alignment value; valid values: 0=bottom, 1=center, 2=top	Example:	\A1;1\S1/2				(prints 1 1/2 nicely) -->
		<!-- The complete code book is found here: -->
		<!-- https://knowledge.autodesk.com/support/autocad-lt/learn-explore/caas/CloudHelp/cloudhelp/2019/ENU/AutoCAD-LT/files/GUID-7D8BB40F-5C4E-4AE5-BD75-9ED7112E5967-htm.html -->
		<!-- Print '0/00' where the first zero is half size and alignent with top text, the second double-zero is also half size but aligned with bottom text: -->

		<Variants>
			<!-- <Variant Name="Straight" > -->
			<Variant Name="Gradient" >
				<LuaExpression Name="code" >
					<Formula>Variant.."\\P"..string.format("%.3f",getAlignmentInfo().gradient).." {\\H0.5x;\\A2;0}/{\\H0.5x;\\A0;00}"</Formula>
				</LuaExpression>
			</Variant>
			<!-- <Variant Name="Circular rounding, crest" > -->
			<Variant Name="HBP" >
				<LuaExpression Name="code" >
					<Formula>
alignmentInfo = getAlignmentInfo()
nearestVertex = alignmentInfo.NearestVerticalVertex
pviElevation = string.format("%.3f", nearestVertex.Elevation)
trackElevation = string.format("%.3f", alignmentInfo.Elevation)
length3d = string.format("%.3f", nearestVertex.Length)
radius = string.format("%.3f", nearestVertex.Radius)
return Variant.."\\P".."Hpvi="..pviElevation.."\\P".."Hspor="..trackElevation.."\\P".."L3D="..length3d.."\\P".."R="..radius
					</Formula>
				</LuaExpression>
			</Variant>
			<!-- <Variant Name="Circular rounding, sag" > -->
			<Variant Name="LBP" >
				<LuaExpression Name="code" >
					<Formula>
alignmentInfo = getAlignmentInfo()
nearestVertex = alignmentInfo.NearestVerticalVertex
pviElevation = string.format("%.3f", nearestVertex.Elevation)
trackElevation = string.format("%.3f", alignmentInfo.Elevation)
length3d = string.format("%.3f", nearestVertex.Length)
radius = string.format("%.3f", nearestVertex.Radius)
return Variant.."\\P".."Hpvi="..pviElevation.."\\P".."Hspor="..trackElevation.."\\P".."L3D="..length3d.."\\P".."R="..radius
					</Formula>
				</LuaExpression>
			</Variant>
		</Variants>
		
		<LuaExpression Name="Variant" >		   
		<Formula>
			nearest = getAlignmentInfo().NearestVerticalVertex
			ownMileage = Mileage
			nearestVertexMileage = nearest.Mileage
			mileageDelta = math.abs(ownMileage - nearestVertexMileage)

			if mileageDelta &gt; 4e-3 then return "Gradient" end
			if nearest.Type == "Crest" then return "HBP" end
			if nearest.Type == "Sag" then return "LBP" end
			if nearest.Type == "None" then return "Gradient" end

			return "Gradient"
		</Formula>
		</LuaExpression>

<!-- TODO: temp fix, use Watch symbol (which is multiline but does not behave correctly with scales). Section objects have temporarily been made into single-line text, whence they scale correctly with annotative scales. -->

		<InsertPointObject VariantName="Vertikalprofilsegment" DisplayBlockName="NO-BN-2D-JBTRC_WATCH-INNSETTING-SYMBOL-Schematic" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>vei</OwnAlignmentTargetSpace>
			<SetValue Key="DelimiterType" Value="JBTKO_VET Vertikalprofilpunkt" />
			<SetValue Key="KmStigerMotVenstre" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}" />
		</InsertPointObject>
		
		<!-- <SymbolDefinition DefaultBlockName="NO-BN-2D-JBTFE_SEK-SEKSJON-{{SymbolMode}}" AllowSymbolMove="true" > -->
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTFE_WCH-WATCH-{{SymbolMode}}" AllowSymbolMove="true" >
			<Rotation AddAngle="{% assign mitl = {{alignmentRotation | minus:ucsRotation | cosisnegative}} %}{% if mitl == 'True' %}180{% else %}0{% endif %}" />
			<SymbolAttribute Tag="W" ><Value>{{code}}</Value></SymbolAttribute>
		</SymbolDefinition>
	</ObjectType>
			


<!--========================================================================================================
	TRACK AND EMBANKMENT
	PLATFORMS
=========================================================================================================-->
	<ObjectType DataType="tElementWithAlignment" Class="RailwayAlignment" Name="JBTKO_PLF Plattformkant"
				Layer="JBTKO_PLF" Color="ByLayer"
				Group="Overbygning/Plattformer"
				>

		<RelationSpace>plattformkant</RelationSpace>

		<xpp:expand select="NOBN_com_DEROGATION" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR" />
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___TRK" />
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_PLF" />

		<Variants DefaultValue="Plattformelementer, betong, 1m bredde, 2m lengde, høyre side" >
			<Variant Name="Plattformelementer, betong, 1m bredde, 2m lengde, høyre side" >
				<SetValue Key="IteratedModel3D_0.Model3DName" Value="NO-BN-3D-KO-PLF-PLATTFORMELEMENT-1000-2000-VSIDE" />
				<SetValue Key="IteratedModel3D_0.Model3DSeparation" Value="2.0" />
				<SetValue Key="IteratedModel3D_0.Model3DOffset" Value="1.0" />
			</Variant>
			<Variant Name="Plattformelementer, betong, 1m bredde, 2m lengde, venstre side" >
				<SetValue Key="IteratedModel3D_0.Model3DName" Value="NO-BN-3D-KO-PLF-PLATTFORMELEMENT-1000-2000-VSIDE" />
				<SetValue Key="IteratedModel3D_0.Model3DSeparation" Value="2.0" />
				<SetValue Key="IteratedModel3D_0.Model3DOffset" Value="1.0" />
			</Variant>
		</Variants>

		<AlignmentSystems DefaultSystemName="Plattformkant" >
			<AlignmentSystem Name="Plattformkant"
				CantGauge="0.000"
				AlignmentGauge="0.000"
				QuickMode3DLiftWithCant="false"
			 />
		</AlignmentSystems>

		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="IteratedModel3D" >
			<SetValue Key="RotationBeforeOffset" Value="True"/>
			<SetValue Key="CustomTransformation" Value="false"/>
		</SetDynamicProperty>


		<!-- RailCOMPLETE provides the '_position' reserved identifier, sampled along the alignment, to be used in e.g. getAlignmentInfo() etc. -->
		<LuaExpression Name="IteratedModel3D_0.Rotation3D.X" ><Formula>NOBN_trk_getPitchFromGradient(_position)</Formula></LuaExpression>
		<LuaExpression Name="IteratedModel3D_0.Rotation3D.Y" ><Formula>NOBN_trk_getRollFromCant(_position)</Formula></LuaExpression>
		<LuaExpression Name="IteratedModel3D_0.Rotation3D.Z" ><Formula>0</Formula></LuaExpression>

		<LuaExpression Name="name" ><Formula>code</Formula></LuaExpression>

		<PropertyPrompt Key="code" DefaultValue="Plattformkant" AcceptEmptyValue="false" />
		
		<InsertAlignment VariantName="Plattformelementer, betong, 1m bredde, 2m lengde, høyre side" 
				DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-PLATFORM-ELEMENT-Schematic"
				DefaultToTangentContinuity="true" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>
		
		<InsertAlignment VariantName="Plattformelementer, betong, 1m bredde, 2m lengde, venstre side" 
				DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-PLATFORM-ELEMENT-Schematic"
				DefaultToTangentContinuity="true" >
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

	</ObjectType>

			

<!--========================================================================================================
	OVERBYGNING
	SPORSTOPPERE
	JBTKO_SST Sporstopper
=========================================================================================================-->
	<ObjectType DataType="tOrientedElement" Class="RailwayPlacedObject" Name="JBTKO_SST Sporstopper"
				Layer="JBTKO_SST" Color="ByLayer"
				Group="Overbygning/Sporstoppere"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<RelationSpace>sporstopper</RelationSpace>

		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<xpp:expand select="NOBN_com_STD_TEXATTRIBUTES___VERTICAL_AND_FAR___TRK" />
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TRACKBOUND_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_SST" />

		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="Model3D"/>
		
		<Variants DefaultValue="Fast" >
			<Variant Name="Fast" >
				<SetValue Key="Model3D_0.Model3DName" Value="NO-BN-3D-KO-SST-SPORSTOPPER-FAST" />
			</Variant>
			<Variant Name="Glidbar" >
				<SetValue Key="Model3D_0.Model3DName" Value="NO-BN-3D-KO-SST-SPORSTOPPER-GLIDBAR" />
			</Variant>
			<Variant Name="Hydraulisk" >
				<SetValue Key="Model3D_0.Model3DName" Value="NO-BN-3D-KO-SST-SPORSTOPPER-HYDRAULISK" />
			</Variant>
		</Variants>
		
		<LuaExpression Name="DistanceToAlignment" >		   
			<Formula>NOBN_trk_getDistanceToAlignmentFromCantAndTrackPlaneDistance(RightSided and 4e-4 or -4e-4)</Formula>
		</LuaExpression>

		<LuaExpression Name="name" ><Formula>"Sst."..Variant:sub(1,4).."."..code</Formula></LuaExpression>
		
		<InsertPointObject VariantName="Fast" DisplayBlockName="NO-BN-2D-JBTKO_SST-SPORSTOPPER-FAST-{{SymbolMode}}" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<InsertPointObject VariantName="Glidbar" DisplayBlockName="NO-BN-2D-JBTKO_SST-SPORSTOPPER-GLIDBAR-{{SymbolMode}}" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>
		
		<InsertPointObject VariantName="Hydraulisk" DisplayBlockName="NO-BN-2D-JBTKO_SST-SPORSTOPPER-HYDRAULISK-{{SymbolMode}}" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true" />
		</InsertPointObject>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTKO_SST-SPORSTOPPER-FAST" AllowSymbolMove="true" >
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}" />	
			<BlockNameFormat JoinBy="-" >
			NO-BN-2D-JBTKO_SST-SPORSTOPPER
			{% if Variant == 'Fast' %}FAST
			{% elsif Variant == 'Glidbar' %}GLIDBAR
			{% elsif Variant == 'Hydraulisk' %}HYDRAULISK
			{% endif %}
			{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />
	</ObjectType>



<!--========================================================================================================
	TRACK AND EMBANKMENT
	PROTECTION BEAM AGAINST SNOW CLEARING MACHINES
=========================================================================================================-->
	<!-- JBTKO_MVS Oppkjørsbjelke (Maskinelt Vedlikehold av Spor) -->
	<ObjectType DataType="tOrientedElement" Class="RailwayPlacedObject" Name="JBTKO_MVS Oppkjørsbjelke"
				Layer="JBTKO_MVS" Color="ByLayer"
				Group="Overbygning/Oppkjørsbjelker"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<RelationSpace>oppkjørsbjelke</RelationSpace>
		
		<xpp:expand select="NOBN_com_SYMBOLFRAME" />
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___ANGULAROFFSET_VAR" />
		<xpp:expand select="NOBN_com_STD_TEXATTRIBUTES___VERTICAL_AND_FAR___TRK" />
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK" />
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS" />
		<xpp:expand select="RC_com_SET_OCP_STATION_REFERENCE" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TRACKBOUND_OBJECT" />
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_RAIL" />
		<xpp:expand select="NOBN_com_PSET_BANE_NOR" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA" />
		<xpp:expand select="NOBN_com_PSET_ISY_STK" />
		<xpp:expand select="NOBN_com_PSET_TITTELFELT" />
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_MVS" />

		<SetDynamicProperty DynamicPropertiesPropertyName="Representation" DynamicPropertyType="Model3D"/>

		<Variants>
			<Variant Name="Oppkjørsbjelke, kort" >
				<SetValue Key="Model3D_0.Model3DName" Value="NO-BN-3D-KO-MVS-OPPKJØRSBJELKE-KORT" />
			</Variant>
			<Variant Name="Oppkjørsbjelke, lang" >
				<SetValue Key="Model3D_0.Model3DName" Value="NO-BN-3D-KO-MVS-OPPKJØRSBJELKE-LANG" />
			</Variant>
		</Variants>
		
		<LuaExpression Name="DistanceToAlignment" >		   
			<Formula>NOBN_trk_getDistanceToAlignmentFromCantAndTrackPlaneDistance(RightSided and 4e-4 or -4e-4)</Formula>
		</LuaExpression>

		<LuaExpression Name="dir" ><Formula>"up"</Formula></LuaExpression>

		 <!-- TODO: 3D object model should be adapted to the commonest sleeper and rail type. 60E1 rails are 0.172mm high.  -->
		<SetValue Key="name" Value="Oppkjørsbjelke" />
		
		<InsertPointObject VariantName="Oppkjørsbjelke, kort" DisplayBlockName="NO-BN-2D-JBTKO_MVS-OPPKJOERSBJELKE-{{SymbolMode}}" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="4e-4" >
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="false" />
		</InsertPointObject>

		<!-- Note: LeftSided == RightSided == false whenever DistanceToAlignment is zero - use 4e-4 as DistanceToAlignment. -->
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTKO_MVS-OPPKJOERSBJELKE" AllowSymbolMove="true" >
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}" />	
			<BlockNameFormat JoinBy="-" >
				NO-BN-2D-JBTKO_MVS-OPPKJOERSBJELKE-{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" />
	</ObjectType>



<!--========================================================================================================
    End of file 
=========================================================================================================-->
</xpp:bloc>
