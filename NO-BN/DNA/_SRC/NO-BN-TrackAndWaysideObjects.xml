<!--========================================================================================================

    NO-BN-TrackAndWaysideObjects.xml
	
	Include in DNA file using XPPq XML preprocessor directive <xpp:expand href="fileName.xml"/>.

	Copyright (c) 2015-2024 Railcomplete AS, Norway, NO916118503
	
=========================================================================================================-->
<xpp:bloc>

	<!-- 
		Note:
		Alignments, such as railway tracks, that have been declared using this type of declaration:

			<ObjectType DataType="tElementWithAlignment" Class="RailwayAlignment" Name="..." ...>

		may be supplemented by "live" annotation objects. Each such alignment declaration may contain a LuaExpression (or SetValue) that 
		associates a horizontal and a vertical annotation object type with it. The horizontal annotation object type must have been 
		declared elsewhere such as in:

			<ObjectType DataType="tDelimitedOrientedElement" Class="RailwayPlacedObject" Name="My Horizontal Geometry Vertex Annotation Object Type" ... >

		The vertical annotation object type must have been declared elsewhere such as in:

			<ObjectType DataType="tDelimitedOrientedElement" Class="RailwayPlacedObject" Name="My Vertical Profile Vertex Annotation Object Type" ... >

		These represent the critical points where the horizontal / the vertical profile has a change (horizontal start-of-curve, vertical PVI etc).
		The to-be-annotated alignment object's declaration must contain assignments such as in:
		
			<LuaExpression Name="HorizontalGeometryPointObjectTypeRef"><Formula>"My Horizontal Geometry Vertex Annotation Object Type"</Formula></LuaExpression>
			<LuaExpression Name="VerticalGeometryPointObjectTypeRef"><Formula>"My Vertical Profile Vertex Annotation Object Type"</Formula></LuaExpression>

		Likewise, there is a possibility to add annotations to the segments between any two consecutive vertex annotations. These must have been declared
		elsewhere such as in:
		
			<ObjectType DataType="RailCOMPLETESection" Class="RailwayPlacedObject" Name="My Horizontal Geometry Segment Annotation Object Type">
			<ObjectType DataType="RailCOMPLETESection" Class="RailwayPlacedObject" Name="My Vertical Profile Segment Annotation Object Type">

		These represent the segments between any two consecutive vertices of the corresponding type (constant circular curve, constant gradient etc). 
		The to-be-annotated alignment object's declaration must contain assignments such as in:

			<LuaExpression Name="HorizontalGeometrySectionObjectTypeRef"><Formula>"My Horizontal Geometry Segment Annotation Object Type"</Formula></LuaExpression>
			<LuaExpression Name="VerticalGeometrySectionObjectTypeRef"><Formula>"My Vertical Profile Segment Annotation Object Type"</Formula></LuaExpression>

		The combined effect of these declarations is that the function 'RC-AssistCreateGeometryAndProfileAnnotationObjects' creates objects using these
		four referenced object types and inserts them at the right places along the annotated alignment. These are now 'live' annotations, i.e. 
		RC objects. Subsequently, these objects may be picked up as objects by RC-ManageObjects and used in data export, tables etc.
	-->


<!--========================================================================================================
	Global Lua
=========================================================================================================-->
	<!-- (Nothing) -->


<!--========================================================================================================
	TRACK AND EMBANKMENT
	OBJECTS RELATED TO TURNOUTS
=========================================================================================================-->
	<!--TODO Modellere ulike typer tungeruller, glideskoplater, osv??  -->
	<!--TODO Modellere ulike typer skinner, sviller og skinnebefestigelser -->



<!--========================================================================================================
	TRACK AND EMBANKMENT
	LABEL
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETELabel" Class="RailwayPlacedObject" LuaName="rctype_LabelForSwitch" Name="JBTFE_DIV Etikett for sporveksel"
				Layer="JBTFE_ETIKETTER" Color="ByLayer"
				Group="Felles/Etiketter"
				>

		<RelationSpace>etikett</RelationSpace>
		
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR"/>
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT"/> 
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE"/>
		<xpp:expand select="NOBN_com_PSET_BANE_NOR"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA"/>
		<xpp:expand select="NOBN_com_PSET_ISY_STK"/>
		<xpp:expand select="NOBN_com_PSET_TITTELFELT"/>
		
		<Variants DefaultValue="D-1-2-HRB-025-018-SPV">
			<Variant Name="D-1-2-HLB-025-018-SPV"/>
			<Variant Name="D-1-2-HRB-025-018-SPV"/>
		</Variants>

		<LuaExpression Name="VerticalOffset"><Formula>0</Formula></LuaExpression>
		<LuaExpression Name="LateralOffset"><Formula>RC__getNearestSnapDistance(getPropertyValue("LateralOffset"),5)</Formula></LuaExpression>
		<LuaExpression Name="ReferenceMileage">
			<Formula>
				local r = getRelatedObjects(rel_Label_AppliesTo_Anything)
				return r[0] and r[0].ReferenceMileage or getPropertyValue(ReferenceMileage)
			</Formula>
		</LuaExpression>
		<LuaExpression Name="LabelItem1"><Formula>NOBN_trk_getSwitchLabelItem1(MileageIncreasesTowardsLeft)</Formula></LuaExpression>
		<LuaExpression Name="LabelItem2"><Formula>NOBN_trk_getSwitchLabelItem2(MileageIncreasesTowardsLeft)</Formula></LuaExpression>
        <LuaExpression Name="LabelItem3"><Formula>NOBN_trk_getSwitchLabelItem3()</Formula></LuaExpression>

		<InsertPointObject DisplayName="Sporveksel SS/Mid (km-retn mot hÃ¸yre)" Name="D-1-2-HRB-025-018-SPV" DisplayBlockName="NO-BN-2D-JBTFE_ETI-ETIKETT-D-1-2-HRB-025-018-{{SymbolMode}}">
			<JigSymbolAppearance EnableDirectionSetting="true"/>
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<SetValue Key="MileageIncreasesTowardsLeft" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}"/>
			</InsertPointObject>

		<InsertPointObject DisplayName="Sporveksel SS/Mid (km-retn mot venstre)" Name="D-1-2-HLB-025-018-SPV" DisplayBlockName="NO-BN-2D-JBTFE_ETI-ETIKETT-D-1-2-HLB-025-018-{{SymbolMode}}">
			<JigSymbolAppearance EnableDirectionSetting="true"/>
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<SetValue Key="MileageIncreasesTowardsLeft" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}"/>
		</InsertPointObject>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTFE_ETI-ETIKETT-D-1-2-HRB-025-018" AllowSymbolMove="true">
			<Rotation Add180DegreesIfDirIsDown="true" AddAngle="{% if MileageIncreasesTowardsLeft %}180{% else %}0{% endif %}"/>
			<BlockNameFormat JoinBy="-">
				NO-BN-2D-JBTFE_ETI-ETIKETT
				{% if Variant == 'D-1-2-HLB-025-018-SPV' %}D-1-2-HLB-025-018
				{% elsif Variant == 'D-1-2-HRB-025-018-SPV' %}D-1-2-HRB-025-018
				{% endif %}
				{{SymbolMode}}
			</BlockNameFormat>

			<SymbolAttribute Tag="T01">
				<Value>{{LabelItem1}}</Value>
			</SymbolAttribute>
			<SymbolAttribute Tag="T02">
				<Value>{{LabelItem2}}</Value>
			</SymbolAttribute>
			<SymbolAttribute Tag="T03">
				<Value>{{LabelItem3}}</Value>
			</SymbolAttribute>
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" DoNotIncludeInSymbolFrame="true"/>

	</ObjectType>



<!--========================================================================================================
	TRACK AND EMBANKMENT
	RAILWAY TRACK
=========================================================================================================-->
	<ObjectType DataType="eTrack" Class="RailwayAlignment" LuaName="rctype_Track" Name="JBTKO_SPO Spor"
				Layer="JBTKO_SPO" Color="ByLayer"
				Group="Overbygning/Spor"
				>
				
		<RelationSpace>spor</RelationSpace>
		
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___SYMBOLFRAME"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR"/>
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CENTERED___TRK"/>
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK"/>
		<xpp:expand select="NOBN_com_DEROGATION"/>
		
		<xpp:expand select="NOBN_com_PSET_BANE_NOR"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA"/>
		<xpp:expand select="NOBN_com_PSET_ISY_STK"/>
		<xpp:expand select="NOBN_com_PSET_TITTELFELT"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_SPO"/>

		<!-- TODO: Sjekk sporbredder for de som ikke er 1.500 de er tatt ut av lufta av CLFEY... -->
		<AlignmentSystems DefaultSystemName="Normalspor 1435 mm">
			<!-- <AlignmentSystem Name="Smalspor 1067 mm" -->
				<!-- CantGauge="1.130" -->
				<!-- AlignmentGauge="1.067" -->
				<!-- LiftWithCant="true" -->
			<!-- /> -->
			<AlignmentSystem Name="Normalspor 1435 mm"
				CantGauge="1.500"
				AlignmentGauge="1.435"
				LiftWithCant="true"
			 />
			<!-- <AlignmentSystem Name="Bredspor 1524 mm" -->
				<!-- CantGauge="1.590" -->
				<!-- AlignmentGauge="1.524" -->
				<!-- LiftWithCant="true" -->
			<!-- /> -->
			<!-- <AlignmentSystem Name="Bredspor 1674 mm" -->
				<!-- CantGauge="1.740" -->
				<!-- AlignmentGauge="1.674" -->
				<!-- LiftWithCant="true" -->
			<!-- /> -->
		</AlignmentSystems>
				
		<DynamicProperty Type="Representation3D" Subtype="SweptGeometry3D">
			<SetValue Key="Parent" Value="CCS"/>
		</DynamicProperty>
		
		<DynamicProperty Type="Representation3D" Subtype="IteratedGeometry3D">
			<SetValue Key="Parent" Value="CCS"/>
			<SetValue Key="Separation" Value="0.600"/>
			<LuaExpression Name="InitialLinearOffset"><Formula>IteratedGeometry3D_1.Separation/2</Formula></LuaExpression>
		</DynamicProperty>
		
		<Variants DefaultValue="Enkle skinner og sviller">
			<Variant Name="Enkle skinner og sviller">
				<SetValue Key="InclinedRailProfile" Value="Unknown"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-ENKEL"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value="NO-BN-3D-KO-SVI-SVILLE-JBV60-BETONG-232x300x2600-ENKEL"/>
			</Variant>
			<Variant Name="Enkle skinner og sviller med enkle ledeskinner">
				<SetValue Key="InclinedRailProfile" Value="Unknown"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-MED-CC536-LEDESKINNER-ENKEL"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value="NO-BN-3D-KO-SVI-SVILLE-JBV60-BETONG-232x300x2600-ENKEL"/>
			</Variant>
			<Variant Name="KjÃ¸rekanter 1435 mm">
				<SetValue Key="InclinedRailProfile" Value="Unknown"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-KJÃREKANTER"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value=""/>
			</Variant>
			<Variant Name="60E1 1:20 skinner og enkle sviller">
				<SetValue Key="InclinedRailProfile" Value="1:20"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-60E1-1_20"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value="NO-BN-3D-KO-SVI-SVILLE-JBV60-BETONG-232x300x2600-ENKEL"/>
			</Variant>
			<Variant Name="60E1 1:20 skinner og enkle sviller med 54E3 ledeskinner">
				<SetValue Key="InclinedRailProfile" Value="1:20"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-60E1-1_20-MED-LEDESKINNER-54E3"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value="NO-BN-3D-KO-SVI-SVILLE-JBV60-BETONG-232x300x2600-ENKEL"/>
			</Variant>
			<Variant Name="60E1 1:20 skinnestrenger uten sviller">
				<SetValue Key="InclinedRailProfile" Value="1_20"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-60E1-1_20"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value=""/>
				<SetValue Key="IteratedGeometry3D_1.Frozen" Value="True"/>
			</Variant>
			<Variant Name="60E1 1:20 med 54E3 ledeskinne skinnestrenger uten sviller">
				<SetValue Key="InclinedRailProfile" Value="1_20"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-60E1-1_20-MED-LEDESKINNER-54E3"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value=""/>
				<SetValue Key="IteratedGeometry3D_1.Frozen" Value="True"/>
			</Variant>
			<Variant Name="54E3 ledeskinne skinnestrenger uten sviller">
				<SetValue Key="InclinedRailProfile" Value="Unknown"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-CC536-LEDESKINNER-54E3"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value=""/>
				<SetValue Key="IteratedGeometry3D_1.Frozen" Value="True"/>
			</Variant>
			<Variant Name="54E3 1:20 skinnestrenger uten sviller">
				<SetValue Key="InclinedRailProfile" Value="1_20"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-54E3-1_20"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value=""/>
				<SetValue Key="IteratedGeometry3D_1.Frozen" Value="True"/>
			</Variant>
			<Variant Name="49E1 opprett skinnestrenger uten sviller">
				<SetValue Key="InclinedRailProfile" Value="OPPRETT"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-49E1-OPPRETT"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value=""/>
				<SetValue Key="IteratedGeometry3D_1.Frozen" Value="True"/>
			</Variant>
			<Variant Name="39 kg opprett skinnestrenger uten sviller">
				<SetValue Key="InclinedRailProfile" Value="OPPRETT"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-39KG-OPPRETT"/>
				<SetValue Key="IteratedGeometry3D_1.Frozen" Value="True"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value=""/>
			</Variant>
			<Variant Name="60E1 1:20 skinner med JBV60 sviller - Detaljert 3D">
				<SetValue Key="InclinedRailProfile" Value="1_20"/>
				<SetValue Key="SweptGeometry3D_0.Name" Value="NO-BN-SWEEP-KO-SKI-SPORVIDDE-1435-SKINNER-60E1-1_20"/>
				<SetValue Key="IteratedGeometry3D_1.Name" Value="NO-BN-3D-KO-SVI-SVILLE-BETONG-JBV60-MED-FASTCLIP"/>
			</Variant>
		</Variants>
	
		<CustomProperty DataType="Enumeration" Name="InclinedRailProfile" DisplayName="SkrÃ¥stilt skinneprofil" DefaultValue="1:20"
			Description="Rails are either upright or inclined 1:20 [ Opprett | 1:20 ].">
			<Values>
				<Value DisplayName="Opprett">OPPRETT</Value>
				<Value DisplayName="1:30">1_30</Value>
				<Value DisplayName="1:20">1_20</Value>
				<Value DisplayName="1:40">1_40</Value>
				<Value DisplayName="1:60">1_60</Value>
				<Value DisplayName="Ukjent">Unknown</Value>
			</Values>
		</CustomProperty>
		
		<!-- TODO: Adjust GlobalWidth in schematic mode to reflect track usage (with train routes: Thicker line) -->
		<!-- Note: Plotting with Lineweight being 'Default' or 'ByLayer' or 'ByBlock' implies that GlobalWidth will be plotted. -->
		<LuaExpression Name="GlobalWidth"><Formula>_JBTKO_SPO_GlobalWidth()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_SPO_GlobalWidth()" ReturnType="String"
			Description="Returns the CAD system Global Width (modelspace / paperspace line thickness) for railway track alignments.">
			<Signature>_JBTKO_SPO_GlobalWidth()</Signature>
			<Formula>
				function _JBTKO_SPO_GlobalWidth()
					if SymbolMode == 'Geographic' then
						return 0.00
					else
						--'Schematic': Railway track alignments' line weight depend on the track's usage:
						--For now, check railML attribute 'Type':
						--[ Main track | Secondary track | Connecting track | Station track | Siding track ]
						--TODO: Check on DNA's categories for railway track usage, when alignments in 2D are wrapped
						--inside a block with segmented view according to its linear event properties.
						if Type == "mainTrack" then return 0.70
						elseif Type == "secondaryTrack" then return 0.70
						elseif Type == "connectingTrack" then return 0.70
						elseif Type == "stationTrack" then return 0.70
						elseif Type == "sidingTrack" then return 0.00
						else return 0.00,_error --Shouldn't happen
						end
					end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="name"><Formula>"["..code.."]"</Formula></LuaExpression>

		<PropertyPrompt Key="code" DefaultValue="Spor" AcceptEmptyValue="false"/>

		<InsertAlignment Name="Enkle skinner og sviller" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-JERNBANESPOR-Schematic" DefaultToTangentContinuity="true">
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
			<IncludeSegmentType>Spiral</IncludeSegmentType>
			<SetValue Key="AlignmentSystem" Value="Normalspor 1435 mm"/>
			<LuaExpression Name="HorizontalGeometryPointObjectTypeRef"><Formula>rctype_HorizontalGeometryVertex</Formula></LuaExpression>
			<LuaExpression Name="VerticalGeometryPointObjectTypeRef"><Formula>rctype_VerticalProfileVertex</Formula></LuaExpression>
			<LuaExpression Name="HorizontalGeometrySectionObjectTypeRef"><Formula>rctype_HorizontalGeometrySegment</Formula></LuaExpression>
			<LuaExpression Name="VerticalGeometrySectionObjectTypeRef"><Formula>rctype_VerticalProfileSegment</Formula></LuaExpression>
		</InsertAlignment>

		<InsertAlignment Name="Enkle skinner og sviller med enkle ledeskinner" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-JERNBANESPOR-Schematic" DefaultToTangentContinuity="true">
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
			<IncludeSegmentType>Spiral</IncludeSegmentType>
			<SetValue Key="AlignmentSystem" Value="Normalspor 1435 mm"/>
			<LuaExpression Name="HorizontalGeometryPointObjectTypeRef"><Formula>rctype_HorizontalGeometryVertex</Formula></LuaExpression>
			<LuaExpression Name="VerticalGeometryPointObjectTypeRef"><Formula>rctype_VerticalProfileVertex</Formula></LuaExpression>
			<LuaExpression Name="HorizontalGeometrySectionObjectTypeRef"><Formula>rctype_HorizontalGeometrySegment</Formula></LuaExpression>
			<LuaExpression Name="VerticalGeometrySectionObjectTypeRef"><Formula>rctype_VerticalProfileSegment</Formula></LuaExpression>
		</InsertAlignment>

		<InsertAlignment Name="KjÃ¸rekanter 1435 mm" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-JERNBANESPOR-Schematic" DefaultToTangentContinuity="true">
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
			<IncludeSegmentType>Spiral</IncludeSegmentType>
			<SetValue Key="AlignmentSystem" Value="Normalspor 1435 mm"/>
			<LuaExpression Name="HorizontalGeometryPointObjectTypeRef"><Formula>rctype_HorizontalGeometryVertex</Formula></LuaExpression>
			<LuaExpression Name="VerticalGeometryPointObjectTypeRef"><Formula>rctype_VerticalProfileVertex</Formula></LuaExpression>
			<LuaExpression Name="HorizontalGeometrySectionObjectTypeRef"><Formula>rctype_HorizontalGeometrySegment</Formula></LuaExpression>
			<LuaExpression Name="VerticalGeometrySectionObjectTypeRef"><Formula>rctype_VerticalProfileSegment</Formula></LuaExpression>
		</InsertAlignment>

		<InsertAlignment Name="60E1 1:20 skinner og enkle sviller" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-JERNBANESPOR-Schematic" DefaultToTangentContinuity="true">
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
			<IncludeSegmentType>Spiral</IncludeSegmentType>
			<SetValue Key="AlignmentSystem" Value="Normalspor 1435 mm"/>
			<LuaExpression Name="HorizontalGeometryPointObjectTypeRef"><Formula>rctype_HorizontalGeometryVertex</Formula></LuaExpression>
			<LuaExpression Name="VerticalGeometryPointObjectTypeRef"><Formula>rctype_VerticalProfileVertex</Formula></LuaExpression>
			<LuaExpression Name="HorizontalGeometrySectionObjectTypeRef"><Formula>rctype_HorizontalGeometrySegment</Formula></LuaExpression>
			<LuaExpression Name="VerticalGeometrySectionObjectTypeRef"><Formula>rctype_VerticalProfileSegment</Formula></LuaExpression>
		</InsertAlignment>

	</ObjectType>



<!--========================================================================================================
	TRACK AND EMBANKMENT
	RAILS
	
	To be used mainly for insulating rails, dealing with track circuits and return current.
	May be created through import av LandXML or DWG, converted fra 2D/3D polyline (or drawn from scratch), but
	will mainly be created as offsets with half of the track gauge from a track's center line.

	Created conveniently as offset from a track with offset distance set to half of the track gauge.

	Usage:
	1) Object which serves to express the inner rail in 3D if you need them individually in 3D. Otherwise, use rctype_Track.
	2) Linear element for use as an offset referent for linear placement (distance to closest rail).
	3) Object to represent physical rails as linear objects
	4) Object serving as an electrically conducting network for physical track circuit current
	5) Object serving as an electrically conducting network for earthing
	6) Object serving as an electrically conducting network for return current

	How to insulate individual rails:
	1) First place an isolated joint railML element (rctype_InsulatedRailJoint) in the associated track (not rail).
	2) Use RC-BreakAlignment and one or both break rails according to the isolated joint object in the assoc. track. 
	3) The rails will automatically search for the preceding insulation joint object at their alignment start, and
	   will set their own code, color and linewidth to reflect the rail's insulation from that joint and up,
	   the railML property 'insulatedRail' then being one of 'left', 'right', 'both' or 'none'. 
	   
	   0.05/Red = Return current rail = either a dedicated earth rail, the other rail carrying only track
	              circuit currents (signal rail), OR both rails carry return current and signal currents,
				  the two currents being separated through suitable filters (impedances) connecting return
				  current rail(s) to return current rail(s), bridging over a double insulation.
	   
	   0.20/Green = Track circuit (signal) rail. This rail's potential, within the operating frequency band 
				  for the track circuit, is allowed to oscillate freely. This means that the rail cannot be
				  connected directly to earth with a pure ohmic connection, but only through an impedance 
				  providing a closed circuit at 0 Hz (earthing) as well as at low frequencies (16 2/3 Hz in 
				  Norway) for return current, but acting as an open circuit (high impedance) at higher 
				  frequencies where the tack ciruit operates (typically 95 - 105 Hz in Norway).
				  
	4) Subsequent use of the earthing assistance functions may search for these rails and use 
	   their insulation status to decide where to get protective earth (when the object's EarthingMethod has 
	   been set to 'Rail'). 
=========================================================================================================-->
	<ObjectType DataType="tElementWithAlignment" Class="RailwayAlignment" LuaName="rctype_InnerRailAndInsulation" Name="JBTKO_KJK KjÃ¸rekant og skinneisolering"
				Layer="JBTKO_KJK_isolasjon" Color="ByLayer"
				Group="Overbygning/Spor"
				>

		<RelationSpace>kjÃ¸rekant_og_skinneisolering</RelationSpace>
		
		<xpp:expand select="NOBN_com_DEROGATION"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR"/>
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CENTERED___TRK"/>
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK"/>
		<xpp:expand select="NOBN_com_PSET_BANE_NOR"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA"/>
		<xpp:expand select="NOBN_com_PSET_ISY_STK"/>
		<xpp:expand select="NOBN_com_PSET_TITTELFELT"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_SKI"/>

		<AlignmentSystems DefaultSystemName="KjÃ¸rekant og skinneisolering">
			<AlignmentSystem Name="KjÃ¸rekant og skinneisolering"
				CantGauge="1.500"
				AlignmentGauge="1.435"
				LiftWithCant="false"
		 />
		</AlignmentSystems>

		<Variants DefaultValue="KjÃ¸rekant og skinneisolering">
			<Variant Name="KjÃ¸rekant og skinneisolering">
			</Variant>
		</Variants>
		
		<DynamicProperty Type="Representation3D" Subtype="SweptGeometry3D"/>

		<LuaExpression Name="SweptGeometry3D_0.Name"><Formula>_JBTKO_KJK_SweptGeometry3DName()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_KJK_SweptGeometry3DName()" ReturnType="String"
				Description="Returns the 3D model name [String] for the rail edge and rail isolation state.">
			<Signature>String _JBTKO_KJK_SweptGeometry3DName()</Signature>
			<Formula>
				function _JBTKO_KJK_SweptGeometry3DName()
					local iso = getDownObject(rctype_InsulatedRailJoint)
					if not iso then
						--Unknown isolation state:
						return "NO-BN-SWEEP-FE-WIR-WIRE-GRÃ-DIAMETER-005"
					elseif Color:upper() == "RED" then
						--Visualize non-isolated (pure return current) rail:
						return "NO-BN-SWEEP-FE-WIR-WIRE-RÃD-DIAMETER-050"
					elseif Color:upper() == "GREEN" then
						--Visualize isolated (signal) rail:
						return "NO-BN-SWEEP-FE-WIR-WIRE-GRÃNN-DIAMETER-050"
					else
						--unknown color code:
						return "NO-BN-SWEEP-FE-WIR-WIRE-"..iso.Color.."-DIAMETER-050"
					end
				end
			</Formula>
		</LuaFunction>
		<!-- TODO 2020-03-22 CLFEY Include 3D formulae to place PoC line exactly in 3D-->

		<LuaExpression Name="name"><Formula>"["..code.."]"</Formula></LuaExpression>

		<LuaExpression Name="code"><Formula>_JBTKO_KJK_PointOfContact_code(nil)</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_KJK_PointOfContact_code()" ReturnType="String"
			Description="Obtains the code for a rail point-of-contact alignment, deduced from an insulation in the associated track at the rail's start point.">
			<Signature>String _JBTKO_KJK_PointOfContact_code([AlignmentRef alg])</Signature>
			<Formula>
				function _JBTKO_KJK_PointOfContact_code(alg)
					if alg == nil then alg = this end
					if alg.RcAlignment == nil then return "ERROR - Bad argument ["..RC__identify(alg).."] - has no RcAlignment." end
					local tol = 0.050 --[m]
					local ps = alg.RcAlignment.StartPoint
					local pe = alg.RcAlignment.EndPoint
					local trackGauge = alg.AlignmentSystemAlignmentGauge
					--Get point near midpoint of rail:
					local pm = getAlignmentInfo(alg.id,(ps.X+pe.X)/2.0,(ps.Y+pe.Y)/2.0).Point 
					--Note: If the rail alignment starts or ends in a connection element, then there may be several close candidates:
					local ts = getNearbyAlignments(getPoint3D(ps.X,ps.Y)):
						filter(function (x)
								local d = getAlignmentInfo(x.id,ps.X,ps.Y).DistanceToAlignment
								return math.abs(math.abs(d) - trackGauge/2.0) &lt; tol
							end)
							local n = getCollectionLength(ts)
					if n == 0  then
						return "UNFINISHED - Did not find a track associated with this rail."
					elseif n == 1  then
						local ds = getAlignmentInfo(ts[0].id,ps.X,ps.Y).DistanceToAlignment
						return (ds &lt; 0 and "V. skinne " or "H. skinne ")..ts[0].code
					else
						--Switch, or continuation in a crossing - more than one
						--track lies exctly one half track cauge from start of rail.
						--Note: We cannot use start+end point, since the rail's associated 
						--track may deviate from the same track axis in both ends.
						for i=0,n-1 do
							local ds = getAlignmentInfo(ts[i].id,ps.X,ps.Y).DistanceToAlignment
							local dm = getAlignmentInfo(ts[i].id,pm.X,pm.Y).DistanceToAlignment
							if math.abs(ds-dm) &lt; tol then
								--We have probably found two parallel rails with suitable gauge distance:
								return (ds &lt; 0 and "V. skinne " or "H. skinne ")..ts[i].code
							end
						end
						return "UNFINISHED - Could not identify an associated track."
					end
				end
			</Formula>
		</LuaFunction>

		<!-- Not really needed - will be superseded by the code formula anyway: -->
		<PropertyPrompt Key="code" DefaultValue="KjÃ¸rekant og skinneisolering" AcceptEmptyValue="false"/>

		<InsertAlignment Name="KjÃ¸rekant og skinneisolering" DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-SKINNEPROFIL-Schematic" DefaultToTangentContinuity="true">
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
			<IncludeSegmentType>Spiral</IncludeSegmentType>
			<SetValue Key="AlignmentSystem" Value="KjÃ¸rekant og skinneisolering"/>
		</InsertAlignment>

	</ObjectType>



<!--========================================================================================================
	TRACK AND EMBANKMENT
	ALIGNMENT HORIZONTAL GEOMETRY CHARACTERISTIC POINT ANNOTATION
=========================================================================================================-->
	<ObjectType DataType="tDelimitedOrientedElement" Class="RailwayPlacedObject" LuaName="rctype_HorizontalGeometryVertex" Name="JBTKO_HOT Horisontalgeometripunkt"
				Layer="JBTKO_HOT" Color="ByLayer"
				Group="Overbygning/Karakteristiske trasÃ©punkter"
				AttAddX="0"
				AttAddY="0"
				>
				
		<RelationSpace>horisontaltrasÃ©punkt</RelationSpace>
		
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___SYMBOLFRAME"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT"/>
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_VERY_CLOSE___TRK"/>
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK"/>
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS"/>
		<xpp:expand select="NOBN_com_SET_OCP_STATION_REFERENCE"/>
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE"/>
		<xpp:expand select="NOBN_com_PSET_BANE_NOR"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA"/>
		<xpp:expand select="NOBN_com_PSET_ISY_STK"/>
		<xpp:expand select="NOBN_com_PSET_TITTELFELT"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_HOT"/>
		
		<Variants>
			<Variant Name="(Linje start/slutt)"/>
			<Variant Name="KP"/>
			<Variant Name="FKP"/>
			<Variant Name="OB"/>
			<Variant Name="OE"/>
			<Variant Name="FOB"/>
			<Variant Name="FOE"/>
			<Variant Name="RB"/>
			<Variant Name="RE"/>
			<Variant Name="REB"/>
		</Variants>
		
		<LuaExpression Name="LateralOffset"><Formula>0</Formula></LuaExpression>

		<LuaExpression Name="Variant"><Formula>_JBTKO_HOT_Variant()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_HOT_Variant()" ReturnType="String"
				Description="Analyzes local alignment geometry and cant and returns nearest vertex' Variant, i.e. type of geometric vertex/cant.">
			<Signature>String _JBTKO_HOT_Variant()</Signature>
			<Formula>
				function _JBTKO_HOT_Variant()
					local ai = getAlignmentInfo()
					local nearest = ai.NearestHorizontalVertex
					local nearestCant = ai.NearestCantVertex
					-- insert "RE,RB" if cant station is closest
					local vertexMileage = nearest.Item1 and nearest.Item1.EndMileage or nearest.Item2.StartMileage
					if nearestCant ~= nil and math.abs(nearestCant.Mileage - ai.Mileage) &lt; math.abs(vertexMileage - ai.Mileage)
										and math.abs(vertexMileage - ai.Mileage) &gt; 1 then
						if math.abs(nearestCant.GradientIn) &gt; 0 and math.abs(nearestCant.GradientOut) &gt; 0 then
							return "REB"
						elseif (nearestCant.GradientIn == nil or nearestCant.GradientIn == 0) and math.abs(nearestCant.GradientOut) &gt; 0 then
							return "RB"
						elseif (nearestCant.GradientOut == nil or nearestCant.GradientOut == 0) and math.abs(nearestCant.GradientIn) &gt; 0 then
							return "RE"
						end
					end
					if nearest == nil then return "" end
					if nearest.Item1 ~= nil and nearest.Item1.Type == "Curve" then
						if nearest.Item2 == nil or nearest.Item2.Type == "Straight" then return "KP" end
						if nearest.Item2.Type == "Curve" then return "FKP" end
					end
					if nearest.Item2 ~= nil and nearest.Item2.Type == "Curve" then
						if nearest.Item1 == nil or nearest.Item1.Type == "Straight" then return "KP" end
					end
					if nearest.Item1 ~= nil and nearest.Item1.Type == "Clothoid" then
						if nearest.Item2 ~= nil and nearest.Item2.Type == "Clothoid" then 
							if nearest.Item1.RadiusStart &lt; nearest.Item1.RadiusEnd then return "FOB" else return "FOE" end --(Note: "FOE" is not found in StyleDef, but is used)
						end
						if nearest.Item1.RadiusStart &lt; nearest.Item1.RadiusEnd then return "OB" else return "OE" end
					end
					if nearest.Item2 ~= nil and nearest.Item2.Type == "Clothoid" then 
						if nearest.Item2.RadiusEnd &lt; nearest.Item2.RadiusStart then return "OB" else return "OE" end
					end
					return "(Linje start/slutt)" --Track begin / end
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="Mileage"><Formula>_JBTKO_HOT_Mileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_HOT_Mileage()" ReturnType="Double"
				Description="Analyzes local alignment geometry and cant and returns nearest vertex' mileage.">
			<Signature>Double _JBTKO_HOT_Mileage()</Signature>
			<Formula>
			function _JBTKO_HOT_Mileage()
				local ai = getAlignmentInfo()
				local nearest = ai.NearestHorizontalVertex
				-- insert "RE,RB" if cant station is closest
				local nearestCant = ai.NearestCantVertex
				local vertexMileage = nearest.Item1 and nearest.Item1.EndMileage or nearest.Item2.StartMileage
				if nearestCant ~= nil and math.abs(nearestCant.Mileage - ai.Mileage) &lt; math.abs(vertexMileage - ai.Mileage)
										and math.abs(vertexMileage - ai.Mileage) &gt; 1 then
					return nearestCant.Mileage
				else
					if nearest.Item2 ~= nil then return nearest.Item2.StartMileage end
					if nearest.Item1 ~= nil then return nearest.Item1.EndMileage end
					return 0.0,_error, _info("Bad data for function _JBTKO_HOT_Mileage().")
				end
			end
			</Formula>
		</LuaFunction>
	
		<LuaExpression Name="code"><Formula>Variant</Formula></LuaExpression>		
		<LuaExpression Name="name"><Formula>code</Formula></LuaExpression>		

		<!-- Just one InsertPointObject is needed, the formula on Variant will change to the correct Variant for us -->
		<InsertPointObject Name="Horisontalt geometripunkt"
				DisplayBlockName="NO-BN-2D-JBTKO_DIV-KARAKTERISTISK-PUNKT-{{SymbolMode}}"
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="1e-3">
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>vei</OwnAlignmentTargetSpace>
			<SetValue Key="MileageIncreasesTowardsLeft" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}"/>
		</InsertPointObject>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTKO_DIV-KARAKTERISTISK-PUNKT-{{SymbolMode}}" AllowSymbolMove="true">
			<Rotation AddAngle="{% assign mitl = {{alignmentRotation | minus:ucsRotation | cosisnegative}} %}{% if mitl == 'True' %}180{% else %}0{% endif %}"/>
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" DoNotIncludeInSymbolFrame="true"/>

	</ObjectType>



<!--========================================================================================================
	TRACK AND EMBANKMENT
	ALIGNMENT VERTICAL PROFILE CHARACTERISTIC POINT ANNOTATION
=========================================================================================================-->
	<ObjectType DataType="tDelimitedOrientedElement" Class="RailwayPlacedObject" LuaName="rctype_VerticalProfileVertex" Name="JBTKO_VET Vertikalprofilpunkt"
				Layer="JBTKO_VET" Color="ByLayer"
				Group="Overbygning/Karakteristiske trasÃ©punkter"
				AttAddX="0"
				AttAddY="0"
				>
				
		<RelationSpace>vertikaltrasÃ©punkt</RelationSpace>
		
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___SYMBOLFRAME"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT"/>
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_VERY_CLOSE___TRK"/>
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK"/>
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS"/>
		<xpp:expand select="NOBN_com_SET_OCP_STATION_REFERENCE"/>
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE"/>
		<xpp:expand select="NOBN_com_PSET_BANE_NOR"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA"/>
		<xpp:expand select="NOBN_com_PSET_ISY_STK"/>
		<xpp:expand select="NOBN_com_PSET_TITTELFELT"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_VET"/>
	
		<Variants>
			<Variant Name="_"/>
			<Variant Name="HBP"/>
			<Variant Name="LBP"/>
			<Variant Name="SE1"/>
			<Variant Name="SE2"/>
			<Variant Name="(Linje start/slutt)"/>
		</Variants>
		
		<LuaExpression Name="LateralOffset"><Formula>0</Formula></LuaExpression>

		<LuaExpression Name="Variant"><Formula>_JBTKO_VET_Variant()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_VET_Variant()" ReturnType="String"
				Description="Analyzes local alignment vertical profile and returns nearest segment delimiters or vertex' 'Variant', i.e. type of vertical vertex.">
			<Signature>String _JBTKO_VET_Variant()</Signature>
			<Formula>
				function _JBTKO_VET_Variant()
					local ai = getAlignmentInfo()
					local nearestDelimiter = ai.NearestVerticalSegmentDelimiter
					if nearestDelimiter ~= nil then
						if nearestDelimiter.Type == "CurveStart" then return "SE1" end
						if nearestDelimiter.Type == "CurveEnd" then return "SE2" end
					end
					local nvv = ai.NearestVerticalVertex
					if nvv == nil then return "_" end
					if nvv.Type == "Crest" then return "HBP" end
					if nvv.Type == "Sag" then return "LBP" end
					if nvv.Type == "None" then return "(Linje start/slutt)" end
				end
			</Formula>
		</LuaFunction>

		<CustomProperty DataType="String" Name="PviInfo" DisplayName="PVI info"/>
		<TextAttribute Annotative="true" BindingProperty="PviInfo" CadAttributeTag="PVI_INFO" X="0" Y="-4" Layer="JBTKO@OBJEKTINFO" Color="ByBlock" Justify="MiddleCenter" Height="0.9" MText="true"/>
		<LuaExpression Name="PviInfo"><Formula>_JBTKO_VET_PviInfo()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_VET_PviInfo()" ReturnType="String"
				Description="Returns vertical profile info for crests and sags.">
			<Signature>String _JBTKO_VET_PviInfo()</Signature>
		<Formula>
			function _JBTKO_VET_PviInfo()
				local str = ""
				local ai = getAlignmentInfo()					
				local nearestDelimiter = ai.NearestVerticalSegmentDelimiter
				local nearestVertex = ai.NearestVerticalVertex
					
				if nearestVertex == nil then return "?" end
				if nearestDelimiter ~= nil and nearestDelimiter.Type ~= "Pvi" then
					if nearestDelimiter.Type == "CurveStart" then str = "SE1" end
					if nearestDelimiter.Type == "CurveEnd" then str = "SE2" end
				else
					if nearestVertex.Radius &lt; 0 then str = "R"..string.format("%.03f", nearestVertex.Radius) end
					if nearestVertex.Type == "None" then str = "(Linje start/slutt)" end
				end
				return str.."\\P".."H="..string.format("%.3f", nearestDelimiter.Elevation).." moh."	--meters above [mean] sea level
			end
		</Formula>
		</LuaFunction>
		
		<LuaExpression Name="Mileage"><Formula>_JBTKO_VET_Mileage()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_VET_Mileage()" ReturnType="Double"
				Description="Analyzes local alignment profile and returns nearest vertex' mileage.">
			<Signature>Double _JBTKO_VET_Mileage()</Signature>
			<Formula>
				function _JBTKO_VET_Mileage()
					local nearestDelimiter = getAlignmentInfo().NearestVerticalSegmentDelimiter
					return nearestDelimiter == nil and nil or nearestDelimiter.Mileage
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="code"><Formula>_JBTKO_VET_code()</Formula></LuaExpression>
		<LuaFunction Name="_JBTKO_VET_code()" ReturnType="String"
				Description= "Analyzes local alignment vertical profile and returns code for the nearest characteristic point.">
			<Signature>String _JBTKO_VET_code()</Signature>
			<Formula>
				function _JBTKO_VET_code()
					return Variant
				end
			</Formula>
		</LuaFunction>

		<LuaExpression Name="name"><Formula>code</Formula></LuaExpression>
		
		<!-- Just one InsertPointObject is needed, the formula on Variant will change to the correct Variant for us -->
		<InsertPointObject Name="Vertikalt geometripunkt"
				DisplayBlockName="NO-BN-2D-JBTKO_DIV-KARAKTERISTISK-PUNKT-{{SymbolMode}}"
				DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="1e-3">
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>vei</OwnAlignmentTargetSpace>
			<SetValue Key="MileageIncreasesTowardsLeft" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}"/>
		</InsertPointObject>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTKO_DIV-KARAKTERISTISK-PUNKT-{{SymbolMode}}" AllowSymbolMove="true">
			<Rotation AddAngle="{% assign mitl = {{alignmentRotation | minus:ucsRotation | cosisnegative}} %}{% if mitl == 'True' %}180{% else %}0{% endif %}"/>
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" DoNotIncludeInSymbolFrame="true"/>
	
	</ObjectType> 

	
	
<!--========================================================================================================
	TRACK AND EMBANKMENT
	ALIGNMENT HORIZONTAL GEOMETRY SEGMENT ANNOTATION
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETESection" Class="RailwayPlacedObject" LuaName="rctype_HorizontalGeometrySegment" Name="JBTKO_HOS Horisontalgeometrisegment"
				Layer="JBTKO_HOS" Color="ByLayer"
				Group="Overbygning/Karakteristiske trasÃ©punkter"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<!--Does not have a RelationSpace-->
	
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___SYMBOLFRAME"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT"/>
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___TRK"/>
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK"/>
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS"/>
		<xpp:expand select="NOBN_com_SET_OCP_STATION_REFERENCE"/>
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___WAYSIDE_GENERAL_OBJECT"/>
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE"/>

		<xpp:expand select="NOBN_com_PSET_BANE_NOR"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA"/>
		<xpp:expand select="NOBN_com_PSET_ISY_STK"/>
		<xpp:expand select="NOBN_com_PSET_TITTELFELT"/>

		<!-- NOTE!: Only multiline text / AttDef objects will interpret AutoCAD formatting characters such as newline or superscript. -->

		<!-- AutoCAD formatting codes: -->
		<!-- \P			Ends paragraph -->
		<!-- \Hvaluex;	Changes the text height to a multiple of the current text height	Example:	\H3x;RC					(shows 'RC' in three times normal text height) -->
		<!-- \S...^...;	Stacks the subsequent text at the /, #, or ^ symbol					Example:	1.000\S+0.010^-0.000;	(stacks +0.010 above -0.000) -->
		<!-- \Avalue;	Sets the alignment value; valid values: 0=bottom, 1=center, 2=top	Example:	\A1;1\S1/2				(prints 1 1/2 nicely) -->
		<!-- The complete code book is found here: -->
		<!-- https://knowledge.autodesk.com/support/autocad-lt/learn-explore/caas/CloudHelp/cloudhelp/2019/ENU/AutoCAD-LT/files/GUID-7D8BB40F-5C4E-4AE5-BD75-9ED7112E5967-htm.html -->
		<!-- Print '0/00' where the first zero is half size and alignent with top text, the second double-zero is also half size but aligned with bottom text: -->
		<!-- {\\H0.5x;\\A2;0}/{\\H0.5x;\\A0;00} -->
		<!-- InfinitySign = "{\\U+221E}" but it displays in an ugly boldface -->

		<!-- TODO: Make better code to treat situations where the cant station and the geometry change do not coincide.  -->
		<Variants>
			<Variant Name="Rettlinje">
				<LuaExpression Name="code">
					<Formula>Variant.."\\P".."L="..string.format("%.3f",getAlignmentInfo().Segment.Length).."\\PRL"</Formula>
				</LuaExpression>
			</Variant>
			<Variant Name="Kurve">
				<LuaExpression Name="code">
					<Formula>
						local ai = getAlignmentInfo()
						return Variant.."\\P".."L="..string.format("%.3f",ai.Segment.Length) .."\\P".."R="..string.format("%.3f",ai.Segment.RadiusStart)
					</Formula>
				</LuaExpression>
			</Variant>
			<Variant Name="Klotoide">
				<LuaExpression Name="code">
					<Formula>
						local ai = getAlignmentInfo()
						local segment = ai.Segment
						local text1
						if segment.RadiusStart == math.huge then 
							text1 = "RL"
						else
							text1 = "R"..string.format("%.3f",segment.RadiusStart)
						end
						
						local text2
						if segment.RadiusEnd == math.huge then
							text2 = "RL"
						else
							text2 = "R"..string.format("%.3f",segment.RadiusEnd)
						end
						
						local vector = ai.Tangent
						local tangentAngle2D = math.atan(vector.Y,vector.Z)
						if (math.cos(getUcsAngle() - tangentAngle2D) &lt; 0) then
							text = "&lt;"..text2.."-"..text1.."&gt;"
						else
							text = "&lt;"..text1.."-"..text2.."&gt;"
						end
						
						return Variant.."\\P".."L="..string.format("%.3f",ai.Segment.Length).."\\P"..text
					</Formula>
				</LuaExpression>
			</Variant>
		</Variants>
		
		<LuaExpression Name="Variant">		   
			<Formula>
				type = getAlignmentInfo().Segment.Type
				if type == "Straight" then return "Rettlinje" end
				if type == "Curve" then return "Kurve" end
				if type == "Clothoid" then return "Klotoide" end
			</Formula>
		</LuaExpression>
		
		<LuaExpression Name="LateralOffset">
			<Formula>
				local sc = DocumentData.Document.Database.Cannoscale.Scale --Annotative scale
				if RcType:upper():match("SEGMENT") then
					local d = getPropertyValue("LateralOffset")
					if d == 0 then 
						return -6/sc
					else
						return RC__getNearestSnapDistance(d*sc,3)/sc
					end
				else 
					return RightSided and 1e-3 or -1e-3 
				end
			</Formula>
		</LuaExpression>

		<InsertPointObject Name="Horisontalgeometrisegment"
				DisplayBlockName="NO-BN-2D-JBTRC_SEKSJON-INNSETTING-SYMBOL-Schematic" 
				DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="1e-3">
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>vei</OwnAlignmentTargetSpace>
			<LuaExpression Name="DelimiterType"><Formula>rctype_HorizontalGeometryVertex</Formula></LuaExpression>
			<SetValue Key="MileageIncreasesTowardsLeft" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}"/>
		</InsertPointObject>
		
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTFE_SEK-SEKSJON-{{SymbolMode}}" AllowSymbolMove="true">
			<Rotation AddAngle="{% assign mitl = {{alignmentRotation | minus:ucsRotation | cosisnegative}} %}{% if mitl == 'True' %}180{% else %}0{% endif %}"/>
			<SymbolAttribute Tag="X"><Value>{{code}}</Value></SymbolAttribute>
		</SymbolDefinition>
	</ObjectType>


	
<!--========================================================================================================
	TRACK AND EMBANKMENT
	ALIGNMENT VERTICAL PROFILE SEGMENT ANNOTATION
=========================================================================================================-->
	<ObjectType DataType="RailCOMPLETESection" Class="RailwayPlacedObject" LuaName="rctype_VerticalProfileSegment" Name="JBTKO_VES Vertikalprofilsegment"
				Layer="JBTKO_VES" Color="ByLayer"
				Group="Overbygning/Karakteristiske trasÃ©punkter"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
	>
		<!--Does not have a RelationSpace-->
	
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___SYMBOLFRAME"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___MILEAGE_INCREASES_TOWARDS_LEFT"/>
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___TRK"/>
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK"/>
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS"/>
		<xpp:expand select="NOBN_com_SET_OCP_STATION_REFERENCE"/>
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___WAYSIDE_GENERAL_OBJECT"/>
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE"/>
		<xpp:expand select="NOBN_com_PSET_BANE_NOR"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA"/>
		<xpp:expand select="NOBN_com_PSET_ISY_STK"/>
		<xpp:expand select="NOBN_com_PSET_TITTELFELT"/>
		
		<!-- NOTE!: Only multiline text / AttDef objects will interpret AutoCAD formatting characters such as newline or superscript. -->

		<!-- AutoCAD formatting codes: -->
		<!-- \P			Ends paragraph -->
		<!-- \Hvaluex;	Changes the text height to a multiple of the current text height	Example:	\H3x;RC					(shows 'RC' in three times normal text height) -->
		<!-- \S...^...;	Stacks the subsequent text at the /, #, or ^ symbol					Example:	1.000\S+0.010^-0.000;	(stacks +0.010 above -0.000) -->
		<!-- \Avalue;	Sets the alignment value; valid values: 0=bottom, 1=center, 2=top	Example:	\A1;1\S1/2				(prints 1 1/2 nicely) -->
		<!-- The complete code book is found here: -->
		<!-- https://knowledge.autodesk.com/support/autocad-lt/learn-explore/caas/CloudHelp/cloudhelp/2019/ENU/AutoCAD-LT/files/GUID-7D8BB40F-5C4E-4AE5-BD75-9ED7112E5967-htm.html -->
		<!-- Print '0/00' where the first zero is half size and alignent with top text, the second double-zero is also half size but aligned with bottom text: -->
		<!-- {\\H0.5x;\\A2;0}/{\\H0.5x;\\A0;00} -->
		<!-- InfinitySign = "{\\U+221E}" but it displays in an ugly boldface -->

		<Variants>
			<!-- <Variant Name="Straight"> -->
			<Variant Name="Gradient">
				<LuaExpression Name="code">
					<Formula>
						Variant.."\\P"..string.format("%.1f",getAlignmentInfo().Gradient).." {\\H0.5x;\\A2;0}/{\\H0.5x;\\A0;00}"
					</Formula>
				</LuaExpression>
			</Variant>
			<Variant Name="HBP">
				<LuaExpression Name="code">
					<Formula>
						local ai = getAlignmentInfo()
						local nvv = ai.NearestVerticalVertex
						local pviElevation = string.format("%.3f", nvv.Elevation)
						local trackElevation = string.format("%.3f", ai.Elevation)
						local length3D = string.format("%.3f", nvv.Length)
						local radius = string.format("%.3f", nvv.Radius)
						return Variant.."\\P".."Hpvi="..pviElevation.."\\P".."Hspor="..trackElevation.."\\P".."L3D="..length3D.."\\P".."R="..radius
					</Formula>
				</LuaExpression>
			</Variant>
			<!-- <Variant Name="Circular rounding, sag"> -->
			<Variant Name="LBP">
				<LuaExpression Name="code">
					<Formula>
						local ai = getAlignmentInfo()
						local nvv = ai.NearestVerticalVertex
						local pviElevation = string.format("%.3f", nvv.Elevation)
						local trackElevation = string.format("%.3f", ai.Elevation)
						local length3D = string.format("%.3f", nvv.Length)
						local radius = string.format("%.3f", nvv.Radius)
						return Variant.."\\P".."Hpvi="..pviElevation.."\\P".."Hspor="..trackElevation.."\\P".."L3D="..length3D.."\\P".."R="..radius
					</Formula>
				</LuaExpression>
			</Variant>
		</Variants>
		
		<LuaExpression Name="Variant">		   
			<Formula>
				local nvv = getAlignmentInfo().NearestVerticalVertex
				if nvv.Type == "None" then return "Gradient"
				elseif nvv.Type == "Crest" then return nvv.Radius &lt; 4e-4 and "Gradient" or "HBP"
				elseif nvv.Type == "Sag" then return nvv.Radius &lt; 4e-4 and "Gradient" or "LBP"
				else return _info("Bad Vertical Vertex Type: "..nvv.Type),_warning
				end
			</Formula>
		</LuaExpression>

		<LuaExpression Name="LateralOffset">
			<Formula>
				local sc = DocumentData.Document.Database.Cannoscale.Scale --Annotative scale
				if RcType:upper():match("SEGMENT") then
					local d = getPropertyValue("LateralOffset")
					if d == 0 then 
						return -6/sc
					else
						return RC__getNearestSnapDistance(d*sc,3)/sc
					end
				else 
					return RightSided and 1e-3 or -1e-3 
				end
			</Formula>
		</LuaExpression>

		<InsertPointObject Name="Vertikalprofilsegment"
				DisplayBlockName="NO-BN-2D-JBTRC_SEKSJON-INNSETTING-SYMBOL-Schematic" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="1e-3">
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<OwnAlignmentTargetSpace>vei</OwnAlignmentTargetSpace>
			<LuaExpression Name="DelimiterType"><Formula>rctype_VerticalProfileVertex</Formula></LuaExpression>
			<SetValue Key="MileageIncreasesTowardsLeft" Value="{{alignmentRotation | minus:ucsRotation | cosisnegative}}"/>
		</InsertPointObject>
		
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTFE_SEK-SEKSJON-{{SymbolMode}}" AllowSymbolMove="true">
			<Rotation AddAngle="{% assign mitl = {{alignmentRotation | minus:ucsRotation | cosisnegative}} %}{% if mitl == 'True' %}180{% else %}0{% endif %}"/>
			<SymbolAttribute Tag="X"><Value>{{code}}</Value></SymbolAttribute>
		</SymbolDefinition>
	</ObjectType>
			


<!--========================================================================================================
	TRACK AND EMBANKMENT
	PLATFORMS
=========================================================================================================-->
	<ObjectType DataType="tElementWithAlignment" Class="RailwayAlignment" LuaName="rctype_PlatformEdge" Name="JBTKO_PLF Plattformkant"
				Layer="JBTKO_PLF" Color="ByLayer"
				Group="Overbygning/Plattformer"
				>

		<RelationSpace>plattformkant</RelationSpace>

		<xpp:expand select="NOBN_com_DEROGATION"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR"/>
		<xpp:expand select="NOBN_com_STD_TEXTATTRIBUTES___HORIZONTAL_AND_CLOSE___TRK"/>
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK"/>
		<xpp:expand select="NOBN_com_PSET_BANE_NOR"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA"/>
		<xpp:expand select="NOBN_com_PSET_ISY_STK"/>
		<xpp:expand select="NOBN_com_PSET_TITTELFELT"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_PLF"/>

		<Variants DefaultValue="Plattformelementer, betong, 1m bredde, 2m lengde, hÃ¸yre side">
			<Variant Name="Plattformelementer, betong, 1m bredde, 2m lengde, hÃ¸yre side">
				<SetValue Key="IteratedGeometry3D_0.Name" Value="NO-BN-3D-KO-PLF-PLATTFORMELEMENT-1000-2000-VSIDE"/>
				<SetValue Key="IteratedGeometry3D_0.Separation" Value="2.0"/>
				<SetValue Key="IteratedGeometry3D_0.InitialLinearOffset" Value="1.0"/>
			</Variant>
			<Variant Name="Plattformelementer, betong, 1m bredde, 2m lengde, venstre side">
				<SetValue Key="IteratedGeometry3D_0.Name" Value="NO-BN-3D-KO-PLF-PLATTFORMELEMENT-1000-2000-VSIDE"/>
				<SetValue Key="IteratedGeometry3D_0.Separation" Value="2.0"/>
				<SetValue Key="IteratedGeometry3D_0.InitialLinearOffset" Value="1.0"/>
			</Variant>
		</Variants>

		<AlignmentSystems DefaultSystemName="Plattformkant">
			<AlignmentSystem Name="Plattformkant"
				CantGauge="0.000"
				AlignmentGauge="0.000"
				LiftWithCant="false"
			 />
		</AlignmentSystems>

		<DynamicProperty Type="Representation3D" Subtype="IteratedGeometry3D">
			<SetValue Key="RotationBeforeOffset" Value="True"/>
			<SetValue Key="CustomTransformation" Value="false"/>
		</DynamicProperty>


		<!-- RailCOMPLETE provides the '_position' reserved identifier, sampled along the alignment, to be used in e.g. getAlignmentInfo() etc. -->
		<LuaExpression Name="IteratedGeometry3D_0.Rotation.X"><Formula>NOBN_trk_getPitchFromGradient(_position)</Formula></LuaExpression>
		<LuaExpression Name="IteratedGeometry3D_0.Rotation.Y"><Formula>NOBN_trk_getRollFromCant(_position)</Formula></LuaExpression>
		<LuaExpression Name="IteratedGeometry3D_0.Rotation.Z"><Formula>0</Formula></LuaExpression>

		<LuaExpression Name="name"><Formula>code</Formula></LuaExpression>

		<PropertyPrompt Key="code" DefaultValue="Plattformkant" AcceptEmptyValue="false"/>
		
		<InsertAlignment Name="Plattformelementer, betong, 1m bredde, 2m lengde, hÃ¸yre side" 
				DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-PLATFORM-ELEMENT-Schematic"
				DefaultToTangentContinuity="true">
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>
		
		<InsertAlignment Name="Plattformelementer, betong, 1m bredde, 2m lengde, venstre side" 
				DisplayBlockName="NO-BN-2D-JBTRC_THUMBNAIL-PLATFORM-ELEMENT-Schematic"
				DefaultToTangentContinuity="true">
			<IncludeSegmentType>Tangent</IncludeSegmentType>
			<IncludeSegmentType>Curve</IncludeSegmentType>
		</InsertAlignment>

	</ObjectType>

			

<!--========================================================================================================
	OVERBYGNING
	SPORSTOPPERE
	JBTKO_SST Sporstopper
=========================================================================================================-->
	<ObjectType DataType="tOrientedElement" Class="RailwayPlacedObject" LuaName="rctype_BufferStop" Name="JBTKO_SST Sporstopper"
				Layer="JBTKO_SST" Color="ByLayer"
				Group="Overbygning/Sporstoppere"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<RelationSpace>sporstopper</RelationSpace>

		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___SYMBOLFRAME"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR"/>
		<xpp:expand select="NOBN_com_STD_TEXATTRIBUTES___VERTICAL_AND_FAR___TRK"/>
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK"/>
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS"/>
		<xpp:expand select="NOBN_com_SET_OCP_STATION_REFERENCE"/>
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TRACKBOUND_OBJECT"/>
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_NONE"/>
		<xpp:expand select="NOBN_com_PSET_BANE_NOR"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA"/>
		<xpp:expand select="NOBN_com_PSET_ISY_STK"/>
		<xpp:expand select="NOBN_com_PSET_TITTELFELT"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_SST"/>
		
		<Variants DefaultValue="Fast">
			<Variant Name="Fast">
				<SetValue Key="Geometry3D_0.Name" Value="NO-BN-3D-KO-SST-SPORSTOPPER-FAST"/>
			</Variant>
			<Variant Name="Glidbar">
				<SetValue Key="Geometry3D_0.Name" Value="NO-BN-3D-KO-SST-SPORSTOPPER-GLIDBAR"/>
			</Variant>
			<Variant Name="Hydraulisk">
				<SetValue Key="Geometry3D_0.Name" Value="NO-BN-3D-KO-SST-SPORSTOPPER-HYDRAULISK"/>
			</Variant>
		</Variants>
		
		<LuaExpression Name="LateralOffset">		   
			<Formula>NOBN_trk_getLateralOffsetFromCantAndTrackPlaneDistance(RightSided and 1e-3 or -1e-3)</Formula>
		</LuaExpression>

		<LuaExpression Name="name"><Formula>"Sst."..Variant:sub(1,4).."."..code</Formula></LuaExpression>
		
		<InsertPointObject Name="Fast" DisplayBlockName="NO-BN-2D-JBTKO_SST-SPORSTOPPER-FAST-{{SymbolMode}}" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="1e-3">
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true"/>
		</InsertPointObject>
		
		<InsertPointObject Name="Glidbar" DisplayBlockName="NO-BN-2D-JBTKO_SST-SPORSTOPPER-GLIDBAR-{{SymbolMode}}" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="1e-3">
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true"/>
		</InsertPointObject>
		
		<InsertPointObject Name="Hydraulisk" DisplayBlockName="NO-BN-2D-JBTKO_SST-SPORSTOPPER-HYDRAULISK-{{SymbolMode}}" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="1e-3">
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="true"/>
		</InsertPointObject>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTKO_SST-SPORSTOPPER-FAST" AllowSymbolMove="true">
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}"/>	
			<BlockNameFormat JoinBy="-">
			NO-BN-2D-JBTKO_SST-SPORSTOPPER
			{% if Variant == 'Fast' %}FAST
			{% elsif Variant == 'Glidbar' %}GLIDBAR
			{% elsif Variant == 'Hydraulisk' %}HYDRAULISK
			{% endif %}
			{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" DoNotIncludeInSymbolFrame="true"/>
	</ObjectType>



<!--========================================================================================================
	TRACK AND EMBANKMENT
	PROTECTION BEAM AGAINST SNOW CLEARING MACHINES
=========================================================================================================-->
	<!-- JBTKO_MVS OppkjÃ¸rsbjelke (Maskinelt Vedlikehold av Spor) -->
	<ObjectType DataType="tOrientedElement" Class="RailwayPlacedObject" LuaName="rctype_SnowClearingProtectiveBeam" Name="JBTKO_MVS OppkjÃ¸rsbjelke"
				Layer="JBTKO_MVS" Color="ByLayer"
				Group="Overbygning/OppkjÃ¸rsbjelker"
				AttMirrorY="{% if RightSided %}true{% else %}false{% endif %}"
				>
				
		<RelationSpace>oppkjÃ¸rsbjelke</RelationSpace>
		
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___SYMBOLFRAME"/>
		<xpp:expand select="NOBN_com_STD_CUSTOMATTRIBUTES___VAR"/>
		<xpp:expand select="NOBN_com_STD_TEXATTRIBUTES___VERTICAL_AND_FAR___TRK"/>
		<xpp:expand select="NOBN_com_DISCIPLINE___TRK"/>
		<xpp:expand select="NOBN_com_CHK_NUMBER_OF_OCP_AREAS"/>
		<xpp:expand select="NOBN_com_SET_OCP_STATION_REFERENCE"/>
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___TRACKBOUND_OBJECT"/>
		<xpp:expand select="NOBN_com_STD_LUAEXPRESSIONS___EARTHED_TO_RAIL"/>
		<xpp:expand select="NOBN_com_PSET_BANE_NOR"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA"/>
		<xpp:expand select="NOBN_com_PSET_ISY_STK"/>
		<xpp:expand select="NOBN_com_PSET_TITTELFELT"/>
		<xpp:expand select="NOBN_com_PSET_FDV_BANEDATA_KO_MVS"/>

		<Variants>
			<Variant Name="OppkjÃ¸rsbjelke, kort">
				<SetValue Key="Geometry3D_0.Name" Value="NO-BN-3D-KO-MVS-OPPKJÃRSBJELKE-KORT"/>
			</Variant>
			<Variant Name="OppkjÃ¸rsbjelke, lang">
				<SetValue Key="Geometry3D_0.Name" Value="NO-BN-3D-KO-MVS-OPPKJÃRSBJELKE-LANG"/>
			</Variant>
		</Variants>
		
		<LuaExpression Name="LateralOffset">		   
			<Formula>NOBN_trk_getLateralOffsetFromCantAndTrackPlaneDistance(RightSided and 1e-3 or -1e-3)</Formula>
		</LuaExpression>

		<LuaExpression Name="dir"><Formula>"up"</Formula></LuaExpression>

		 <!-- TODO: 3D object model should be adapted to the commonest sleeper and rail type. 60E1 rails are 0.172mm high.  -->
		<SetValue Key="name" Value="OppkjÃ¸rsbjelke"/>
		
		<InsertPointObject Name="OppkjÃ¸rsbjelke, kort" DisplayBlockName="NO-BN-2D-JBTKO_MVS-OPPKJOERSBJELKE-{{SymbolMode}}" 
                DefaultSnapMode="Alignment" SnapToAlignment="true" SnapDistance="1e-3">
			<OwnAlignmentTargetSpace>spor</OwnAlignmentTargetSpace>
			<JigSymbolAppearance AddAngle="-90" EnableDirectionSetting="false"/>
		</InsertPointObject>

		<!-- Note: LeftSided == RightSided == false whenever DistanceToAlignment is exactly zero - rather use 1e-3 as DistanceToAlignment. -->
		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTKO_MVS-OPPKJOERSBJELKE" AllowSymbolMove="true">
			<Rotation Add180DegreesIfDirIsDown="false" AddAngle="{% if dir == 'up' %}{{270.0|plus:AngularOffset}}
														{% elsif dir == 'down' %}{{90.0|plus:AngularOffset}}
														{% elsif dir == 'both' and RightSided %}{{180.0|plus:AngularOffset}}
														{% elsif dir == 'both' and LeftSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and RightSided %}{{0.0|plus:AngularOffset}}
														{% elsif dir == 'none' and LeftSided %}{{180.0|plus:AngularOffset}}
														{% else %}45.0
														{% endif %}"/>	
			<BlockNameFormat JoinBy="-">
				NO-BN-2D-JBTKO_MVS-OPPKJOERSBJELKE-{{SymbolMode}}
			</BlockNameFormat>
		</SymbolDefinition>

		<SymbolDefinition DefaultBlockName="NO-BN-2D-JBTRC_INNSETTINGSPUNKT-Schematic" DoNotIncludeInSymbolFrame="true"/>
	</ObjectType>



<!--========================================================================================================
    End of file 
=========================================================================================================-->
</xpp:bloc>
