function NOBN_trk_getVariantForNearestHorizontalVertex()
	ai = getAlignmentInfo()
	nhv = ai.NearestHorizontalVertex
	ncv = ai.NearestCantVertex
	-- insert "RE,RB" if cant station is closest
	nhvMileage = (nhv.Item1 ~= nil) and nhv.Item1.EndMileage or nhv.Item2.StartMileage
s = ""
s = s.."\nai.Mileage="..RC__toKm(ai.Mileage)
s = s..", nhv.Mileage="..RC__toKm(nhv.Mileage)
s = s..", ncv.Mileage="..RC__toKm(ncv.Mileage)
s = s.."\n".. ((ncv == nil) and "(ncv==nil)" or "(ncv!=nil)")
s = s.."\nnhv.Item1.StartMileage="..RC__toKm(nhv.Item1.StartMileage)
s = s..", nhv.Item1.EndMileage="..RC__toKm(nhv.Item1.EndMileage)
s = s.."\nnhv.Item2.StartMileage="..RC__toKm(nhv.Item2.StartMileage)
s = s..", nhv.Item2.EndMileage="..RC__toKm(nhv.Item2.EndMileage)
	if ncv ~= null and math.abs(ncv.Mileage - ai.Mileage) < math.abs(nhvMileage - ai.Mileage)
						and math.abs(nhvMileage - ai.Mileage) > 1 then
		if math.abs(ncv.GradientIn) > 0 and math.abs(ncv.GradientOut) > 0 then
			return "REB",_info(s)
		elseif (ncv.GradientIn == nil or ncv.GradientIn == 0) and math.abs(ncv.GradientOut) > 0 then
			return "RB",_info(s)
		elseif (ncv.GradientOut == nil or ncv.GradientOut == 0) and math.abs(ncv.GradientIn) > 0 then
			return "RE",_info(s)
		end
	end
	if nhv == nil then return "" end
	if nhv.Item1 ~= null and nhv.Item1.Type == "Curve" then
		if nhv.Item2 == nil or nhv.Item2.Type == "Straight",_info(s)  then return "KP",_info(s) end
		if nhv.Item2.Type == "Curve" then return "FKP",_info(s) end
	end
	if nhv.Item2 ~= null and nhv.Item2.Type == "Curve" then
		if nhv.Item1 == nil or nhv.Item1.Type == "Straight" then return "KP",_info(s) end
	end
	if nhv.Item1 ~= null and nhv.Item1.Type == "Clothoid" then
		if nhv.Item2 ~= null and nhv.Item2.Type == "Clothoid" then 
			if nhv.Item1.RadiusStart < nhv.Item1.RadiusEnd then return "FOB",_info(s) else return "FOE",_info(s) end
		end
		if nhv.Item1.RadiusStart < nhv.Item1.RadiusEnd then return "OB",_info(s) else return "OE",_info(s) end
	end
	if nhv.Item2 ~= null and nhv.Item2.Type == "Clothoid" then 
		if nhv.Item2.RadiusEnd < nhv.Item2.RadiusStart then return "OB",_info(s) else return "OE",_info(s) end
	end
	return "",_info(s)
end	
return NOBN_trk_getVariantForNearestHorizontalVertex()